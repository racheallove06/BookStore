{
	"id": "ae1e6910a031419a06d0fb8b2ed356b6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/PatientDataRevised.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\n\r\ncontract PatientDataManagement {\r\n    using SafeERC20 for IERC20;\r\n\r\n    // Token interface\r\n    IERC20 public rewardToken;\r\n\r\n    // Token rewards per action\r\n    uint256 public constant TOKEN_REWARD = 10 * (10 ** 18); // Assuming token has 18 decimals\r\n\r\n    // Mapping to store patient health data\r\n    struct HealthData {\r\n        uint256 timestamp;\r\n        uint256 glucoseLevel;\r\n        string medication;\r\n        string meals;\r\n        string exercise;\r\n    }\r\n\r\n    // Mapping to store health data for each patient (address)\r\n    mapping(address => HealthData[]) private patientData;\r\n\r\n    // Mapping to track authorized researchers/providers for data access\r\n    mapping(address => mapping(address => bool)) private accessPermissions;\r\n\r\n    // Event emitted when health data is logged\r\n    event DataLogged(address indexed patient, uint256 timestamp, uint256 reward);\r\n\r\n    // Event emitted when access is granted or revoked\r\n    event AccessUpdated(address indexed patient, address indexed accessor, bool isGranted, uint256 reward);\r\n\r\n    // Event emitted when tokens are claimed\r\n    event TokensClaimed(address indexed user, uint256 amount);\r\n\r\n    // Constructor to initialize the reward token\r\n    constructor(address _rewardToken) {\r\n        require(_rewardToken != address(0), \"Invalid token address\");\r\n        rewardToken = IERC20(_rewardToken);\r\n    }\r\n\r\n    // Function for patients to log their health data\r\n    function logHealthData(\r\n        uint256 _glucoseLevel,\r\n        string memory _medication,\r\n        string memory _meals,\r\n        string memory _exercise\r\n    ) public {\r\n        HealthData memory newData = HealthData({\r\n            timestamp: block.timestamp,\r\n            glucoseLevel: _glucoseLevel,\r\n            medication: _medication,\r\n            meals: _meals,\r\n            exercise: _exercise\r\n        });\r\n        patientData[msg.sender].push(newData);\r\n\r\n        // Reward the patient with tokens\r\n        rewardToken.safeTransfer(msg.sender, TOKEN_REWARD);\r\n\r\n        emit DataLogged(msg.sender, block.timestamp, TOKEN_REWARD);\r\n    }\r\n\r\n    // Function for patients to grant or revoke access to their data\r\n    function updateAccess(address _accessor, bool _isGranted) public {\r\n        accessPermissions[msg.sender][_accessor] = _isGranted;\r\n\r\n        // Reward the patient with tokens for managing permissions\r\n        rewardToken.safeTransfer(msg.sender, TOKEN_REWARD);\r\n\r\n        emit AccessUpdated(msg.sender, _accessor, _isGranted, TOKEN_REWARD);\r\n    }\r\n\r\n    // Function for authorized users to view a patient's health data\r\n    function viewHealthData(address _patient) public view returns (HealthData[] memory) {\r\n        require(\r\n            _patient == msg.sender || accessPermissions[_patient][msg.sender],\r\n            \"Access not authorized\"\r\n        );\r\n        return patientData[_patient];\r\n    }\r\n\r\n    // Function to claim tokens (if reward system requires accumulation)\r\n    function claimTokens(uint256 amount) public {\r\n        require(amount > 0, \"Amount must be greater than zero\");\r\n        require(rewardToken.balanceOf(address(this)) >= amount, \"Insufficient contract balance\");\r\n\r\n        rewardToken.safeTransfer(msg.sender, amount);\r\n        emit TokensClaimed(msg.sender, amount);\r\n    }\r\n\r\n    // Additional feature: Check token balance of the contract\r\n    function contractTokenBalance() public view returns (uint256) {\r\n        return rewardToken.balanceOf(address(this));\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:9390  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:9390  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205558d9f32c893362baa9f886c0063415bdbcdc2b63309f23eac1d495ae9a566b64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205558d9f32c893362baa9f886c0063415bdbcdc2b63309f23eac1d495ae9a566b64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE PC 0xD9 RETURN 0x2C DUP10 CALLER PUSH3 0xBAA9F8 DUP7 0xC0 MOD CALLVALUE ISZERO 0xBD 0xBC 0xDC 0x2B PUSH4 0x309F23EA 0xC1 0xD4 SWAP6 0xAE SWAP11 JUMP PUSH12 0x64736F6C634300081A003300 ",
							"sourceMap": "698:8692:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205558d9f32c893362baa9f886c0063415bdbcdc2b63309f23eac1d495ae9a566b64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE PC 0xD9 RETURN 0x2C DUP10 CALLER PUSH3 0xBAA9F8 DUP7 0xC0 MOD CALLVALUE ISZERO 0xBD 0xBC 0xDC 0x2B PUSH4 0x309F23EA 0xC1 0xD4 SWAP6 0xAE SWAP11 JUMP PUSH12 0x64736F6C634300081A003300 ",
							"sourceMap": "698:8692:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205558d9f32c893362baa9f886c0063415bdbcdc2b63309f23eac1d495ae9a566b64736f6c634300081a0033",
									".code": [
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/PatientDataRevised.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/PatientDataRevised.sol": {
				"PatientDataManagement": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_rewardToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "patient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "accessor",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isGranted",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "AccessUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "patient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "DataLogged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensClaimed",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "TOKEN_REWARD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "claimTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "contractTokenBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_glucoseLevel",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "_medication",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_meals",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_exercise",
									"type": "string"
								}
							],
							"name": "logHealthData",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_accessor",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_isGranted",
									"type": "bool"
								}
							],
							"name": "updateAccess",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_patient",
									"type": "address"
								}
							],
							"name": "viewHealthData",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "timestamp",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "glucoseLevel",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "medication",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "meals",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "exercise",
											"type": "string"
										}
									],
									"internalType": "struct PatientDataManagement.HealthData[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/PatientDataRevised.sol\":187:3660  contract PatientDataManagement {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/PatientDataRevised.sol\":1405:1563  constructor(address _rewardToken) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/PatientDataRevised.sol\":1482:1483  0 */\n  0x00\n    /* \"contracts/PatientDataRevised.sol\":1458:1484  _rewardToken != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/PatientDataRevised.sol\":1458:1470  _rewardToken */\n  dup2\n    /* \"contracts/PatientDataRevised.sol\":1458:1484  _rewardToken != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/PatientDataRevised.sol\":1450:1510  require(_rewardToken != address(0), \"Invalid token address\") */\n  tag_6\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_7\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_6:\n    /* \"contracts/PatientDataRevised.sol\":1542:1554  _rewardToken */\n  dup1\n    /* \"contracts/PatientDataRevised.sol\":1521:1532  rewardToken */\n  0x00\n  dup1\n    /* \"contracts/PatientDataRevised.sol\":1521:1555  rewardToken = IERC20(_rewardToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/PatientDataRevised.sol\":1405:1563  constructor(address _rewardToken) {... */\n  pop\n    /* \"contracts/PatientDataRevised.sol\":187:3660  contract PatientDataManagement {... */\n  jump(tag_9)\n    /* \"#utility.yul\":88:205   */\ntag_11:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_13:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_14:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_26\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_13\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_15:\n    /* \"#utility.yul\":641:665   */\n  tag_28\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_14\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_29:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_16:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_31\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_15\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_34\n  tag_11\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":932:1051   */\ntag_33:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_35\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_16\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1371   */\ntag_17:\n    /* \"#utility.yul\":1286:1297   */\n  0x00\n    /* \"#utility.yul\":1320:1326   */\n  dup3\n    /* \"#utility.yul\":1315:1318   */\n  dup3\n    /* \"#utility.yul\":1308:1327   */\n  mstore\n    /* \"#utility.yul\":1360:1364   */\n  0x20\n    /* \"#utility.yul\":1355:1358   */\n  dup3\n    /* \"#utility.yul\":1351:1365   */\n  add\n    /* \"#utility.yul\":1336:1365   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1371   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1377:1548   */\ntag_18:\n    /* \"#utility.yul\":1517:1540   */\n  0x496e76616c696420746f6b656e20616464726573730000000000000000000000\n    /* \"#utility.yul\":1513:1514   */\n  0x00\n    /* \"#utility.yul\":1505:1511   */\n  dup3\n    /* \"#utility.yul\":1501:1515   */\n  add\n    /* \"#utility.yul\":1494:1541   */\n  mstore\n    /* \"#utility.yul\":1377:1548   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1554:1920   */\ntag_19:\n    /* \"#utility.yul\":1696:1699   */\n  0x00\n    /* \"#utility.yul\":1717:1784   */\n  tag_39\n    /* \"#utility.yul\":1781:1783   */\n  0x15\n    /* \"#utility.yul\":1776:1779   */\n  dup4\n    /* \"#utility.yul\":1717:1784   */\n  tag_17\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1710:1784   */\n  swap2\n  pop\n    /* \"#utility.yul\":1793:1886   */\n  tag_40\n    /* \"#utility.yul\":1882:1885   */\n  dup3\n    /* \"#utility.yul\":1793:1886   */\n  tag_18\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1911:1913   */\n  0x20\n    /* \"#utility.yul\":1906:1909   */\n  dup3\n    /* \"#utility.yul\":1902:1914   */\n  add\n    /* \"#utility.yul\":1895:1914   */\n  swap1\n  pop\n    /* \"#utility.yul\":1554:1920   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1926:2345   */\ntag_8:\n    /* \"#utility.yul\":2092:2096   */\n  0x00\n    /* \"#utility.yul\":2130:2132   */\n  0x20\n    /* \"#utility.yul\":2119:2128   */\n  dup3\n    /* \"#utility.yul\":2115:2133   */\n  add\n    /* \"#utility.yul\":2107:2133   */\n  swap1\n  pop\n    /* \"#utility.yul\":2179:2188   */\n  dup2\n    /* \"#utility.yul\":2173:2177   */\n  dup2\n    /* \"#utility.yul\":2169:2189   */\n  sub\n    /* \"#utility.yul\":2165:2166   */\n  0x00\n    /* \"#utility.yul\":2154:2163   */\n  dup4\n    /* \"#utility.yul\":2150:2167   */\n  add\n    /* \"#utility.yul\":2143:2190   */\n  mstore\n    /* \"#utility.yul\":2207:2338   */\n  tag_42\n    /* \"#utility.yul\":2333:2337   */\n  dup2\n    /* \"#utility.yul\":2207:2338   */\n  tag_19\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":2199:2338   */\n  swap1\n  pop\n    /* \"#utility.yul\":1926:2345   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/PatientDataRevised.sol\":187:3660  contract PatientDataManagement {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/PatientDataRevised.sol\":187:3660  contract PatientDataManagement {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9e9aed62\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x9e9aed62\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xa94f5766\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xd4ba8902\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf7c618c1\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x05c17521\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0c66f928\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x46e04a2f\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/PatientDataRevised.sol\":2778:3056  function viewHealthData(address _patient) public view returns (HealthData[] memory) {... */\n    tag_3:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PatientDataRevised.sol\":2352:2700  function updateAccess(address _accessor, bool _isGranted) public {... */\n    tag_4:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      stop\n        /* \"contracts/PatientDataRevised.sol\":3138:3461  function claimTokens(uint256 amount) public {... */\n    tag_5:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      stop\n        /* \"contracts/PatientDataRevised.sol\":3533:3657  function contractTokenBalance() public view returns (uint256) {... */\n    tag_6:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PatientDataRevised.sol\":1626:2274  function logHealthData(... */\n    tag_7:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      stop\n        /* \"contracts/PatientDataRevised.sol\":351:405  uint256 public constant TOKEN_REWARD = 10 * (10 ** 18) */\n    tag_8:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PatientDataRevised.sol\":284:309  IERC20 public rewardToken */\n    tag_9:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PatientDataRevised.sol\":2778:3056  function viewHealthData(address _patient) public view returns (HealthData[] memory) {... */\n    tag_14:\n        /* \"contracts/PatientDataRevised.sol\":2841:2860  HealthData[] memory */\n      0x60\n        /* \"contracts/PatientDataRevised.sol\":2907:2917  msg.sender */\n      caller\n        /* \"contracts/PatientDataRevised.sol\":2895:2917  _patient == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PatientDataRevised.sol\":2895:2903  _patient */\n      dup3\n        /* \"contracts/PatientDataRevised.sol\":2895:2917  _patient == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/PatientDataRevised.sol\":2895:2960  _patient == msg.sender || accessPermissions[_patient][msg.sender] */\n      dup1\n      tag_41\n      jumpi\n      pop\n        /* \"contracts/PatientDataRevised.sol\":2921:2938  accessPermissions */\n      0x02\n        /* \"contracts/PatientDataRevised.sol\":2921:2948  accessPermissions[_patient] */\n      0x00\n        /* \"contracts/PatientDataRevised.sol\":2939:2947  _patient */\n      dup4\n        /* \"contracts/PatientDataRevised.sol\":2921:2948  accessPermissions[_patient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PatientDataRevised.sol\":2921:2960  accessPermissions[_patient][msg.sender] */\n      0x00\n        /* \"contracts/PatientDataRevised.sol\":2949:2959  msg.sender */\n      caller\n        /* \"contracts/PatientDataRevised.sol\":2921:2960  accessPermissions[_patient][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/PatientDataRevised.sol\":2895:2960  _patient == msg.sender || accessPermissions[_patient][msg.sender] */\n    tag_41:\n        /* \"contracts/PatientDataRevised.sol\":2873:3009  require(... */\n      tag_42\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_43\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_42:\n        /* \"contracts/PatientDataRevised.sol\":3027:3038  patientData */\n      0x01\n        /* \"contracts/PatientDataRevised.sol\":3027:3048  patientData[_patient] */\n      0x00\n        /* \"contracts/PatientDataRevised.sol\":3039:3047  _patient */\n      dup4\n        /* \"contracts/PatientDataRevised.sol\":3027:3048  patientData[_patient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PatientDataRevised.sol\":3020:3048  return patientData[_patient] */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      swap1\n    tag_45:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_46\n      jumpi\n      dup4\n      dup3\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      dup1\n      sload\n      tag_48\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_50\n      swap1\n      tag_49\n      jump\t// in\n    tag_50:\n      dup1\n      iszero\n      tag_51\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_52\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_51)\n    tag_52:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_53:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_53\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_51:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      dup1\n      sload\n      tag_54\n      swap1\n      tag_49\n      jump\t// in\n    tag_54:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_55\n      swap1\n      tag_49\n      jump\t// in\n    tag_55:\n      dup1\n      iszero\n      tag_56\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_57\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_56)\n    tag_57:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_58:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_58\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_56:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      dup1\n      sload\n      tag_59\n      swap1\n      tag_49\n      jump\t// in\n    tag_59:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_60\n      swap1\n      tag_49\n      jump\t// in\n    tag_60:\n      dup1\n      iszero\n      tag_61\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_62\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_61)\n    tag_62:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_63:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_63\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_61:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_45)\n    tag_46:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/PatientDataRevised.sol\":2778:3056  function viewHealthData(address _patient) public view returns (HealthData[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/PatientDataRevised.sol\":2352:2700  function updateAccess(address _accessor, bool _isGranted) public {... */\n    tag_20:\n        /* \"contracts/PatientDataRevised.sol\":2471:2481  _isGranted */\n      dup1\n        /* \"contracts/PatientDataRevised.sol\":2428:2445  accessPermissions */\n      0x02\n        /* \"contracts/PatientDataRevised.sol\":2428:2457  accessPermissions[msg.sender] */\n      0x00\n        /* \"contracts/PatientDataRevised.sol\":2446:2456  msg.sender */\n      caller\n        /* \"contracts/PatientDataRevised.sol\":2428:2457  accessPermissions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PatientDataRevised.sol\":2428:2468  accessPermissions[msg.sender][_accessor] */\n      0x00\n        /* \"contracts/PatientDataRevised.sol\":2458:2467  _accessor */\n      dup5\n        /* \"contracts/PatientDataRevised.sol\":2428:2468  accessPermissions[msg.sender][_accessor] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/PatientDataRevised.sol\":2428:2481  accessPermissions[msg.sender][_accessor] = _isGranted */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/PatientDataRevised.sol\":2562:2612  rewardToken.safeTransfer(msg.sender, TOKEN_REWARD) */\n      tag_65\n        /* \"contracts/PatientDataRevised.sol\":2587:2597  msg.sender */\n      caller\n        /* \"contracts/PatientDataRevised.sol\":390:405  10 * (10 ** 18) */\n      0x8ac7230489e80000\n        /* \"contracts/PatientDataRevised.sol\":2562:2573  rewardToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PatientDataRevised.sol\":2562:2586  rewardToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_66\n      swap1\n        /* \"contracts/PatientDataRevised.sol\":2562:2612  rewardToken.safeTransfer(msg.sender, TOKEN_REWARD) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_65:\n        /* \"contracts/PatientDataRevised.sol\":2656:2665  _accessor */\n      dup2\n        /* \"contracts/PatientDataRevised.sol\":2630:2692  AccessUpdated(msg.sender, _accessor, _isGranted, TOKEN_REWARD) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PatientDataRevised.sol\":2644:2654  msg.sender */\n      caller\n        /* \"contracts/PatientDataRevised.sol\":2630:2692  AccessUpdated(msg.sender, _accessor, _isGranted, TOKEN_REWARD) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x09c705c294119a93fb8ea4861ef048d5884d9504575b35eb38c7ea7705cf28b0\n        /* \"contracts/PatientDataRevised.sol\":2667:2677  _isGranted */\n      dup4\n        /* \"contracts/PatientDataRevised.sol\":390:405  10 * (10 ** 18) */\n      0x8ac7230489e80000\n        /* \"contracts/PatientDataRevised.sol\":2630:2692  AccessUpdated(msg.sender, _accessor, _isGranted, TOKEN_REWARD) */\n      mload(0x40)\n      tag_67\n      swap3\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/PatientDataRevised.sol\":2352:2700  function updateAccess(address _accessor, bool _isGranted) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PatientDataRevised.sol\":3138:3461  function claimTokens(uint256 amount) public {... */\n    tag_24:\n        /* \"contracts/PatientDataRevised.sol\":3210:3211  0 */\n      0x00\n        /* \"contracts/PatientDataRevised.sol\":3201:3207  amount */\n      dup2\n        /* \"contracts/PatientDataRevised.sol\":3201:3211  amount > 0 */\n      gt\n        /* \"contracts/PatientDataRevised.sol\":3193:3248  require(amount > 0, \"Amount must be greater than zero\") */\n      tag_70\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_71\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_70:\n        /* \"contracts/PatientDataRevised.sol\":3307:3313  amount */\n      dup1\n        /* \"contracts/PatientDataRevised.sol\":3267:3278  rewardToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PatientDataRevised.sol\":3267:3288  rewardToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/PatientDataRevised.sol\":3297:3301  this */\n      address\n        /* \"contracts/PatientDataRevised.sol\":3267:3303  rewardToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_76\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_76:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n        /* \"contracts/PatientDataRevised.sol\":3267:3313  rewardToken.balanceOf(address(this)) >= amount */\n      lt\n      iszero\n        /* \"contracts/PatientDataRevised.sol\":3259:3347  require(rewardToken.balanceOf(address(this)) >= amount, \"Insufficient contract balance\") */\n      tag_79\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_80\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_79:\n        /* \"contracts/PatientDataRevised.sol\":3360:3404  rewardToken.safeTransfer(msg.sender, amount) */\n      tag_82\n        /* \"contracts/PatientDataRevised.sol\":3385:3395  msg.sender */\n      caller\n        /* \"contracts/PatientDataRevised.sol\":3397:3403  amount */\n      dup3\n        /* \"contracts/PatientDataRevised.sol\":3360:3371  rewardToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PatientDataRevised.sol\":3360:3384  rewardToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_66\n      swap1\n        /* \"contracts/PatientDataRevised.sol\":3360:3404  rewardToken.safeTransfer(msg.sender, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_82:\n        /* \"contracts/PatientDataRevised.sol\":3434:3444  msg.sender */\n      caller\n        /* \"contracts/PatientDataRevised.sol\":3420:3453  TokensClaimed(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e430\n        /* \"contracts/PatientDataRevised.sol\":3446:3452  amount */\n      dup3\n        /* \"contracts/PatientDataRevised.sol\":3420:3453  TokensClaimed(msg.sender, amount) */\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/PatientDataRevised.sol\":3138:3461  function claimTokens(uint256 amount) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/PatientDataRevised.sol\":3533:3657  function contractTokenBalance() public view returns (uint256) {... */\n    tag_26:\n        /* \"contracts/PatientDataRevised.sol\":3586:3593  uint256 */\n      0x00\n        /* \"contracts/PatientDataRevised.sol\":3613:3624  rewardToken */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PatientDataRevised.sol\":3613:3634  rewardToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/PatientDataRevised.sol\":3643:3647  this */\n      address\n        /* \"contracts/PatientDataRevised.sol\":3613:3649  rewardToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_85:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_87\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_87:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_88\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_88:\n        /* \"contracts/PatientDataRevised.sol\":3606:3649  return rewardToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/PatientDataRevised.sol\":3533:3657  function contractTokenBalance() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/PatientDataRevised.sol\":1626:2274  function logHealthData(... */\n    tag_32:\n        /* \"contracts/PatientDataRevised.sol\":1807:1832  HealthData memory newData */\n      0x00\n        /* \"contracts/PatientDataRevised.sol\":1835:2041  HealthData({... */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/PatientDataRevised.sol\":1872:1887  block.timestamp */\n      timestamp\n        /* \"contracts/PatientDataRevised.sol\":1835:2041  HealthData({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/PatientDataRevised.sol\":1916:1929  _glucoseLevel */\n      dup7\n        /* \"contracts/PatientDataRevised.sol\":1835:2041  HealthData({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/PatientDataRevised.sol\":1956:1967  _medication */\n      dup6\n        /* \"contracts/PatientDataRevised.sol\":1835:2041  HealthData({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/PatientDataRevised.sol\":1989:1995  _meals */\n      dup5\n        /* \"contracts/PatientDataRevised.sol\":1835:2041  HealthData({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/PatientDataRevised.sol\":2020:2029  _exercise */\n      dup4\n        /* \"contracts/PatientDataRevised.sol\":1835:2041  HealthData({... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/PatientDataRevised.sol\":1807:2041  HealthData memory newData = HealthData({... */\n      swap1\n      pop\n        /* \"contracts/PatientDataRevised.sol\":2052:2063  patientData */\n      0x01\n        /* \"contracts/PatientDataRevised.sol\":2052:2075  patientData[msg.sender] */\n      0x00\n        /* \"contracts/PatientDataRevised.sol\":2064:2074  msg.sender */\n      caller\n        /* \"contracts/PatientDataRevised.sol\":2052:2075  patientData[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PatientDataRevised.sol\":2081:2088  newData */\n      dup2\n        /* \"contracts/PatientDataRevised.sol\":2052:2089  patientData[msg.sender].push(newData) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      swap1\n      dup2\n      tag_91\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      pop\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      swap1\n      dup2\n      tag_93\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_93:\n      pop\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      swap1\n      dup2\n      tag_94\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_94:\n      pop\n      pop\n      pop\n        /* \"contracts/PatientDataRevised.sol\":2145:2195  rewardToken.safeTransfer(msg.sender, TOKEN_REWARD) */\n      tag_95\n        /* \"contracts/PatientDataRevised.sol\":2170:2180  msg.sender */\n      caller\n        /* \"contracts/PatientDataRevised.sol\":390:405  10 * (10 ** 18) */\n      0x8ac7230489e80000\n        /* \"contracts/PatientDataRevised.sol\":2145:2156  rewardToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PatientDataRevised.sol\":2145:2169  rewardToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_66\n      swap1\n        /* \"contracts/PatientDataRevised.sol\":2145:2195  rewardToken.safeTransfer(msg.sender, TOKEN_REWARD) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_95:\n        /* \"contracts/PatientDataRevised.sol\":2224:2234  msg.sender */\n      caller\n        /* \"contracts/PatientDataRevised.sol\":2213:2266  DataLogged(msg.sender, block.timestamp, TOKEN_REWARD) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x46b8550ac8f5f68f14d6a3540963578c9733e4ff2a4e7ca11cccdeeb0b521d67\n        /* \"contracts/PatientDataRevised.sol\":2236:2251  block.timestamp */\n      timestamp\n        /* \"contracts/PatientDataRevised.sol\":390:405  10 * (10 ** 18) */\n      0x8ac7230489e80000\n        /* \"contracts/PatientDataRevised.sol\":2213:2266  DataLogged(msg.sender, block.timestamp, TOKEN_REWARD) */\n      mload(0x40)\n      tag_96\n      swap3\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/PatientDataRevised.sol\":1796:2274  {... */\n      pop\n        /* \"contracts/PatientDataRevised.sol\":1626:2274  function logHealthData(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PatientDataRevised.sol\":351:405  uint256 public constant TOKEN_REWARD = 10 * (10 ** 18) */\n    tag_34:\n        /* \"contracts/PatientDataRevised.sol\":390:405  10 * (10 ** 18) */\n      0x8ac7230489e80000\n        /* \"contracts/PatientDataRevised.sol\":351:405  uint256 public constant TOKEN_REWARD = 10 * (10 ** 18) */\n      dup2\n      jump\t// out\n        /* \"contracts/PatientDataRevised.sol\":284:309  IERC20 public rewardToken */\n    tag_37:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1348  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1360:1362  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1364:1369  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_100\n      swap3\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7686:8406  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7766:7784  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7794:7813  uint256 returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7932:7936  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7929:7930  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7922:7926  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7916:7927  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7909:7913  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7903:7907  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7899:7914  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7896:7897  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7889:7894  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7882:7887  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7877:7937  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7989:7996  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7979:8155  if iszero(success) {... */\n      tag_104\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8033:8037  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8027:8038  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8078:8094  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8075:8076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8070:8073  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8055:8095  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8124:8140  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8119:8122  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8112:8141  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7979:8155  if iszero(success) {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8182:8198  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8168:8198  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8232:8233  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8226:8234  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8211:8234  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7848:8244  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8272:8273  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8268  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8273  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_105\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8325:8326  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8321  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8326  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_106)\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8284:8289  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8276:8302  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8276:8307  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8254:8400  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_107\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8382:8387  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8349:8389  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8254:8400  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7756:8406  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7686:8406  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_109:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_110:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_111:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_112:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_113:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_181\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_112\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_114:\n        /* \"#utility.yul\":641:665   */\n      tag_183\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_113\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_184\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_184:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_115:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_186\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_114\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_13:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_188\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_189\n      tag_110\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":917:1036   */\n    tag_188:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_190\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_115\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1317   */\n    tag_116:\n        /* \"#utility.yul\":1270:1276   */\n      0x00\n        /* \"#utility.yul\":1304:1309   */\n      dup2\n        /* \"#utility.yul\":1298:1310   */\n      mload\n        /* \"#utility.yul\":1288:1310   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1317   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1534   */\n    tag_117:\n        /* \"#utility.yul\":1449:1460   */\n      0x00\n        /* \"#utility.yul\":1483:1489   */\n      dup3\n        /* \"#utility.yul\":1478:1481   */\n      dup3\n        /* \"#utility.yul\":1471:1490   */\n      mstore\n        /* \"#utility.yul\":1523:1527   */\n      0x20\n        /* \"#utility.yul\":1518:1521   */\n      dup3\n        /* \"#utility.yul\":1514:1528   */\n      add\n        /* \"#utility.yul\":1499:1528   */\n      swap1\n      pop\n        /* \"#utility.yul\":1323:1534   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1540:1699   */\n    tag_118:\n        /* \"#utility.yul\":1634:1638   */\n      0x00\n        /* \"#utility.yul\":1657:1660   */\n      dup2\n        /* \"#utility.yul\":1649:1660   */\n      swap1\n      pop\n        /* \"#utility.yul\":1687:1691   */\n      0x20\n        /* \"#utility.yul\":1682:1685   */\n      dup3\n        /* \"#utility.yul\":1678:1692   */\n      add\n        /* \"#utility.yul\":1670:1692   */\n      swap1\n      pop\n        /* \"#utility.yul\":1540:1699   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1705:1782   */\n    tag_119:\n        /* \"#utility.yul\":1742:1749   */\n      0x00\n        /* \"#utility.yul\":1771:1776   */\n      dup2\n        /* \"#utility.yul\":1760:1776   */\n      swap1\n      pop\n        /* \"#utility.yul\":1705:1782   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1788:1896   */\n    tag_120:\n        /* \"#utility.yul\":1865:1889   */\n      tag_196\n        /* \"#utility.yul\":1883:1888   */\n      dup2\n        /* \"#utility.yul\":1865:1889   */\n      tag_119\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":1860:1863   */\n      dup3\n        /* \"#utility.yul\":1853:1890   */\n      mstore\n        /* \"#utility.yul\":1788:1896   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1902:2001   */\n    tag_121:\n        /* \"#utility.yul\":1954:1960   */\n      0x00\n        /* \"#utility.yul\":1988:1993   */\n      dup2\n        /* \"#utility.yul\":1982:1994   */\n      mload\n        /* \"#utility.yul\":1972:1994   */\n      swap1\n      pop\n        /* \"#utility.yul\":1902:2001   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2007:2166   */\n    tag_122:\n        /* \"#utility.yul\":2081:2092   */\n      0x00\n        /* \"#utility.yul\":2115:2121   */\n      dup3\n        /* \"#utility.yul\":2110:2113   */\n      dup3\n        /* \"#utility.yul\":2103:2122   */\n      mstore\n        /* \"#utility.yul\":2155:2159   */\n      0x20\n        /* \"#utility.yul\":2150:2153   */\n      dup3\n        /* \"#utility.yul\":2146:2160   */\n      add\n        /* \"#utility.yul\":2131:2160   */\n      swap1\n      pop\n        /* \"#utility.yul\":2007:2166   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2172:2311   */\n    tag_123:\n        /* \"#utility.yul\":2261:2267   */\n      dup3\n        /* \"#utility.yul\":2256:2259   */\n      dup2\n        /* \"#utility.yul\":2251:2254   */\n      dup4\n        /* \"#utility.yul\":2245:2268   */\n      mcopy\n        /* \"#utility.yul\":2302:2303   */\n      0x00\n        /* \"#utility.yul\":2293:2299   */\n      dup4\n        /* \"#utility.yul\":2288:2291   */\n      dup4\n        /* \"#utility.yul\":2284:2300   */\n      add\n        /* \"#utility.yul\":2277:2304   */\n      mstore\n        /* \"#utility.yul\":2172:2311   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2317:2419   */\n    tag_124:\n        /* \"#utility.yul\":2358:2364   */\n      0x00\n        /* \"#utility.yul\":2409:2411   */\n      0x1f\n        /* \"#utility.yul\":2405:2412   */\n      not\n        /* \"#utility.yul\":2400:2402   */\n      0x1f\n        /* \"#utility.yul\":2393:2398   */\n      dup4\n        /* \"#utility.yul\":2389:2403   */\n      add\n        /* \"#utility.yul\":2385:2413   */\n      and\n        /* \"#utility.yul\":2375:2413   */\n      swap1\n      pop\n        /* \"#utility.yul\":2317:2419   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2425:2782   */\n    tag_125:\n        /* \"#utility.yul\":2503:2506   */\n      0x00\n        /* \"#utility.yul\":2531:2570   */\n      tag_202\n        /* \"#utility.yul\":2564:2569   */\n      dup3\n        /* \"#utility.yul\":2531:2570   */\n      tag_121\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":2586:2647   */\n      tag_203\n        /* \"#utility.yul\":2640:2646   */\n      dup2\n        /* \"#utility.yul\":2635:2638   */\n      dup6\n        /* \"#utility.yul\":2586:2647   */\n      tag_122\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":2579:2647   */\n      swap4\n      pop\n        /* \"#utility.yul\":2656:2721   */\n      tag_204\n        /* \"#utility.yul\":2714:2720   */\n      dup2\n        /* \"#utility.yul\":2709:2712   */\n      dup6\n        /* \"#utility.yul\":2702:2706   */\n      0x20\n        /* \"#utility.yul\":2695:2700   */\n      dup7\n        /* \"#utility.yul\":2691:2707   */\n      add\n        /* \"#utility.yul\":2656:2721   */\n      tag_123\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":2746:2775   */\n      tag_205\n        /* \"#utility.yul\":2768:2774   */\n      dup2\n        /* \"#utility.yul\":2746:2775   */\n      tag_124\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":2741:2744   */\n      dup5\n        /* \"#utility.yul\":2737:2776   */\n      add\n        /* \"#utility.yul\":2730:2776   */\n      swap2\n      pop\n        /* \"#utility.yul\":2507:2782   */\n      pop\n        /* \"#utility.yul\":2425:2782   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2878:4166   */\n    tag_126:\n        /* \"#utility.yul\":2991:2994   */\n      0x00\n        /* \"#utility.yul\":3027:3031   */\n      0xa0\n        /* \"#utility.yul\":3022:3025   */\n      dup4\n        /* \"#utility.yul\":3018:3032   */\n      add\n        /* \"#utility.yul\":3119:3123   */\n      0x00\n        /* \"#utility.yul\":3112:3117   */\n      dup4\n        /* \"#utility.yul\":3108:3124   */\n      add\n        /* \"#utility.yul\":3102:3125   */\n      mload\n        /* \"#utility.yul\":3138:3201   */\n      tag_207\n        /* \"#utility.yul\":3195:3199   */\n      0x00\n        /* \"#utility.yul\":3190:3193   */\n      dup7\n        /* \"#utility.yul\":3186:3200   */\n      add\n        /* \"#utility.yul\":3172:3184   */\n      dup3\n        /* \"#utility.yul\":3138:3201   */\n      tag_120\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":3042:3211   */\n      pop\n        /* \"#utility.yul\":3301:3305   */\n      0x20\n        /* \"#utility.yul\":3294:3299   */\n      dup4\n        /* \"#utility.yul\":3290:3306   */\n      add\n        /* \"#utility.yul\":3284:3307   */\n      mload\n        /* \"#utility.yul\":3320:3383   */\n      tag_208\n        /* \"#utility.yul\":3377:3381   */\n      0x20\n        /* \"#utility.yul\":3372:3375   */\n      dup7\n        /* \"#utility.yul\":3368:3382   */\n      add\n        /* \"#utility.yul\":3354:3366   */\n      dup3\n        /* \"#utility.yul\":3320:3383   */\n      tag_120\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":3221:3393   */\n      pop\n        /* \"#utility.yul\":3481:3485   */\n      0x40\n        /* \"#utility.yul\":3474:3479   */\n      dup4\n        /* \"#utility.yul\":3470:3486   */\n      add\n        /* \"#utility.yul\":3464:3487   */\n      mload\n        /* \"#utility.yul\":3534:3537   */\n      dup5\n        /* \"#utility.yul\":3528:3532   */\n      dup3\n        /* \"#utility.yul\":3524:3538   */\n      sub\n        /* \"#utility.yul\":3517:3521   */\n      0x40\n        /* \"#utility.yul\":3512:3515   */\n      dup7\n        /* \"#utility.yul\":3508:3522   */\n      add\n        /* \"#utility.yul\":3501:3539   */\n      mstore\n        /* \"#utility.yul\":3560:3633   */\n      tag_209\n        /* \"#utility.yul\":3628:3632   */\n      dup3\n        /* \"#utility.yul\":3614:3626   */\n      dup3\n        /* \"#utility.yul\":3560:3633   */\n      tag_125\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":3552:3633   */\n      swap2\n      pop\n        /* \"#utility.yul\":3403:3644   */\n      pop\n        /* \"#utility.yul\":3727:3731   */\n      0x60\n        /* \"#utility.yul\":3720:3725   */\n      dup4\n        /* \"#utility.yul\":3716:3732   */\n      add\n        /* \"#utility.yul\":3710:3733   */\n      mload\n        /* \"#utility.yul\":3780:3783   */\n      dup5\n        /* \"#utility.yul\":3774:3778   */\n      dup3\n        /* \"#utility.yul\":3770:3784   */\n      sub\n        /* \"#utility.yul\":3763:3767   */\n      0x60\n        /* \"#utility.yul\":3758:3761   */\n      dup7\n        /* \"#utility.yul\":3754:3768   */\n      add\n        /* \"#utility.yul\":3747:3785   */\n      mstore\n        /* \"#utility.yul\":3806:3879   */\n      tag_210\n        /* \"#utility.yul\":3874:3878   */\n      dup3\n        /* \"#utility.yul\":3860:3872   */\n      dup3\n        /* \"#utility.yul\":3806:3879   */\n      tag_125\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":3798:3879   */\n      swap2\n      pop\n        /* \"#utility.yul\":3654:3890   */\n      pop\n        /* \"#utility.yul\":3976:3980   */\n      0x80\n        /* \"#utility.yul\":3969:3974   */\n      dup4\n        /* \"#utility.yul\":3965:3981   */\n      add\n        /* \"#utility.yul\":3959:3982   */\n      mload\n        /* \"#utility.yul\":4029:4032   */\n      dup5\n        /* \"#utility.yul\":4023:4027   */\n      dup3\n        /* \"#utility.yul\":4019:4033   */\n      sub\n        /* \"#utility.yul\":4012:4016   */\n      0x80\n        /* \"#utility.yul\":4007:4010   */\n      dup7\n        /* \"#utility.yul\":4003:4017   */\n      add\n        /* \"#utility.yul\":3996:4034   */\n      mstore\n        /* \"#utility.yul\":4055:4128   */\n      tag_211\n        /* \"#utility.yul\":4123:4127   */\n      dup3\n        /* \"#utility.yul\":4109:4121   */\n      dup3\n        /* \"#utility.yul\":4055:4128   */\n      tag_125\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":4047:4128   */\n      swap2\n      pop\n        /* \"#utility.yul\":3900:4139   */\n      pop\n        /* \"#utility.yul\":4156:4160   */\n      dup1\n        /* \"#utility.yul\":4149:4160   */\n      swap2\n      pop\n        /* \"#utility.yul\":2996:4166   */\n      pop\n        /* \"#utility.yul\":2878:4166   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4172:4436   */\n    tag_127:\n        /* \"#utility.yul\":4295:4305   */\n      0x00\n        /* \"#utility.yul\":4330:4430   */\n      tag_213\n        /* \"#utility.yul\":4426:4429   */\n      dup4\n        /* \"#utility.yul\":4418:4424   */\n      dup4\n        /* \"#utility.yul\":4330:4430   */\n      tag_126\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":4316:4430   */\n      swap1\n      pop\n        /* \"#utility.yul\":4172:4436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4442:4582   */\n    tag_128:\n        /* \"#utility.yul\":4539:4543   */\n      0x00\n        /* \"#utility.yul\":4571:4575   */\n      0x20\n        /* \"#utility.yul\":4566:4569   */\n      dup3\n        /* \"#utility.yul\":4562:4576   */\n      add\n        /* \"#utility.yul\":4554:4576   */\n      swap1\n      pop\n        /* \"#utility.yul\":4442:4582   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4682:5809   */\n    tag_129:\n        /* \"#utility.yul\":4855:4858   */\n      0x00\n        /* \"#utility.yul\":4884:4965   */\n      tag_216\n        /* \"#utility.yul\":4959:4964   */\n      dup3\n        /* \"#utility.yul\":4884:4965   */\n      tag_116\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":4981:5094   */\n      tag_217\n        /* \"#utility.yul\":5087:5093   */\n      dup2\n        /* \"#utility.yul\":5082:5085   */\n      dup6\n        /* \"#utility.yul\":4981:5094   */\n      tag_117\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":4974:5094   */\n      swap4\n      pop\n        /* \"#utility.yul\":5120:5123   */\n      dup4\n        /* \"#utility.yul\":5165:5169   */\n      0x20\n        /* \"#utility.yul\":5157:5163   */\n      dup3\n        /* \"#utility.yul\":5153:5170   */\n      mul\n        /* \"#utility.yul\":5148:5151   */\n      dup6\n        /* \"#utility.yul\":5144:5171   */\n      add\n        /* \"#utility.yul\":5195:5278   */\n      tag_218\n        /* \"#utility.yul\":5272:5277   */\n      dup6\n        /* \"#utility.yul\":5195:5278   */\n      tag_118\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":5301:5308   */\n      dup1\n        /* \"#utility.yul\":5332:5333   */\n      0x00\n        /* \"#utility.yul\":5317:5764   */\n    tag_219:\n        /* \"#utility.yul\":5342:5348   */\n      dup6\n        /* \"#utility.yul\":5339:5340   */\n      dup2\n        /* \"#utility.yul\":5336:5349   */\n      lt\n        /* \"#utility.yul\":5317:5764   */\n      iszero\n      tag_221\n      jumpi\n        /* \"#utility.yul\":5413:5422   */\n      dup5\n        /* \"#utility.yul\":5407:5411   */\n      dup5\n        /* \"#utility.yul\":5403:5423   */\n      sub\n        /* \"#utility.yul\":5398:5401   */\n      dup10\n        /* \"#utility.yul\":5391:5424   */\n      mstore\n        /* \"#utility.yul\":5464:5470   */\n      dup2\n        /* \"#utility.yul\":5458:5471   */\n      mload\n        /* \"#utility.yul\":5492:5610   */\n      tag_222\n        /* \"#utility.yul\":5605:5609   */\n      dup6\n        /* \"#utility.yul\":5590:5603   */\n      dup3\n        /* \"#utility.yul\":5492:5610   */\n      tag_127\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":5484:5610   */\n      swap5\n      pop\n        /* \"#utility.yul\":5633:5720   */\n      tag_223\n        /* \"#utility.yul\":5713:5719   */\n      dup4\n        /* \"#utility.yul\":5633:5720   */\n      tag_128\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":5623:5720   */\n      swap3\n      pop\n        /* \"#utility.yul\":5749:5753   */\n      0x20\n        /* \"#utility.yul\":5744:5747   */\n      dup11\n        /* \"#utility.yul\":5740:5754   */\n      add\n        /* \"#utility.yul\":5733:5754   */\n      swap10\n      pop\n        /* \"#utility.yul\":5377:5764   */\n      pop\n        /* \"#utility.yul\":5364:5365   */\n      0x01\n        /* \"#utility.yul\":5361:5362   */\n      dup2\n        /* \"#utility.yul\":5357:5366   */\n      add\n        /* \"#utility.yul\":5352:5366   */\n      swap1\n      pop\n        /* \"#utility.yul\":5317:5764   */\n      jump(tag_219)\n    tag_221:\n        /* \"#utility.yul\":5321:5335   */\n      pop\n        /* \"#utility.yul\":5780:5784   */\n      dup3\n        /* \"#utility.yul\":5773:5784   */\n      swap8\n      pop\n        /* \"#utility.yul\":5800:5803   */\n      dup8\n        /* \"#utility.yul\":5793:5803   */\n      swap6\n      pop\n        /* \"#utility.yul\":4860:5809   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4682:5809   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5815:6296   */\n    tag_16:\n        /* \"#utility.yul\":6012:6016   */\n      0x00\n        /* \"#utility.yul\":6050:6052   */\n      0x20\n        /* \"#utility.yul\":6039:6048   */\n      dup3\n        /* \"#utility.yul\":6035:6053   */\n      add\n        /* \"#utility.yul\":6027:6053   */\n      swap1\n      pop\n        /* \"#utility.yul\":6099:6108   */\n      dup2\n        /* \"#utility.yul\":6093:6097   */\n      dup2\n        /* \"#utility.yul\":6089:6109   */\n      sub\n        /* \"#utility.yul\":6085:6086   */\n      0x00\n        /* \"#utility.yul\":6074:6083   */\n      dup4\n        /* \"#utility.yul\":6070:6087   */\n      add\n        /* \"#utility.yul\":6063:6110   */\n      mstore\n        /* \"#utility.yul\":6127:6289   */\n      tag_225\n        /* \"#utility.yul\":6284:6288   */\n      dup2\n        /* \"#utility.yul\":6275:6281   */\n      dup5\n        /* \"#utility.yul\":6127:6289   */\n      tag_129\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":6119:6289   */\n      swap1\n      pop\n        /* \"#utility.yul\":5815:6296   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6302:6392   */\n    tag_130:\n        /* \"#utility.yul\":6336:6343   */\n      0x00\n        /* \"#utility.yul\":6379:6384   */\n      dup2\n        /* \"#utility.yul\":6372:6385   */\n      iszero\n        /* \"#utility.yul\":6365:6386   */\n      iszero\n        /* \"#utility.yul\":6354:6386   */\n      swap1\n      pop\n        /* \"#utility.yul\":6302:6392   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6398:6514   */\n    tag_131:\n        /* \"#utility.yul\":6468:6489   */\n      tag_228\n        /* \"#utility.yul\":6483:6488   */\n      dup2\n        /* \"#utility.yul\":6468:6489   */\n      tag_130\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":6461:6466   */\n      dup2\n        /* \"#utility.yul\":6458:6490   */\n      eq\n        /* \"#utility.yul\":6448:6508   */\n      tag_229\n      jumpi\n        /* \"#utility.yul\":6504:6505   */\n      0x00\n        /* \"#utility.yul\":6501:6502   */\n      dup1\n        /* \"#utility.yul\":6494:6506   */\n      revert\n        /* \"#utility.yul\":6448:6508   */\n    tag_229:\n        /* \"#utility.yul\":6398:6514   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6520:6653   */\n    tag_132:\n        /* \"#utility.yul\":6563:6568   */\n      0x00\n        /* \"#utility.yul\":6601:6607   */\n      dup2\n        /* \"#utility.yul\":6588:6608   */\n      calldataload\n        /* \"#utility.yul\":6579:6608   */\n      swap1\n      pop\n        /* \"#utility.yul\":6617:6647   */\n      tag_231\n        /* \"#utility.yul\":6641:6646   */\n      dup2\n        /* \"#utility.yul\":6617:6647   */\n      tag_131\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":6520:6653   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6659:7127   */\n    tag_19:\n        /* \"#utility.yul\":6724:6730   */\n      0x00\n        /* \"#utility.yul\":6732:6738   */\n      dup1\n        /* \"#utility.yul\":6781:6783   */\n      0x40\n        /* \"#utility.yul\":6769:6778   */\n      dup4\n        /* \"#utility.yul\":6760:6767   */\n      dup6\n        /* \"#utility.yul\":6756:6779   */\n      sub\n        /* \"#utility.yul\":6752:6784   */\n      slt\n        /* \"#utility.yul\":6749:6868   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":6787:6866   */\n      tag_234\n      tag_110\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":6749:6868   */\n    tag_233:\n        /* \"#utility.yul\":6907:6908   */\n      0x00\n        /* \"#utility.yul\":6932:6985   */\n      tag_235\n        /* \"#utility.yul\":6977:6984   */\n      dup6\n        /* \"#utility.yul\":6968:6974   */\n      dup3\n        /* \"#utility.yul\":6957:6966   */\n      dup7\n        /* \"#utility.yul\":6953:6975   */\n      add\n        /* \"#utility.yul\":6932:6985   */\n      tag_115\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":6922:6985   */\n      swap3\n      pop\n        /* \"#utility.yul\":6878:6995   */\n      pop\n        /* \"#utility.yul\":7034:7036   */\n      0x20\n        /* \"#utility.yul\":7060:7110   */\n      tag_236\n        /* \"#utility.yul\":7102:7109   */\n      dup6\n        /* \"#utility.yul\":7093:7099   */\n      dup3\n        /* \"#utility.yul\":7082:7091   */\n      dup7\n        /* \"#utility.yul\":7078:7100   */\n      add\n        /* \"#utility.yul\":7060:7110   */\n      tag_132\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":7050:7110   */\n      swap2\n      pop\n        /* \"#utility.yul\":7005:7120   */\n      pop\n        /* \"#utility.yul\":6659:7127   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7133:7255   */\n    tag_133:\n        /* \"#utility.yul\":7206:7230   */\n      tag_238\n        /* \"#utility.yul\":7224:7229   */\n      dup2\n        /* \"#utility.yul\":7206:7230   */\n      tag_119\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":7199:7204   */\n      dup2\n        /* \"#utility.yul\":7196:7231   */\n      eq\n        /* \"#utility.yul\":7186:7249   */\n      tag_239\n      jumpi\n        /* \"#utility.yul\":7245:7246   */\n      0x00\n        /* \"#utility.yul\":7242:7243   */\n      dup1\n        /* \"#utility.yul\":7235:7247   */\n      revert\n        /* \"#utility.yul\":7186:7249   */\n    tag_239:\n        /* \"#utility.yul\":7133:7255   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7261:7400   */\n    tag_134:\n        /* \"#utility.yul\":7307:7312   */\n      0x00\n        /* \"#utility.yul\":7345:7351   */\n      dup2\n        /* \"#utility.yul\":7332:7352   */\n      calldataload\n        /* \"#utility.yul\":7323:7352   */\n      swap1\n      pop\n        /* \"#utility.yul\":7361:7394   */\n      tag_241\n        /* \"#utility.yul\":7388:7393   */\n      dup2\n        /* \"#utility.yul\":7361:7394   */\n      tag_133\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":7261:7400   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7406:7735   */\n    tag_23:\n        /* \"#utility.yul\":7465:7471   */\n      0x00\n        /* \"#utility.yul\":7514:7516   */\n      0x20\n        /* \"#utility.yul\":7502:7511   */\n      dup3\n        /* \"#utility.yul\":7493:7500   */\n      dup5\n        /* \"#utility.yul\":7489:7512   */\n      sub\n        /* \"#utility.yul\":7485:7517   */\n      slt\n        /* \"#utility.yul\":7482:7601   */\n      iszero\n      tag_243\n      jumpi\n        /* \"#utility.yul\":7520:7599   */\n      tag_244\n      tag_110\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":7482:7601   */\n    tag_243:\n        /* \"#utility.yul\":7640:7641   */\n      0x00\n        /* \"#utility.yul\":7665:7718   */\n      tag_245\n        /* \"#utility.yul\":7710:7717   */\n      dup5\n        /* \"#utility.yul\":7701:7707   */\n      dup3\n        /* \"#utility.yul\":7690:7699   */\n      dup6\n        /* \"#utility.yul\":7686:7708   */\n      add\n        /* \"#utility.yul\":7665:7718   */\n      tag_134\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":7655:7718   */\n      swap2\n      pop\n        /* \"#utility.yul\":7611:7728   */\n      pop\n        /* \"#utility.yul\":7406:7735   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7741:7859   */\n    tag_135:\n        /* \"#utility.yul\":7828:7852   */\n      tag_247\n        /* \"#utility.yul\":7846:7851   */\n      dup2\n        /* \"#utility.yul\":7828:7852   */\n      tag_119\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":7823:7826   */\n      dup3\n        /* \"#utility.yul\":7816:7853   */\n      mstore\n        /* \"#utility.yul\":7741:7859   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7865:8087   */\n    tag_28:\n        /* \"#utility.yul\":7958:7962   */\n      0x00\n        /* \"#utility.yul\":7996:7998   */\n      0x20\n        /* \"#utility.yul\":7985:7994   */\n      dup3\n        /* \"#utility.yul\":7981:7999   */\n      add\n        /* \"#utility.yul\":7973:7999   */\n      swap1\n      pop\n        /* \"#utility.yul\":8009:8080   */\n      tag_249\n        /* \"#utility.yul\":8077:8078   */\n      0x00\n        /* \"#utility.yul\":8066:8075   */\n      dup4\n        /* \"#utility.yul\":8062:8079   */\n      add\n        /* \"#utility.yul\":8053:8059   */\n      dup5\n        /* \"#utility.yul\":8009:8080   */\n      tag_135\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":7865:8087   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8093:8210   */\n    tag_136:\n        /* \"#utility.yul\":8202:8203   */\n      0x00\n        /* \"#utility.yul\":8199:8200   */\n      dup1\n        /* \"#utility.yul\":8192:8204   */\n      revert\n        /* \"#utility.yul\":8216:8333   */\n    tag_137:\n        /* \"#utility.yul\":8325:8326   */\n      0x00\n        /* \"#utility.yul\":8322:8323   */\n      dup1\n        /* \"#utility.yul\":8315:8327   */\n      revert\n        /* \"#utility.yul\":8339:8519   */\n    tag_138:\n        /* \"#utility.yul\":8387:8464   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8384:8385   */\n      0x00\n        /* \"#utility.yul\":8377:8465   */\n      mstore\n        /* \"#utility.yul\":8484:8488   */\n      0x41\n        /* \"#utility.yul\":8481:8482   */\n      0x04\n        /* \"#utility.yul\":8474:8489   */\n      mstore\n        /* \"#utility.yul\":8508:8512   */\n      0x24\n        /* \"#utility.yul\":8505:8506   */\n      0x00\n        /* \"#utility.yul\":8498:8513   */\n      revert\n        /* \"#utility.yul\":8525:8806   */\n    tag_139:\n        /* \"#utility.yul\":8608:8635   */\n      tag_254\n        /* \"#utility.yul\":8630:8634   */\n      dup3\n        /* \"#utility.yul\":8608:8635   */\n      tag_124\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":8600:8606   */\n      dup2\n        /* \"#utility.yul\":8596:8636   */\n      add\n        /* \"#utility.yul\":8738:8744   */\n      dup2\n        /* \"#utility.yul\":8726:8736   */\n      dup2\n        /* \"#utility.yul\":8723:8745   */\n      lt\n        /* \"#utility.yul\":8702:8720   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8690:8700   */\n      dup3\n        /* \"#utility.yul\":8687:8721   */\n      gt\n        /* \"#utility.yul\":8684:8746   */\n      or\n        /* \"#utility.yul\":8681:8769   */\n      iszero\n      tag_255\n      jumpi\n        /* \"#utility.yul\":8749:8767   */\n      tag_256\n      tag_138\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":8681:8769   */\n    tag_255:\n        /* \"#utility.yul\":8789:8799   */\n      dup1\n        /* \"#utility.yul\":8785:8787   */\n      0x40\n        /* \"#utility.yul\":8778:8800   */\n      mstore\n        /* \"#utility.yul\":8568:8806   */\n      pop\n        /* \"#utility.yul\":8525:8806   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8812:8941   */\n    tag_140:\n        /* \"#utility.yul\":8846:8852   */\n      0x00\n        /* \"#utility.yul\":8873:8893   */\n      tag_258\n      tag_109\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":8863:8893   */\n      swap1\n      pop\n        /* \"#utility.yul\":8902:8935   */\n      tag_259\n        /* \"#utility.yul\":8930:8934   */\n      dup3\n        /* \"#utility.yul\":8922:8928   */\n      dup3\n        /* \"#utility.yul\":8902:8935   */\n      tag_139\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":8812:8941   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8947:9255   */\n    tag_141:\n        /* \"#utility.yul\":9009:9013   */\n      0x00\n        /* \"#utility.yul\":9099:9117   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9091:9097   */\n      dup3\n        /* \"#utility.yul\":9088:9118   */\n      gt\n        /* \"#utility.yul\":9085:9141   */\n      iszero\n      tag_261\n      jumpi\n        /* \"#utility.yul\":9121:9139   */\n      tag_262\n      tag_138\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":9085:9141   */\n    tag_261:\n        /* \"#utility.yul\":9159:9188   */\n      tag_263\n        /* \"#utility.yul\":9181:9187   */\n      dup3\n        /* \"#utility.yul\":9159:9188   */\n      tag_124\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":9151:9188   */\n      swap1\n      pop\n        /* \"#utility.yul\":9243:9247   */\n      0x20\n        /* \"#utility.yul\":9237:9241   */\n      dup2\n        /* \"#utility.yul\":9233:9248   */\n      add\n        /* \"#utility.yul\":9225:9248   */\n      swap1\n      pop\n        /* \"#utility.yul\":8947:9255   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9261:9409   */\n    tag_142:\n        /* \"#utility.yul\":9359:9365   */\n      dup3\n        /* \"#utility.yul\":9354:9357   */\n      dup2\n        /* \"#utility.yul\":9349:9352   */\n      dup4\n        /* \"#utility.yul\":9336:9366   */\n      calldatacopy\n        /* \"#utility.yul\":9400:9401   */\n      0x00\n        /* \"#utility.yul\":9391:9397   */\n      dup4\n        /* \"#utility.yul\":9386:9389   */\n      dup4\n        /* \"#utility.yul\":9382:9398   */\n      add\n        /* \"#utility.yul\":9375:9402   */\n      mstore\n        /* \"#utility.yul\":9261:9409   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9415:9840   */\n    tag_143:\n        /* \"#utility.yul\":9493:9498   */\n      0x00\n        /* \"#utility.yul\":9518:9584   */\n      tag_266\n        /* \"#utility.yul\":9534:9583   */\n      tag_267\n        /* \"#utility.yul\":9576:9582   */\n      dup5\n        /* \"#utility.yul\":9534:9583   */\n      tag_141\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":9518:9584   */\n      tag_140\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":9509:9584   */\n      swap1\n      pop\n        /* \"#utility.yul\":9607:9613   */\n      dup3\n        /* \"#utility.yul\":9600:9605   */\n      dup2\n        /* \"#utility.yul\":9593:9614   */\n      mstore\n        /* \"#utility.yul\":9645:9649   */\n      0x20\n        /* \"#utility.yul\":9638:9643   */\n      dup2\n        /* \"#utility.yul\":9634:9650   */\n      add\n        /* \"#utility.yul\":9683:9686   */\n      dup5\n        /* \"#utility.yul\":9674:9680   */\n      dup5\n        /* \"#utility.yul\":9669:9672   */\n      dup5\n        /* \"#utility.yul\":9665:9681   */\n      add\n        /* \"#utility.yul\":9662:9687   */\n      gt\n        /* \"#utility.yul\":9659:9771   */\n      iszero\n      tag_268\n      jumpi\n        /* \"#utility.yul\":9690:9769   */\n      tag_269\n      tag_137\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":9659:9771   */\n    tag_268:\n        /* \"#utility.yul\":9780:9834   */\n      tag_270\n        /* \"#utility.yul\":9827:9833   */\n      dup5\n        /* \"#utility.yul\":9822:9825   */\n      dup3\n        /* \"#utility.yul\":9817:9820   */\n      dup6\n        /* \"#utility.yul\":9780:9834   */\n      tag_142\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":9499:9840   */\n      pop\n        /* \"#utility.yul\":9415:9840   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9860:10200   */\n    tag_144:\n        /* \"#utility.yul\":9916:9921   */\n      0x00\n        /* \"#utility.yul\":9965:9968   */\n      dup3\n        /* \"#utility.yul\":9958:9962   */\n      0x1f\n        /* \"#utility.yul\":9950:9956   */\n      dup4\n        /* \"#utility.yul\":9946:9963   */\n      add\n        /* \"#utility.yul\":9942:9969   */\n      slt\n        /* \"#utility.yul\":9932:10054   */\n      tag_272\n      jumpi\n        /* \"#utility.yul\":9973:10052   */\n      tag_273\n      tag_136\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":9932:10054   */\n    tag_272:\n        /* \"#utility.yul\":10090:10096   */\n      dup2\n        /* \"#utility.yul\":10077:10097   */\n      calldataload\n        /* \"#utility.yul\":10115:10194   */\n      tag_274\n        /* \"#utility.yul\":10190:10193   */\n      dup5\n        /* \"#utility.yul\":10182:10188   */\n      dup3\n        /* \"#utility.yul\":10175:10179   */\n      0x20\n        /* \"#utility.yul\":10167:10173   */\n      dup7\n        /* \"#utility.yul\":10163:10180   */\n      add\n        /* \"#utility.yul\":10115:10194   */\n      tag_143\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":10106:10194   */\n      swap2\n      pop\n        /* \"#utility.yul\":9922:10200   */\n      pop\n        /* \"#utility.yul\":9860:10200   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10206:11511   */\n    tag_31:\n        /* \"#utility.yul\":10322:10328   */\n      0x00\n        /* \"#utility.yul\":10330:10336   */\n      dup1\n        /* \"#utility.yul\":10338:10344   */\n      0x00\n        /* \"#utility.yul\":10346:10352   */\n      dup1\n        /* \"#utility.yul\":10395:10398   */\n      0x80\n        /* \"#utility.yul\":10383:10392   */\n      dup6\n        /* \"#utility.yul\":10374:10381   */\n      dup8\n        /* \"#utility.yul\":10370:10393   */\n      sub\n        /* \"#utility.yul\":10366:10399   */\n      slt\n        /* \"#utility.yul\":10363:10483   */\n      iszero\n      tag_276\n      jumpi\n        /* \"#utility.yul\":10402:10481   */\n      tag_277\n      tag_110\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":10363:10483   */\n    tag_276:\n        /* \"#utility.yul\":10522:10523   */\n      0x00\n        /* \"#utility.yul\":10547:10600   */\n      tag_278\n        /* \"#utility.yul\":10592:10599   */\n      dup8\n        /* \"#utility.yul\":10583:10589   */\n      dup3\n        /* \"#utility.yul\":10572:10581   */\n      dup9\n        /* \"#utility.yul\":10568:10590   */\n      add\n        /* \"#utility.yul\":10547:10600   */\n      tag_134\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":10537:10600   */\n      swap5\n      pop\n        /* \"#utility.yul\":10493:10610   */\n      pop\n        /* \"#utility.yul\":10677:10679   */\n      0x20\n        /* \"#utility.yul\":10666:10675   */\n      dup6\n        /* \"#utility.yul\":10662:10680   */\n      add\n        /* \"#utility.yul\":10649:10681   */\n      calldataload\n        /* \"#utility.yul\":10708:10726   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10700:10706   */\n      dup2\n        /* \"#utility.yul\":10697:10727   */\n      gt\n        /* \"#utility.yul\":10694:10811   */\n      iszero\n      tag_279\n      jumpi\n        /* \"#utility.yul\":10730:10809   */\n      tag_280\n      tag_111\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":10694:10811   */\n    tag_279:\n        /* \"#utility.yul\":10835:10898   */\n      tag_281\n        /* \"#utility.yul\":10890:10897   */\n      dup8\n        /* \"#utility.yul\":10881:10887   */\n      dup3\n        /* \"#utility.yul\":10870:10879   */\n      dup9\n        /* \"#utility.yul\":10866:10888   */\n      add\n        /* \"#utility.yul\":10835:10898   */\n      tag_144\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":10825:10898   */\n      swap4\n      pop\n        /* \"#utility.yul\":10620:10908   */\n      pop\n        /* \"#utility.yul\":10975:10977   */\n      0x40\n        /* \"#utility.yul\":10964:10973   */\n      dup6\n        /* \"#utility.yul\":10960:10978   */\n      add\n        /* \"#utility.yul\":10947:10979   */\n      calldataload\n        /* \"#utility.yul\":11006:11024   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10998:11004   */\n      dup2\n        /* \"#utility.yul\":10995:11025   */\n      gt\n        /* \"#utility.yul\":10992:11109   */\n      iszero\n      tag_282\n      jumpi\n        /* \"#utility.yul\":11028:11107   */\n      tag_283\n      tag_111\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":10992:11109   */\n    tag_282:\n        /* \"#utility.yul\":11133:11196   */\n      tag_284\n        /* \"#utility.yul\":11188:11195   */\n      dup8\n        /* \"#utility.yul\":11179:11185   */\n      dup3\n        /* \"#utility.yul\":11168:11177   */\n      dup9\n        /* \"#utility.yul\":11164:11186   */\n      add\n        /* \"#utility.yul\":11133:11196   */\n      tag_144\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":11123:11196   */\n      swap3\n      pop\n        /* \"#utility.yul\":10918:11206   */\n      pop\n        /* \"#utility.yul\":11273:11275   */\n      0x60\n        /* \"#utility.yul\":11262:11271   */\n      dup6\n        /* \"#utility.yul\":11258:11276   */\n      add\n        /* \"#utility.yul\":11245:11277   */\n      calldataload\n        /* \"#utility.yul\":11304:11322   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11296:11302   */\n      dup2\n        /* \"#utility.yul\":11293:11323   */\n      gt\n        /* \"#utility.yul\":11290:11407   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":11326:11405   */\n      tag_286\n      tag_111\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":11290:11407   */\n    tag_285:\n        /* \"#utility.yul\":11431:11494   */\n      tag_287\n        /* \"#utility.yul\":11486:11493   */\n      dup8\n        /* \"#utility.yul\":11477:11483   */\n      dup3\n        /* \"#utility.yul\":11466:11475   */\n      dup9\n        /* \"#utility.yul\":11462:11484   */\n      add\n        /* \"#utility.yul\":11431:11494   */\n      tag_144\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":11421:11494   */\n      swap2\n      pop\n        /* \"#utility.yul\":11216:11504   */\n      pop\n        /* \"#utility.yul\":10206:11511   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11517:11577   */\n    tag_145:\n        /* \"#utility.yul\":11545:11548   */\n      0x00\n        /* \"#utility.yul\":11566:11571   */\n      dup2\n        /* \"#utility.yul\":11559:11571   */\n      swap1\n      pop\n        /* \"#utility.yul\":11517:11577   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11583:11725   */\n    tag_146:\n        /* \"#utility.yul\":11633:11642   */\n      0x00\n        /* \"#utility.yul\":11666:11719   */\n      tag_290\n        /* \"#utility.yul\":11684:11718   */\n      tag_291\n        /* \"#utility.yul\":11693:11717   */\n      tag_292\n        /* \"#utility.yul\":11711:11716   */\n      dup5\n        /* \"#utility.yul\":11693:11717   */\n      tag_112\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":11684:11718   */\n      tag_145\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":11666:11719   */\n      tag_112\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":11653:11719   */\n      swap1\n      pop\n        /* \"#utility.yul\":11583:11725   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11731:11857   */\n    tag_147:\n        /* \"#utility.yul\":11781:11790   */\n      0x00\n        /* \"#utility.yul\":11814:11851   */\n      tag_294\n        /* \"#utility.yul\":11845:11850   */\n      dup3\n        /* \"#utility.yul\":11814:11851   */\n      tag_146\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":11801:11851   */\n      swap1\n      pop\n        /* \"#utility.yul\":11731:11857   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11863:12003   */\n    tag_148:\n        /* \"#utility.yul\":11927:11936   */\n      0x00\n        /* \"#utility.yul\":11960:11997   */\n      tag_296\n        /* \"#utility.yul\":11991:11996   */\n      dup3\n        /* \"#utility.yul\":11960:11997   */\n      tag_147\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":11947:11997   */\n      swap1\n      pop\n        /* \"#utility.yul\":11863:12003   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12009:12168   */\n    tag_149:\n        /* \"#utility.yul\":12110:12161   */\n      tag_298\n        /* \"#utility.yul\":12155:12160   */\n      dup2\n        /* \"#utility.yul\":12110:12161   */\n      tag_148\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":12105:12108   */\n      dup3\n        /* \"#utility.yul\":12098:12162   */\n      mstore\n        /* \"#utility.yul\":12009:12168   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12174:12424   */\n    tag_39:\n        /* \"#utility.yul\":12281:12285   */\n      0x00\n        /* \"#utility.yul\":12319:12321   */\n      0x20\n        /* \"#utility.yul\":12308:12317   */\n      dup3\n        /* \"#utility.yul\":12304:12322   */\n      add\n        /* \"#utility.yul\":12296:12322   */\n      swap1\n      pop\n        /* \"#utility.yul\":12332:12417   */\n      tag_300\n        /* \"#utility.yul\":12414:12415   */\n      0x00\n        /* \"#utility.yul\":12403:12412   */\n      dup4\n        /* \"#utility.yul\":12399:12416   */\n      add\n        /* \"#utility.yul\":12390:12396   */\n      dup5\n        /* \"#utility.yul\":12332:12417   */\n      tag_149\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":12174:12424   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12430:12599   */\n    tag_150:\n        /* \"#utility.yul\":12514:12525   */\n      0x00\n        /* \"#utility.yul\":12548:12554   */\n      dup3\n        /* \"#utility.yul\":12543:12546   */\n      dup3\n        /* \"#utility.yul\":12536:12555   */\n      mstore\n        /* \"#utility.yul\":12588:12592   */\n      0x20\n        /* \"#utility.yul\":12583:12586   */\n      dup3\n        /* \"#utility.yul\":12579:12593   */\n      add\n        /* \"#utility.yul\":12564:12593   */\n      swap1\n      pop\n        /* \"#utility.yul\":12430:12599   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12605:12776   */\n    tag_151:\n        /* \"#utility.yul\":12745:12768   */\n      0x416363657373206e6f7420617574686f72697a65640000000000000000000000\n        /* \"#utility.yul\":12741:12742   */\n      0x00\n        /* \"#utility.yul\":12733:12739   */\n      dup3\n        /* \"#utility.yul\":12729:12743   */\n      add\n        /* \"#utility.yul\":12722:12769   */\n      mstore\n        /* \"#utility.yul\":12605:12776   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12782:13148   */\n    tag_152:\n        /* \"#utility.yul\":12924:12927   */\n      0x00\n        /* \"#utility.yul\":12945:13012   */\n      tag_304\n        /* \"#utility.yul\":13009:13011   */\n      0x15\n        /* \"#utility.yul\":13004:13007   */\n      dup4\n        /* \"#utility.yul\":12945:13012   */\n      tag_150\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":12938:13012   */\n      swap2\n      pop\n        /* \"#utility.yul\":13021:13114   */\n      tag_305\n        /* \"#utility.yul\":13110:13113   */\n      dup3\n        /* \"#utility.yul\":13021:13114   */\n      tag_151\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":13139:13141   */\n      0x20\n        /* \"#utility.yul\":13134:13137   */\n      dup3\n        /* \"#utility.yul\":13130:13142   */\n      add\n        /* \"#utility.yul\":13123:13142   */\n      swap1\n      pop\n        /* \"#utility.yul\":12782:13148   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13154:13573   */\n    tag_44:\n        /* \"#utility.yul\":13320:13324   */\n      0x00\n        /* \"#utility.yul\":13358:13360   */\n      0x20\n        /* \"#utility.yul\":13347:13356   */\n      dup3\n        /* \"#utility.yul\":13343:13361   */\n      add\n        /* \"#utility.yul\":13335:13361   */\n      swap1\n      pop\n        /* \"#utility.yul\":13407:13416   */\n      dup2\n        /* \"#utility.yul\":13401:13405   */\n      dup2\n        /* \"#utility.yul\":13397:13417   */\n      sub\n        /* \"#utility.yul\":13393:13394   */\n      0x00\n        /* \"#utility.yul\":13382:13391   */\n      dup4\n        /* \"#utility.yul\":13378:13395   */\n      add\n        /* \"#utility.yul\":13371:13418   */\n      mstore\n        /* \"#utility.yul\":13435:13566   */\n      tag_307\n        /* \"#utility.yul\":13561:13565   */\n      dup2\n        /* \"#utility.yul\":13435:13566   */\n      tag_152\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":13427:13566   */\n      swap1\n      pop\n        /* \"#utility.yul\":13154:13573   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13579:13759   */\n    tag_153:\n        /* \"#utility.yul\":13627:13704   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13624:13625   */\n      0x00\n        /* \"#utility.yul\":13617:13705   */\n      mstore\n        /* \"#utility.yul\":13724:13728   */\n      0x22\n        /* \"#utility.yul\":13721:13722   */\n      0x04\n        /* \"#utility.yul\":13714:13729   */\n      mstore\n        /* \"#utility.yul\":13748:13752   */\n      0x24\n        /* \"#utility.yul\":13745:13746   */\n      0x00\n        /* \"#utility.yul\":13738:13753   */\n      revert\n        /* \"#utility.yul\":13765:14085   */\n    tag_49:\n        /* \"#utility.yul\":13809:13815   */\n      0x00\n        /* \"#utility.yul\":13846:13847   */\n      0x02\n        /* \"#utility.yul\":13840:13844   */\n      dup3\n        /* \"#utility.yul\":13836:13848   */\n      div\n        /* \"#utility.yul\":13826:13848   */\n      swap1\n      pop\n        /* \"#utility.yul\":13893:13894   */\n      0x01\n        /* \"#utility.yul\":13887:13891   */\n      dup3\n        /* \"#utility.yul\":13883:13895   */\n      and\n        /* \"#utility.yul\":13914:13932   */\n      dup1\n        /* \"#utility.yul\":13904:13985   */\n      tag_310\n      jumpi\n        /* \"#utility.yul\":13970:13974   */\n      0x7f\n        /* \"#utility.yul\":13962:13968   */\n      dup3\n        /* \"#utility.yul\":13958:13975   */\n      and\n        /* \"#utility.yul\":13948:13975   */\n      swap2\n      pop\n        /* \"#utility.yul\":13904:13985   */\n    tag_310:\n        /* \"#utility.yul\":14032:14034   */\n      0x20\n        /* \"#utility.yul\":14024:14030   */\n      dup3\n        /* \"#utility.yul\":14021:14035   */\n      lt\n        /* \"#utility.yul\":14001:14019   */\n      dup2\n        /* \"#utility.yul\":13998:14036   */\n      sub\n        /* \"#utility.yul\":13995:14079   */\n      tag_311\n      jumpi\n        /* \"#utility.yul\":14051:14069   */\n      tag_312\n      tag_153\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":13995:14079   */\n    tag_311:\n        /* \"#utility.yul\":13816:14085   */\n      pop\n        /* \"#utility.yul\":13765:14085   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14091:14200   */\n    tag_154:\n        /* \"#utility.yul\":14172:14193   */\n      tag_314\n        /* \"#utility.yul\":14187:14192   */\n      dup2\n        /* \"#utility.yul\":14172:14193   */\n      tag_130\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":14167:14170   */\n      dup3\n        /* \"#utility.yul\":14160:14194   */\n      mstore\n        /* \"#utility.yul\":14091:14200   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14206:14526   */\n    tag_68:\n        /* \"#utility.yul\":14321:14325   */\n      0x00\n        /* \"#utility.yul\":14359:14361   */\n      0x40\n        /* \"#utility.yul\":14348:14357   */\n      dup3\n        /* \"#utility.yul\":14344:14362   */\n      add\n        /* \"#utility.yul\":14336:14362   */\n      swap1\n      pop\n        /* \"#utility.yul\":14372:14437   */\n      tag_316\n        /* \"#utility.yul\":14434:14435   */\n      0x00\n        /* \"#utility.yul\":14423:14432   */\n      dup4\n        /* \"#utility.yul\":14419:14436   */\n      add\n        /* \"#utility.yul\":14410:14416   */\n      dup6\n        /* \"#utility.yul\":14372:14437   */\n      tag_154\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":14447:14519   */\n      tag_317\n        /* \"#utility.yul\":14515:14517   */\n      0x20\n        /* \"#utility.yul\":14504:14513   */\n      dup4\n        /* \"#utility.yul\":14500:14518   */\n      add\n        /* \"#utility.yul\":14491:14497   */\n      dup5\n        /* \"#utility.yul\":14447:14519   */\n      tag_135\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":14206:14526   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14532:14714   */\n    tag_155:\n        /* \"#utility.yul\":14672:14706   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e207a65726f\n        /* \"#utility.yul\":14668:14669   */\n      0x00\n        /* \"#utility.yul\":14660:14666   */\n      dup3\n        /* \"#utility.yul\":14656:14670   */\n      add\n        /* \"#utility.yul\":14649:14707   */\n      mstore\n        /* \"#utility.yul\":14532:14714   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14720:15086   */\n    tag_156:\n        /* \"#utility.yul\":14862:14865   */\n      0x00\n        /* \"#utility.yul\":14883:14950   */\n      tag_320\n        /* \"#utility.yul\":14947:14949   */\n      0x20\n        /* \"#utility.yul\":14942:14945   */\n      dup4\n        /* \"#utility.yul\":14883:14950   */\n      tag_150\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":14876:14950   */\n      swap2\n      pop\n        /* \"#utility.yul\":14959:15052   */\n      tag_321\n        /* \"#utility.yul\":15048:15051   */\n      dup3\n        /* \"#utility.yul\":14959:15052   */\n      tag_155\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":15077:15079   */\n      0x20\n        /* \"#utility.yul\":15072:15075   */\n      dup3\n        /* \"#utility.yul\":15068:15080   */\n      add\n        /* \"#utility.yul\":15061:15080   */\n      swap1\n      pop\n        /* \"#utility.yul\":14720:15086   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15092:15511   */\n    tag_72:\n        /* \"#utility.yul\":15258:15262   */\n      0x00\n        /* \"#utility.yul\":15296:15298   */\n      0x20\n        /* \"#utility.yul\":15285:15294   */\n      dup3\n        /* \"#utility.yul\":15281:15299   */\n      add\n        /* \"#utility.yul\":15273:15299   */\n      swap1\n      pop\n        /* \"#utility.yul\":15345:15354   */\n      dup2\n        /* \"#utility.yul\":15339:15343   */\n      dup2\n        /* \"#utility.yul\":15335:15355   */\n      sub\n        /* \"#utility.yul\":15331:15332   */\n      0x00\n        /* \"#utility.yul\":15320:15329   */\n      dup4\n        /* \"#utility.yul\":15316:15333   */\n      add\n        /* \"#utility.yul\":15309:15356   */\n      mstore\n        /* \"#utility.yul\":15373:15504   */\n      tag_323\n        /* \"#utility.yul\":15499:15503   */\n      dup2\n        /* \"#utility.yul\":15373:15504   */\n      tag_156\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":15365:15504   */\n      swap1\n      pop\n        /* \"#utility.yul\":15092:15511   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15517:15635   */\n    tag_157:\n        /* \"#utility.yul\":15604:15628   */\n      tag_325\n        /* \"#utility.yul\":15622:15627   */\n      dup2\n        /* \"#utility.yul\":15604:15628   */\n      tag_113\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":15599:15602   */\n      dup3\n        /* \"#utility.yul\":15592:15629   */\n      mstore\n        /* \"#utility.yul\":15517:15635   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15641:15863   */\n    tag_74:\n        /* \"#utility.yul\":15734:15738   */\n      0x00\n        /* \"#utility.yul\":15772:15774   */\n      0x20\n        /* \"#utility.yul\":15761:15770   */\n      dup3\n        /* \"#utility.yul\":15757:15775   */\n      add\n        /* \"#utility.yul\":15749:15775   */\n      swap1\n      pop\n        /* \"#utility.yul\":15785:15856   */\n      tag_327\n        /* \"#utility.yul\":15853:15854   */\n      0x00\n        /* \"#utility.yul\":15842:15851   */\n      dup4\n        /* \"#utility.yul\":15838:15855   */\n      add\n        /* \"#utility.yul\":15829:15835   */\n      dup5\n        /* \"#utility.yul\":15785:15856   */\n      tag_157\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":15641:15863   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15869:16012   */\n    tag_158:\n        /* \"#utility.yul\":15926:15931   */\n      0x00\n        /* \"#utility.yul\":15957:15963   */\n      dup2\n        /* \"#utility.yul\":15951:15964   */\n      mload\n        /* \"#utility.yul\":15942:15964   */\n      swap1\n      pop\n        /* \"#utility.yul\":15973:16006   */\n      tag_329\n        /* \"#utility.yul\":16000:16005   */\n      dup2\n        /* \"#utility.yul\":15973:16006   */\n      tag_133\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":15869:16012   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16018:16369   */\n    tag_78:\n        /* \"#utility.yul\":16088:16094   */\n      0x00\n        /* \"#utility.yul\":16137:16139   */\n      0x20\n        /* \"#utility.yul\":16125:16134   */\n      dup3\n        /* \"#utility.yul\":16116:16123   */\n      dup5\n        /* \"#utility.yul\":16112:16135   */\n      sub\n        /* \"#utility.yul\":16108:16140   */\n      slt\n        /* \"#utility.yul\":16105:16224   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":16143:16222   */\n      tag_332\n      tag_110\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":16105:16224   */\n    tag_331:\n        /* \"#utility.yul\":16263:16264   */\n      0x00\n        /* \"#utility.yul\":16288:16352   */\n      tag_333\n        /* \"#utility.yul\":16344:16351   */\n      dup5\n        /* \"#utility.yul\":16335:16341   */\n      dup3\n        /* \"#utility.yul\":16324:16333   */\n      dup6\n        /* \"#utility.yul\":16320:16342   */\n      add\n        /* \"#utility.yul\":16288:16352   */\n      tag_158\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":16278:16352   */\n      swap2\n      pop\n        /* \"#utility.yul\":16234:16362   */\n      pop\n        /* \"#utility.yul\":16018:16369   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16375:16554   */\n    tag_159:\n        /* \"#utility.yul\":16515:16546   */\n      0x496e73756666696369656e7420636f6e74726163742062616c616e6365000000\n        /* \"#utility.yul\":16511:16512   */\n      0x00\n        /* \"#utility.yul\":16503:16509   */\n      dup3\n        /* \"#utility.yul\":16499:16513   */\n      add\n        /* \"#utility.yul\":16492:16547   */\n      mstore\n        /* \"#utility.yul\":16375:16554   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16560:16926   */\n    tag_160:\n        /* \"#utility.yul\":16702:16705   */\n      0x00\n        /* \"#utility.yul\":16723:16790   */\n      tag_336\n        /* \"#utility.yul\":16787:16789   */\n      0x1d\n        /* \"#utility.yul\":16782:16785   */\n      dup4\n        /* \"#utility.yul\":16723:16790   */\n      tag_150\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":16716:16790   */\n      swap2\n      pop\n        /* \"#utility.yul\":16799:16892   */\n      tag_337\n        /* \"#utility.yul\":16888:16891   */\n      dup3\n        /* \"#utility.yul\":16799:16892   */\n      tag_159\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":16917:16919   */\n      0x20\n        /* \"#utility.yul\":16912:16915   */\n      dup3\n        /* \"#utility.yul\":16908:16920   */\n      add\n        /* \"#utility.yul\":16901:16920   */\n      swap1\n      pop\n        /* \"#utility.yul\":16560:16926   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16932:17351   */\n    tag_81:\n        /* \"#utility.yul\":17098:17102   */\n      0x00\n        /* \"#utility.yul\":17136:17138   */\n      0x20\n        /* \"#utility.yul\":17125:17134   */\n      dup3\n        /* \"#utility.yul\":17121:17139   */\n      add\n        /* \"#utility.yul\":17113:17139   */\n      swap1\n      pop\n        /* \"#utility.yul\":17185:17194   */\n      dup2\n        /* \"#utility.yul\":17179:17183   */\n      dup2\n        /* \"#utility.yul\":17175:17195   */\n      sub\n        /* \"#utility.yul\":17171:17172   */\n      0x00\n        /* \"#utility.yul\":17160:17169   */\n      dup4\n        /* \"#utility.yul\":17156:17173   */\n      add\n        /* \"#utility.yul\":17149:17196   */\n      mstore\n        /* \"#utility.yul\":17213:17344   */\n      tag_339\n        /* \"#utility.yul\":17339:17343   */\n      dup2\n        /* \"#utility.yul\":17213:17344   */\n      tag_160\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":17205:17344   */\n      swap1\n      pop\n        /* \"#utility.yul\":16932:17351   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17357:17498   */\n    tag_161:\n        /* \"#utility.yul\":17406:17410   */\n      0x00\n        /* \"#utility.yul\":17429:17432   */\n      dup2\n        /* \"#utility.yul\":17421:17432   */\n      swap1\n      pop\n        /* \"#utility.yul\":17452:17455   */\n      dup2\n        /* \"#utility.yul\":17449:17450   */\n      0x00\n        /* \"#utility.yul\":17442:17456   */\n      mstore\n        /* \"#utility.yul\":17486:17490   */\n      0x20\n        /* \"#utility.yul\":17483:17484   */\n      0x00\n        /* \"#utility.yul\":17473:17491   */\n      keccak256\n        /* \"#utility.yul\":17465:17491   */\n      swap1\n      pop\n        /* \"#utility.yul\":17357:17498   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17504:17597   */\n    tag_162:\n        /* \"#utility.yul\":17541:17547   */\n      0x00\n        /* \"#utility.yul\":17588:17590   */\n      0x20\n        /* \"#utility.yul\":17583:17585   */\n      0x1f\n        /* \"#utility.yul\":17576:17581   */\n      dup4\n        /* \"#utility.yul\":17572:17586   */\n      add\n        /* \"#utility.yul\":17568:17591   */\n      div\n        /* \"#utility.yul\":17558:17591   */\n      swap1\n      pop\n        /* \"#utility.yul\":17504:17597   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17603:17710   */\n    tag_163:\n        /* \"#utility.yul\":17647:17655   */\n      0x00\n        /* \"#utility.yul\":17697:17702   */\n      dup3\n        /* \"#utility.yul\":17691:17695   */\n      dup3\n        /* \"#utility.yul\":17687:17703   */\n      shl\n        /* \"#utility.yul\":17666:17703   */\n      swap1\n      pop\n        /* \"#utility.yul\":17603:17710   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17716:18109   */\n    tag_164:\n        /* \"#utility.yul\":17785:17791   */\n      0x00\n        /* \"#utility.yul\":17835:17836   */\n      0x08\n        /* \"#utility.yul\":17823:17833   */\n      dup4\n        /* \"#utility.yul\":17819:17837   */\n      mul\n        /* \"#utility.yul\":17858:17955   */\n      tag_344\n        /* \"#utility.yul\":17888:17954   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":17877:17886   */\n      dup3\n        /* \"#utility.yul\":17858:17955   */\n      tag_163\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":17976:18015   */\n      tag_345\n        /* \"#utility.yul\":18006:18014   */\n      dup7\n        /* \"#utility.yul\":17995:18004   */\n      dup4\n        /* \"#utility.yul\":17976:18015   */\n      tag_163\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":17964:18015   */\n      swap6\n      pop\n        /* \"#utility.yul\":18048:18052   */\n      dup1\n        /* \"#utility.yul\":18044:18053   */\n      not\n        /* \"#utility.yul\":18037:18042   */\n      dup5\n        /* \"#utility.yul\":18033:18054   */\n      and\n        /* \"#utility.yul\":18024:18054   */\n      swap4\n      pop\n        /* \"#utility.yul\":18097:18101   */\n      dup1\n        /* \"#utility.yul\":18087:18095   */\n      dup7\n        /* \"#utility.yul\":18083:18102   */\n      and\n        /* \"#utility.yul\":18076:18081   */\n      dup5\n        /* \"#utility.yul\":18073:18103   */\n      or\n        /* \"#utility.yul\":18063:18103   */\n      swap3\n      pop\n        /* \"#utility.yul\":17792:18109   */\n      pop\n      pop\n        /* \"#utility.yul\":17716:18109   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18115:18257   */\n    tag_165:\n        /* \"#utility.yul\":18165:18174   */\n      0x00\n        /* \"#utility.yul\":18198:18251   */\n      tag_347\n        /* \"#utility.yul\":18216:18250   */\n      tag_348\n        /* \"#utility.yul\":18225:18249   */\n      tag_349\n        /* \"#utility.yul\":18243:18248   */\n      dup5\n        /* \"#utility.yul\":18225:18249   */\n      tag_119\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":18216:18250   */\n      tag_145\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":18198:18251   */\n      tag_119\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":18185:18251   */\n      swap1\n      pop\n        /* \"#utility.yul\":18115:18257   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18263:18338   */\n    tag_166:\n        /* \"#utility.yul\":18306:18309   */\n      0x00\n        /* \"#utility.yul\":18327:18332   */\n      dup2\n        /* \"#utility.yul\":18320:18332   */\n      swap1\n      pop\n        /* \"#utility.yul\":18263:18338   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18344:18613   */\n    tag_167:\n        /* \"#utility.yul\":18454:18493   */\n      tag_352\n        /* \"#utility.yul\":18485:18492   */\n      dup4\n        /* \"#utility.yul\":18454:18493   */\n      tag_165\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":18515:18606   */\n      tag_353\n        /* \"#utility.yul\":18564:18605   */\n      tag_354\n        /* \"#utility.yul\":18588:18604   */\n      dup3\n        /* \"#utility.yul\":18564:18605   */\n      tag_166\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":18556:18562   */\n      dup5\n        /* \"#utility.yul\":18549:18553   */\n      dup5\n        /* \"#utility.yul\":18543:18554   */\n      sload\n        /* \"#utility.yul\":18515:18606   */\n      tag_164\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":18509:18513   */\n      dup3\n        /* \"#utility.yul\":18502:18607   */\n      sstore\n        /* \"#utility.yul\":18420:18613   */\n      pop\n        /* \"#utility.yul\":18344:18613   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18619:18692   */\n    tag_168:\n        /* \"#utility.yul\":18664:18667   */\n      0x00\n        /* \"#utility.yul\":18619:18692   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":18698:18887   */\n    tag_169:\n        /* \"#utility.yul\":18775:18807   */\n      tag_357\n      tag_168\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":18816:18881   */\n      tag_358\n        /* \"#utility.yul\":18874:18880   */\n      dup2\n        /* \"#utility.yul\":18866:18872   */\n      dup5\n        /* \"#utility.yul\":18860:18864   */\n      dup5\n        /* \"#utility.yul\":18816:18881   */\n      tag_167\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":18751:18887   */\n      pop\n        /* \"#utility.yul\":18698:18887   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18893:19079   */\n    tag_170:\n        /* \"#utility.yul\":18953:19073   */\n    tag_360:\n        /* \"#utility.yul\":18970:18973   */\n      dup2\n        /* \"#utility.yul\":18963:18968   */\n      dup2\n        /* \"#utility.yul\":18960:18974   */\n      lt\n        /* \"#utility.yul\":18953:19073   */\n      iszero\n      tag_362\n      jumpi\n        /* \"#utility.yul\":19024:19063   */\n      tag_363\n        /* \"#utility.yul\":19061:19062   */\n      0x00\n        /* \"#utility.yul\":19054:19059   */\n      dup3\n        /* \"#utility.yul\":19024:19063   */\n      tag_169\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":18997:18998   */\n      0x01\n        /* \"#utility.yul\":18990:18995   */\n      dup2\n        /* \"#utility.yul\":18986:18999   */\n      add\n        /* \"#utility.yul\":18977:18999   */\n      swap1\n      pop\n        /* \"#utility.yul\":18953:19073   */\n      jump(tag_360)\n    tag_362:\n        /* \"#utility.yul\":18893:19079   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19085:19628   */\n    tag_171:\n        /* \"#utility.yul\":19186:19188   */\n      0x1f\n        /* \"#utility.yul\":19181:19184   */\n      dup3\n        /* \"#utility.yul\":19178:19189   */\n      gt\n        /* \"#utility.yul\":19175:19621   */\n      iszero\n      tag_365\n      jumpi\n        /* \"#utility.yul\":19220:19258   */\n      tag_366\n        /* \"#utility.yul\":19252:19257   */\n      dup2\n        /* \"#utility.yul\":19220:19258   */\n      tag_161\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":19304:19333   */\n      tag_367\n        /* \"#utility.yul\":19322:19332   */\n      dup5\n        /* \"#utility.yul\":19304:19333   */\n      tag_162\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":19294:19302   */\n      dup2\n        /* \"#utility.yul\":19290:19334   */\n      add\n        /* \"#utility.yul\":19487:19489   */\n      0x20\n        /* \"#utility.yul\":19475:19485   */\n      dup6\n        /* \"#utility.yul\":19472:19490   */\n      lt\n        /* \"#utility.yul\":19469:19518   */\n      iszero\n      tag_368\n      jumpi\n        /* \"#utility.yul\":19508:19516   */\n      dup2\n        /* \"#utility.yul\":19493:19516   */\n      swap1\n      pop\n        /* \"#utility.yul\":19469:19518   */\n    tag_368:\n        /* \"#utility.yul\":19531:19611   */\n      tag_369\n        /* \"#utility.yul\":19587:19609   */\n      tag_370\n        /* \"#utility.yul\":19605:19608   */\n      dup6\n        /* \"#utility.yul\":19587:19609   */\n      tag_162\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":19577:19585   */\n      dup4\n        /* \"#utility.yul\":19573:19610   */\n      add\n        /* \"#utility.yul\":19560:19571   */\n      dup3\n        /* \"#utility.yul\":19531:19611   */\n      tag_170\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":19190:19621   */\n      pop\n      pop\n        /* \"#utility.yul\":19175:19621   */\n    tag_365:\n        /* \"#utility.yul\":19085:19628   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19634:19751   */\n    tag_172:\n        /* \"#utility.yul\":19688:19696   */\n      0x00\n        /* \"#utility.yul\":19738:19743   */\n      dup3\n        /* \"#utility.yul\":19732:19736   */\n      dup3\n        /* \"#utility.yul\":19728:19744   */\n      shr\n        /* \"#utility.yul\":19707:19744   */\n      swap1\n      pop\n        /* \"#utility.yul\":19634:19751   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19757:19926   */\n    tag_173:\n        /* \"#utility.yul\":19801:19807   */\n      0x00\n        /* \"#utility.yul\":19834:19885   */\n      tag_373\n        /* \"#utility.yul\":19882:19883   */\n      0x00\n        /* \"#utility.yul\":19878:19884   */\n      not\n        /* \"#utility.yul\":19870:19875   */\n      dup5\n        /* \"#utility.yul\":19867:19868   */\n      0x08\n        /* \"#utility.yul\":19863:19876   */\n      mul\n        /* \"#utility.yul\":19834:19885   */\n      tag_172\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":19830:19886   */\n      not\n        /* \"#utility.yul\":19915:19919   */\n      dup1\n        /* \"#utility.yul\":19909:19913   */\n      dup4\n        /* \"#utility.yul\":19905:19920   */\n      and\n        /* \"#utility.yul\":19895:19920   */\n      swap2\n      pop\n        /* \"#utility.yul\":19808:19926   */\n      pop\n        /* \"#utility.yul\":19757:19926   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19931:20226   */\n    tag_174:\n        /* \"#utility.yul\":20007:20011   */\n      0x00\n        /* \"#utility.yul\":20153:20182   */\n      tag_375\n        /* \"#utility.yul\":20178:20181   */\n      dup4\n        /* \"#utility.yul\":20172:20176   */\n      dup4\n        /* \"#utility.yul\":20153:20182   */\n      tag_173\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":20145:20182   */\n      swap2\n      pop\n        /* \"#utility.yul\":20215:20218   */\n      dup3\n        /* \"#utility.yul\":20212:20213   */\n      0x02\n        /* \"#utility.yul\":20208:20219   */\n      mul\n        /* \"#utility.yul\":20202:20206   */\n      dup3\n        /* \"#utility.yul\":20199:20220   */\n      or\n        /* \"#utility.yul\":20191:20220   */\n      swap1\n      pop\n        /* \"#utility.yul\":19931:20226   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20231:21626   */\n    tag_92:\n        /* \"#utility.yul\":20348:20385   */\n      tag_377\n        /* \"#utility.yul\":20381:20384   */\n      dup3\n        /* \"#utility.yul\":20348:20385   */\n      tag_121\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":20450:20468   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":20442:20448   */\n      dup2\n        /* \"#utility.yul\":20439:20469   */\n      gt\n        /* \"#utility.yul\":20436:20492   */\n      iszero\n      tag_378\n      jumpi\n        /* \"#utility.yul\":20472:20490   */\n      tag_379\n      tag_138\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":20436:20492   */\n    tag_378:\n        /* \"#utility.yul\":20516:20554   */\n      tag_380\n        /* \"#utility.yul\":20548:20552   */\n      dup3\n        /* \"#utility.yul\":20542:20553   */\n      sload\n        /* \"#utility.yul\":20516:20554   */\n      tag_49\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":20601:20668   */\n      tag_381\n        /* \"#utility.yul\":20661:20667   */\n      dup3\n        /* \"#utility.yul\":20653:20659   */\n      dup3\n        /* \"#utility.yul\":20647:20651   */\n      dup6\n        /* \"#utility.yul\":20601:20668   */\n      tag_171\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":20695:20696   */\n      0x00\n        /* \"#utility.yul\":20719:20723   */\n      0x20\n        /* \"#utility.yul\":20706:20723   */\n      swap1\n      pop\n        /* \"#utility.yul\":20751:20753   */\n      0x1f\n        /* \"#utility.yul\":20743:20749   */\n      dup4\n        /* \"#utility.yul\":20740:20754   */\n      gt\n        /* \"#utility.yul\":20768:20769   */\n      0x01\n        /* \"#utility.yul\":20763:21381   */\n      dup2\n      eq\n      tag_383\n      jumpi\n        /* \"#utility.yul\":21425:21426   */\n      0x00\n        /* \"#utility.yul\":21442:21448   */\n      dup5\n        /* \"#utility.yul\":21439:21516   */\n      iszero\n      tag_384\n      jumpi\n        /* \"#utility.yul\":21491:21500   */\n      dup3\n        /* \"#utility.yul\":21486:21489   */\n      dup8\n        /* \"#utility.yul\":21482:21501   */\n      add\n        /* \"#utility.yul\":21476:21502   */\n      mload\n        /* \"#utility.yul\":21467:21502   */\n      swap1\n      pop\n        /* \"#utility.yul\":21439:21516   */\n    tag_384:\n        /* \"#utility.yul\":21542:21609   */\n      tag_385\n        /* \"#utility.yul\":21602:21608   */\n      dup6\n        /* \"#utility.yul\":21595:21600   */\n      dup3\n        /* \"#utility.yul\":21542:21609   */\n      tag_174\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":21536:21540   */\n      dup7\n        /* \"#utility.yul\":21529:21610   */\n      sstore\n        /* \"#utility.yul\":21398:21620   */\n      pop\n        /* \"#utility.yul\":20733:21620   */\n      jump(tag_382)\n        /* \"#utility.yul\":20763:21381   */\n    tag_383:\n        /* \"#utility.yul\":20815:20819   */\n      0x1f\n        /* \"#utility.yul\":20811:20820   */\n      not\n        /* \"#utility.yul\":20803:20809   */\n      dup5\n        /* \"#utility.yul\":20799:20821   */\n      and\n        /* \"#utility.yul\":20849:20886   */\n      tag_386\n        /* \"#utility.yul\":20881:20885   */\n      dup7\n        /* \"#utility.yul\":20849:20886   */\n      tag_161\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":20908:20909   */\n      0x00\n        /* \"#utility.yul\":20922:21130   */\n    tag_387:\n        /* \"#utility.yul\":20936:20943   */\n      dup3\n        /* \"#utility.yul\":20933:20934   */\n      dup2\n        /* \"#utility.yul\":20930:20944   */\n      lt\n        /* \"#utility.yul\":20922:21130   */\n      iszero\n      tag_389\n      jumpi\n        /* \"#utility.yul\":21015:21024   */\n      dup5\n        /* \"#utility.yul\":21010:21013   */\n      dup10\n        /* \"#utility.yul\":21006:21025   */\n      add\n        /* \"#utility.yul\":21000:21026   */\n      mload\n        /* \"#utility.yul\":20992:20998   */\n      dup3\n        /* \"#utility.yul\":20985:21027   */\n      sstore\n        /* \"#utility.yul\":21066:21067   */\n      0x01\n        /* \"#utility.yul\":21058:21064   */\n      dup3\n        /* \"#utility.yul\":21054:21068   */\n      add\n        /* \"#utility.yul\":21044:21068   */\n      swap2\n      pop\n        /* \"#utility.yul\":21113:21115   */\n      0x20\n        /* \"#utility.yul\":21102:21111   */\n      dup6\n        /* \"#utility.yul\":21098:21116   */\n      add\n        /* \"#utility.yul\":21085:21116   */\n      swap5\n      pop\n        /* \"#utility.yul\":20959:20963   */\n      0x20\n        /* \"#utility.yul\":20956:20957   */\n      dup2\n        /* \"#utility.yul\":20952:20964   */\n      add\n        /* \"#utility.yul\":20947:20964   */\n      swap1\n      pop\n        /* \"#utility.yul\":20922:21130   */\n      jump(tag_387)\n    tag_389:\n        /* \"#utility.yul\":21158:21164   */\n      dup7\n        /* \"#utility.yul\":21149:21156   */\n      dup4\n        /* \"#utility.yul\":21146:21165   */\n      lt\n        /* \"#utility.yul\":21143:21322   */\n      iszero\n      tag_390\n      jumpi\n        /* \"#utility.yul\":21216:21225   */\n      dup5\n        /* \"#utility.yul\":21211:21214   */\n      dup10\n        /* \"#utility.yul\":21207:21226   */\n      add\n        /* \"#utility.yul\":21201:21227   */\n      mload\n        /* \"#utility.yul\":21259:21307   */\n      tag_391\n        /* \"#utility.yul\":21301:21305   */\n      0x1f\n        /* \"#utility.yul\":21293:21299   */\n      dup10\n        /* \"#utility.yul\":21289:21306   */\n      and\n        /* \"#utility.yul\":21278:21287   */\n      dup3\n        /* \"#utility.yul\":21259:21307   */\n      tag_173\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":21251:21257   */\n      dup4\n        /* \"#utility.yul\":21244:21308   */\n      sstore\n        /* \"#utility.yul\":21166:21322   */\n      pop\n        /* \"#utility.yul\":21143:21322   */\n    tag_390:\n        /* \"#utility.yul\":21368:21369   */\n      0x01\n        /* \"#utility.yul\":21364:21365   */\n      0x02\n        /* \"#utility.yul\":21356:21362   */\n      dup9\n        /* \"#utility.yul\":21352:21366   */\n      mul\n        /* \"#utility.yul\":21348:21370   */\n      add\n        /* \"#utility.yul\":21342:21346   */\n      dup9\n        /* \"#utility.yul\":21335:21371   */\n      sstore\n        /* \"#utility.yul\":20770:21381   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":20733:21620   */\n    tag_382:\n      pop\n        /* \"#utility.yul\":20323:21626   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":20231:21626   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21632:21964   */\n    tag_97:\n        /* \"#utility.yul\":21753:21757   */\n      0x00\n        /* \"#utility.yul\":21791:21793   */\n      0x40\n        /* \"#utility.yul\":21780:21789   */\n      dup3\n        /* \"#utility.yul\":21776:21794   */\n      add\n        /* \"#utility.yul\":21768:21794   */\n      swap1\n      pop\n        /* \"#utility.yul\":21804:21875   */\n      tag_393\n        /* \"#utility.yul\":21872:21873   */\n      0x00\n        /* \"#utility.yul\":21861:21870   */\n      dup4\n        /* \"#utility.yul\":21857:21874   */\n      add\n        /* \"#utility.yul\":21848:21854   */\n      dup6\n        /* \"#utility.yul\":21804:21875   */\n      tag_135\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":21885:21957   */\n      tag_394\n        /* \"#utility.yul\":21953:21955   */\n      0x20\n        /* \"#utility.yul\":21942:21951   */\n      dup4\n        /* \"#utility.yul\":21938:21956   */\n      add\n        /* \"#utility.yul\":21929:21935   */\n      dup5\n        /* \"#utility.yul\":21885:21957   */\n      tag_135\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":21632:21964   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21970:22302   */\n    tag_101:\n        /* \"#utility.yul\":22091:22095   */\n      0x00\n        /* \"#utility.yul\":22129:22131   */\n      0x40\n        /* \"#utility.yul\":22118:22127   */\n      dup3\n        /* \"#utility.yul\":22114:22132   */\n      add\n        /* \"#utility.yul\":22106:22132   */\n      swap1\n      pop\n        /* \"#utility.yul\":22142:22213   */\n      tag_396\n        /* \"#utility.yul\":22210:22211   */\n      0x00\n        /* \"#utility.yul\":22199:22208   */\n      dup4\n        /* \"#utility.yul\":22195:22212   */\n      add\n        /* \"#utility.yul\":22186:22192   */\n      dup6\n        /* \"#utility.yul\":22142:22213   */\n      tag_157\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":22223:22295   */\n      tag_397\n        /* \"#utility.yul\":22291:22293   */\n      0x20\n        /* \"#utility.yul\":22280:22289   */\n      dup4\n        /* \"#utility.yul\":22276:22294   */\n      add\n        /* \"#utility.yul\":22267:22273   */\n      dup5\n        /* \"#utility.yul\":22223:22295   */\n      tag_135\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":21970:22302   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220dbcf81e28880a3c9e9483581aa3a0092fe98660df8e05b13b59c178ab6074a0764736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_676": {
									"entryPoint": null,
									"id": 676,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 302,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 322,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 421,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 365,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 263,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 232,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 228,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743": {
									"entryPoint": 381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 280,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2348:7",
										"nodeType": "YulBlock",
										"src": "0:2348:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:81:7",
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nativeSrc": "389:65:7",
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:7",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nativeSrc": "400:54:7",
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nativeSrc": "511:51:7",
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nativeSrc": "521:35:7",
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nativeSrc": "532:24:7",
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:7",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:7",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nativeSrc": "611:79:7",
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:7",
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:7",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:7",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nativeSrc": "670:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nativeSrc": "670:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nativeSrc": "641:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nativeSrc": "631:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nativeSrc": "624:43:7",
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nativeSrc": "621:63:7",
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:7",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nativeSrc": "759:80:7",
													"nodeType": "YulBlock",
													"src": "759:80:7",
													"statements": [
														{
															"nativeSrc": "769:22:7",
															"nodeType": "YulAssignment",
															"src": "769:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:7"
																},
																"nativeSrc": "778:13:7",
																"nodeType": "YulFunctionCall",
																"src": "778:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:7"
																},
																"nativeSrc": "800:33:7",
																"nodeType": "YulFunctionCall",
																"src": "800:33:7"
															},
															"nativeSrc": "800:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:7",
														"nodeType": "YulTypedName",
														"src": "737:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:7",
														"nodeType": "YulTypedName",
														"src": "745:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:7",
														"nodeType": "YulTypedName",
														"src": "753:5:7",
														"type": ""
													}
												],
												"src": "696:143:7"
											},
											{
												"body": {
													"nativeSrc": "922:274:7",
													"nodeType": "YulBlock",
													"src": "922:274:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:7",
																"nodeType": "YulBlock",
																"src": "968:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:7"
																			},
																			"nativeSrc": "970:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:7"
																		},
																		"nativeSrc": "970:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:7"
																		},
																		"nativeSrc": "939:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:7",
																		"nodeType": "YulLiteral",
																		"src": "964:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:7"
																},
																"nativeSrc": "935:32:7",
																"nodeType": "YulFunctionCall",
																"src": "935:32:7"
															},
															"nativeSrc": "932:119:7",
															"nodeType": "YulIf",
															"src": "932:119:7"
														},
														{
															"nativeSrc": "1061:128:7",
															"nodeType": "YulBlock",
															"src": "1061:128:7",
															"statements": [
																{
																	"nativeSrc": "1076:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:7"
																				},
																				"nativeSrc": "1147:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:7"
																		},
																		"nativeSrc": "1115:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:7",
														"nodeType": "YulTypedName",
														"src": "892:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:7",
														"nodeType": "YulTypedName",
														"src": "903:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:7",
														"nodeType": "YulTypedName",
														"src": "915:6:7",
														"type": ""
													}
												],
												"src": "845:351:7"
											},
											{
												"body": {
													"nativeSrc": "1298:73:7",
													"nodeType": "YulBlock",
													"src": "1298:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1315:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1315:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1320:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1320:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1308:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1308:6:7"
																},
																"nativeSrc": "1308:19:7",
																"nodeType": "YulFunctionCall",
																"src": "1308:19:7"
															},
															"nativeSrc": "1308:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "1308:19:7"
														},
														{
															"nativeSrc": "1336:29:7",
															"nodeType": "YulAssignment",
															"src": "1336:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1355:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1355:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1360:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1360:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1351:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1351:3:7"
																},
																"nativeSrc": "1351:14:7",
																"nodeType": "YulFunctionCall",
																"src": "1351:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1336:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "1336:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1202:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1270:3:7",
														"nodeType": "YulTypedName",
														"src": "1270:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1275:6:7",
														"nodeType": "YulTypedName",
														"src": "1275:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1286:11:7",
														"nodeType": "YulTypedName",
														"src": "1286:11:7",
														"type": ""
													}
												],
												"src": "1202:169:7"
											},
											{
												"body": {
													"nativeSrc": "1483:65:7",
													"nodeType": "YulBlock",
													"src": "1483:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1505:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1505:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1513:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1513:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1501:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1501:3:7"
																		},
																		"nativeSrc": "1501:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1501:14:7"
																	},
																	{
																		"hexValue": "496e76616c696420746f6b656e2061646472657373",
																		"kind": "string",
																		"nativeSrc": "1517:23:7",
																		"nodeType": "YulLiteral",
																		"src": "1517:23:7",
																		"type": "",
																		"value": "Invalid token address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1494:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1494:6:7"
																},
																"nativeSrc": "1494:47:7",
																"nodeType": "YulFunctionCall",
																"src": "1494:47:7"
															},
															"nativeSrc": "1494:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "1494:47:7"
														}
													]
												},
												"name": "store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
												"nativeSrc": "1377:171:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1475:6:7",
														"nodeType": "YulTypedName",
														"src": "1475:6:7",
														"type": ""
													}
												],
												"src": "1377:171:7"
											},
											{
												"body": {
													"nativeSrc": "1700:220:7",
													"nodeType": "YulBlock",
													"src": "1700:220:7",
													"statements": [
														{
															"nativeSrc": "1710:74:7",
															"nodeType": "YulAssignment",
															"src": "1710:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1781:2:7",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1717:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "1717:58:7"
																},
																"nativeSrc": "1717:67:7",
																"nodeType": "YulFunctionCall",
																"src": "1717:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1710:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1710:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1882:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1882:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																	"nativeSrc": "1793:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "1793:88:7"
																},
																"nativeSrc": "1793:93:7",
																"nodeType": "YulFunctionCall",
																"src": "1793:93:7"
															},
															"nativeSrc": "1793:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "1793:93:7"
														},
														{
															"nativeSrc": "1895:19:7",
															"nodeType": "YulAssignment",
															"src": "1895:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1906:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1906:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1911:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1911:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1902:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1902:3:7"
																},
																"nativeSrc": "1902:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1902:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1895:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1895:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1554:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1688:3:7",
														"nodeType": "YulTypedName",
														"src": "1688:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1696:3:7",
														"nodeType": "YulTypedName",
														"src": "1696:3:7",
														"type": ""
													}
												],
												"src": "1554:366:7"
											},
											{
												"body": {
													"nativeSrc": "2097:248:7",
													"nodeType": "YulBlock",
													"src": "2097:248:7",
													"statements": [
														{
															"nativeSrc": "2107:26:7",
															"nodeType": "YulAssignment",
															"src": "2107:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2119:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2119:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2130:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2130:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2115:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2115:3:7"
																},
																"nativeSrc": "2115:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2115:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2107:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2107:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2154:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2154:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2165:1:7",
																				"nodeType": "YulLiteral",
																				"src": "2165:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2150:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2150:3:7"
																		},
																		"nativeSrc": "2150:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2150:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2173:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "2173:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2179:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2179:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2169:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2169:3:7"
																		},
																		"nativeSrc": "2169:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2169:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2143:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2143:6:7"
																},
																"nativeSrc": "2143:47:7",
																"nodeType": "YulFunctionCall",
																"src": "2143:47:7"
															},
															"nativeSrc": "2143:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "2143:47:7"
														},
														{
															"nativeSrc": "2199:139:7",
															"nodeType": "YulAssignment",
															"src": "2199:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2333:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2333:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2207:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "2207:124:7"
																},
																"nativeSrc": "2207:131:7",
																"nodeType": "YulFunctionCall",
																"src": "2207:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2199:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2199:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1926:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2077:9:7",
														"nodeType": "YulTypedName",
														"src": "2077:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2092:4:7",
														"nodeType": "YulTypedName",
														"src": "2092:4:7",
														"type": ""
													}
												],
												"src": "1926:419:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid token address\")\n\n    }\n\n    function abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060405161181638038061181683398181016040528101906100319190610142565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361009f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610096906101c7565b60405180910390fd5b805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506101e5565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610111826100e8565b9050919050565b61012181610107565b811461012b575f80fd5b50565b5f8151905061013c81610118565b92915050565b5f60208284031215610157576101566100e4565b5b5f6101648482850161012e565b91505092915050565b5f82825260208201905092915050565b7f496e76616c696420746f6b656e206164647265737300000000000000000000005f82015250565b5f6101b160158361016d565b91506101bc8261017d565b602082019050919050565b5f6020820190508181035f8301526101de816101a5565b9050919050565b611624806101f25f395ff3fe608060405234801561000f575f80fd5b506004361061007b575f3560e01c80639e9aed62116100595780639e9aed62146100e7578063a94f576614610105578063d4ba890214610121578063f7c618c11461013f5761007b565b806305c175211461007f5780630c66f928146100af57806346e04a2f146100cb575b5f80fd5b61009960048036038101906100949190610ba4565b61015d565b6040516100a69190610d93565b60405180910390f35b6100c960048036038101906100c49190610de8565b6104b3565b005b6100e560048036038101906100e09190610e50565b610607565b005b6100ef6107bd565b6040516100fc9190610e8a565b60405180910390f35b61011f600480360381019061011a9190610fcf565b61085b565b005b6101296109f0565b6040516101369190610e8a565b60405180910390f35b6101476109fc565b60405161015491906110e2565b60405180910390f35b60603373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16148061021a575060025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b610259576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025090611155565b60405180910390fd5b60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805480602002602001604051908101604052809291908181526020015f905b828210156104a8578382905f5260205f2090600502016040518060a00160405290815f8201548152602001600182015481526020016002820180546102f9906111a0565b80601f0160208091040260200160405190810160405280929190818152602001828054610325906111a0565b80156103705780601f1061034757610100808354040283529160200191610370565b820191905f5260205f20905b81548152906001019060200180831161035357829003601f168201915b50505050508152602001600382018054610389906111a0565b80601f01602080910402602001604051908101604052809291908181526020018280546103b5906111a0565b80156104005780601f106103d757610100808354040283529160200191610400565b820191905f5260205f20905b8154815290600101906020018083116103e357829003601f168201915b50505050508152602001600482018054610419906111a0565b80601f0160208091040260200160405190810160405280929190818152602001828054610445906111a0565b80156104905780601f1061046757610100808354040283529160200191610490565b820191905f5260205f20905b81548152906001019060200180831161047357829003601f168201915b505050505081525050815260200190600101906102b5565b505050509050919050565b8060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061059433678ac7230489e800005f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610a1f9092919063ffffffff16565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f09c705c294119a93fb8ea4861ef048d5884d9504575b35eb38c7ea7705cf28b083678ac7230489e800006040516105fb9291906111df565b60405180910390a35050565b5f8111610649576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064090611250565b60405180910390fd5b805f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016106a2919061127d565b602060405180830381865afa1580156106bd573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106e191906112aa565b1015610722576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107199061131f565b60405180910390fd5b61076c33825f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610a1f9092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e430826040516107b29190610e8a565b60405180910390a250565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610817919061127d565b602060405180830381865afa158015610832573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061085691906112aa565b905090565b5f6040518060a0016040528042815260200186815260200185815260200184815260200183815250905060015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081908060018154018082558091505060019003905f5260205f2090600502015f909190919091505f820151815f015560208201518160010155604082015181600201908161091091906114d1565b50606082015181600301908161092691906114d1565b50608082015181600401908161093c91906114d1565b50505061099133678ac7230489e800005f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610a1f9092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f46b8550ac8f5f68f14d6a3540963578c9733e4ff2a4e7ca11cccdeeb0b521d6742678ac7230489e800006040516109e19291906115a0565b60405180910390a25050505050565b678ac7230489e8000081565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610a99838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610a529291906115c7565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610a9e565b505050565b5f8060205f8451602086015f885af180610abd576040513d5f823e3d81fd5b3d92505f519150505f8214610ad6576001811415610af1565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b15610b3357836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610b2a919061127d565b60405180910390fd5b50505050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610b7382610b4a565b9050919050565b610b8381610b69565b8114610b8d575f80fd5b50565b5f81359050610b9e81610b7a565b92915050565b5f60208284031215610bb957610bb8610b42565b5b5f610bc684828501610b90565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f819050919050565b610c0a81610bf8565b82525050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610c5282610c10565b610c5c8185610c1a565b9350610c6c818560208601610c2a565b610c7581610c38565b840191505092915050565b5f60a083015f830151610c955f860182610c01565b506020830151610ca86020860182610c01565b5060408301518482036040860152610cc08282610c48565b91505060608301518482036060860152610cda8282610c48565b91505060808301518482036080860152610cf48282610c48565b9150508091505092915050565b5f610d0c8383610c80565b905092915050565b5f602082019050919050565b5f610d2a82610bcf565b610d348185610bd9565b935083602082028501610d4685610be9565b805f5b85811015610d815784840389528151610d628582610d01565b9450610d6d83610d14565b925060208a01995050600181019050610d49565b50829750879550505050505092915050565b5f6020820190508181035f830152610dab8184610d20565b905092915050565b5f8115159050919050565b610dc781610db3565b8114610dd1575f80fd5b50565b5f81359050610de281610dbe565b92915050565b5f8060408385031215610dfe57610dfd610b42565b5b5f610e0b85828601610b90565b9250506020610e1c85828601610dd4565b9150509250929050565b610e2f81610bf8565b8114610e39575f80fd5b50565b5f81359050610e4a81610e26565b92915050565b5f60208284031215610e6557610e64610b42565b5b5f610e7284828501610e3c565b91505092915050565b610e8481610bf8565b82525050565b5f602082019050610e9d5f830184610e7b565b92915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610ee182610c38565b810181811067ffffffffffffffff82111715610f0057610eff610eab565b5b80604052505050565b5f610f12610b39565b9050610f1e8282610ed8565b919050565b5f67ffffffffffffffff821115610f3d57610f3c610eab565b5b610f4682610c38565b9050602081019050919050565b828183375f83830152505050565b5f610f73610f6e84610f23565b610f09565b905082815260208101848484011115610f8f57610f8e610ea7565b5b610f9a848285610f53565b509392505050565b5f82601f830112610fb657610fb5610ea3565b5b8135610fc6848260208601610f61565b91505092915050565b5f805f8060808587031215610fe757610fe6610b42565b5b5f610ff487828801610e3c565b945050602085013567ffffffffffffffff81111561101557611014610b46565b5b61102187828801610fa2565b935050604085013567ffffffffffffffff81111561104257611041610b46565b5b61104e87828801610fa2565b925050606085013567ffffffffffffffff81111561106f5761106e610b46565b5b61107b87828801610fa2565b91505092959194509250565b5f819050919050565b5f6110aa6110a56110a084610b4a565b611087565b610b4a565b9050919050565b5f6110bb82611090565b9050919050565b5f6110cc826110b1565b9050919050565b6110dc816110c2565b82525050565b5f6020820190506110f55f8301846110d3565b92915050565b5f82825260208201905092915050565b7f416363657373206e6f7420617574686f72697a656400000000000000000000005f82015250565b5f61113f6015836110fb565b915061114a8261110b565b602082019050919050565b5f6020820190508181035f83015261116c81611133565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806111b757607f821691505b6020821081036111ca576111c9611173565b5b50919050565b6111d981610db3565b82525050565b5f6040820190506111f25f8301856111d0565b6111ff6020830184610e7b565b9392505050565b7f416d6f756e74206d7573742062652067726561746572207468616e207a65726f5f82015250565b5f61123a6020836110fb565b915061124582611206565b602082019050919050565b5f6020820190508181035f8301526112678161122e565b9050919050565b61127781610b69565b82525050565b5f6020820190506112905f83018461126e565b92915050565b5f815190506112a481610e26565b92915050565b5f602082840312156112bf576112be610b42565b5b5f6112cc84828501611296565b91505092915050565b7f496e73756666696369656e7420636f6e74726163742062616c616e63650000005f82015250565b5f611309601d836110fb565b9150611314826112d5565b602082019050919050565b5f6020820190508181035f830152611336816112fd565b9050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026113997fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261135e565b6113a3868361135e565b95508019841693508086168417925050509392505050565b5f6113d56113d06113cb84610bf8565b611087565b610bf8565b9050919050565b5f819050919050565b6113ee836113bb565b6114026113fa826113dc565b84845461136a565b825550505050565b5f90565b61141661140a565b6114218184846113e5565b505050565b5b81811015611444576114395f8261140e565b600181019050611427565b5050565b601f8211156114895761145a8161133d565b6114638461134f565b81016020851015611472578190505b61148661147e8561134f565b830182611426565b50505b505050565b5f82821c905092915050565b5f6114a95f198460080261148e565b1980831691505092915050565b5f6114c1838361149a565b9150826002028217905092915050565b6114da82610c10565b67ffffffffffffffff8111156114f3576114f2610eab565b5b6114fd82546111a0565b611508828285611448565b5f60209050601f831160018114611539575f8415611527578287015190505b61153185826114b6565b865550611598565b601f1984166115478661133d565b5f5b8281101561156e57848901518255600182019150602085019450602081019050611549565b8683101561158b5784890151611587601f89168261149a565b8355505b6001600288020188555050505b505050505050565b5f6040820190506115b35f830185610e7b565b6115c06020830184610e7b565b9392505050565b5f6040820190506115da5f83018561126e565b6115e76020830184610e7b565b939250505056fea2646970667358221220dbcf81e28880a3c9e9483581aa3a0092fe98660df8e05b13b59c178ab6074a0764736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1816 CODESIZE SUB DUP1 PUSH2 0x1816 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x142 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x96 SWAP1 PUSH2 0x1C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x1E5 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x111 DUP3 PUSH2 0xE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x121 DUP2 PUSH2 0x107 JUMP JUMPDEST DUP2 EQ PUSH2 0x12B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x13C DUP2 PUSH2 0x118 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x157 JUMPI PUSH2 0x156 PUSH2 0xE4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x164 DUP5 DUP3 DUP6 ADD PUSH2 0x12E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420746F6B656E20616464726573730000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B1 PUSH1 0x15 DUP4 PUSH2 0x16D JUMP JUMPDEST SWAP2 POP PUSH2 0x1BC DUP3 PUSH2 0x17D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DE DUP2 PUSH2 0x1A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1624 DUP1 PUSH2 0x1F2 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E9AED62 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x9E9AED62 EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0xA94F5766 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0xD4BA8902 EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x13F JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x5C17521 EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0xC66F928 EQ PUSH2 0xAF JUMPI DUP1 PUSH4 0x46E04A2F EQ PUSH2 0xCB JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x99 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x94 SWAP2 SWAP1 PUSH2 0xBA4 JUMP JUMPDEST PUSH2 0x15D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC4 SWAP2 SWAP1 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0x4B3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0xE50 JUMP JUMPDEST PUSH2 0x607 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEF PUSH2 0x7BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFC SWAP2 SWAP1 PUSH2 0xE8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0xFCF JUMP JUMPDEST PUSH2 0x85B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x129 PUSH2 0x9F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x136 SWAP2 SWAP1 PUSH2 0xE8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x147 PUSH2 0x9FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x154 SWAP2 SWAP1 PUSH2 0x10E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x21A JUMPI POP PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x259 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x250 SWAP1 PUSH2 0x1155 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x4A8 JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x2F9 SWAP1 PUSH2 0x11A0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x325 SWAP1 PUSH2 0x11A0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x370 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x347 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x370 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x353 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH2 0x389 SWAP1 PUSH2 0x11A0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3B5 SWAP1 PUSH2 0x11A0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x400 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x400 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3E3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH2 0x419 SWAP1 PUSH2 0x11A0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x445 SWAP1 PUSH2 0x11A0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x490 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x467 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x490 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x473 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2B5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x594 CALLER PUSH8 0x8AC7230489E80000 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA1F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9C705C294119A93FB8EA4861EF048D5884D9504575B35EB38C7EA7705CF28B0 DUP4 PUSH8 0x8AC7230489E80000 PUSH1 0x40 MLOAD PUSH2 0x5FB SWAP3 SWAP2 SWAP1 PUSH2 0x11DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x649 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x640 SWAP1 PUSH2 0x1250 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A2 SWAP2 SWAP1 PUSH2 0x127D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6BD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6E1 SWAP2 SWAP1 PUSH2 0x12AA JUMP JUMPDEST LT ISZERO PUSH2 0x722 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x719 SWAP1 PUSH2 0x131F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x76C CALLER DUP3 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA1F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x896E034966EAAF1ADC54ACC0F257056FEBBD300C9E47182CF761982CF1F5E430 DUP3 PUSH1 0x40 MLOAD PUSH2 0x7B2 SWAP2 SWAP1 PUSH2 0xE8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x817 SWAP2 SWAP1 PUSH2 0x127D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x832 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x856 SWAP2 SWAP1 PUSH2 0x12AA JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 POP PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x910 SWAP2 SWAP1 PUSH2 0x14D1 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x926 SWAP2 SWAP1 PUSH2 0x14D1 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x93C SWAP2 SWAP1 PUSH2 0x14D1 JUMP JUMPDEST POP POP POP PUSH2 0x991 CALLER PUSH8 0x8AC7230489E80000 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA1F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x46B8550AC8F5F68F14D6A3540963578C9733E4FF2A4E7CA11CCCDEEB0B521D67 TIMESTAMP PUSH8 0x8AC7230489E80000 PUSH1 0x40 MLOAD PUSH2 0x9E1 SWAP3 SWAP2 SWAP1 PUSH2 0x15A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH8 0x8AC7230489E80000 DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xA99 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xA52 SWAP3 SWAP2 SWAP1 PUSH2 0x15C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xA9E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0xABD JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0xAD6 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0xAF1 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xB33 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2A SWAP2 SWAP1 PUSH2 0x127D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB73 DUP3 PUSH2 0xB4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB83 DUP2 PUSH2 0xB69 JUMP JUMPDEST DUP2 EQ PUSH2 0xB8D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB9E DUP2 PUSH2 0xB7A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBB9 JUMPI PUSH2 0xBB8 PUSH2 0xB42 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBC6 DUP5 DUP3 DUP6 ADD PUSH2 0xB90 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC0A DUP2 PUSH2 0xBF8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC52 DUP3 PUSH2 0xC10 JUMP JUMPDEST PUSH2 0xC5C DUP2 DUP6 PUSH2 0xC1A JUMP JUMPDEST SWAP4 POP PUSH2 0xC6C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xC2A JUMP JUMPDEST PUSH2 0xC75 DUP2 PUSH2 0xC38 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP4 ADD PUSH0 DUP4 ADD MLOAD PUSH2 0xC95 PUSH0 DUP7 ADD DUP3 PUSH2 0xC01 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0xCA8 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0xC01 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0xCC0 DUP3 DUP3 PUSH2 0xC48 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0xCDA DUP3 DUP3 PUSH2 0xC48 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x80 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x80 DUP7 ADD MSTORE PUSH2 0xCF4 DUP3 DUP3 PUSH2 0xC48 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD0C DUP4 DUP4 PUSH2 0xC80 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD2A DUP3 PUSH2 0xBCF JUMP JUMPDEST PUSH2 0xD34 DUP2 DUP6 PUSH2 0xBD9 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0xD46 DUP6 PUSH2 0xBE9 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xD81 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0xD62 DUP6 DUP3 PUSH2 0xD01 JUMP JUMPDEST SWAP5 POP PUSH2 0xD6D DUP4 PUSH2 0xD14 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xD49 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDAB DUP2 DUP5 PUSH2 0xD20 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDC7 DUP2 PUSH2 0xDB3 JUMP JUMPDEST DUP2 EQ PUSH2 0xDD1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDE2 DUP2 PUSH2 0xDBE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDFE JUMPI PUSH2 0xDFD PUSH2 0xB42 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE0B DUP6 DUP3 DUP7 ADD PUSH2 0xB90 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE1C DUP6 DUP3 DUP7 ADD PUSH2 0xDD4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xE2F DUP2 PUSH2 0xBF8 JUMP JUMPDEST DUP2 EQ PUSH2 0xE39 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE4A DUP2 PUSH2 0xE26 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE65 JUMPI PUSH2 0xE64 PUSH2 0xB42 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE72 DUP5 DUP3 DUP6 ADD PUSH2 0xE3C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE84 DUP2 PUSH2 0xBF8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE9D PUSH0 DUP4 ADD DUP5 PUSH2 0xE7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0xEE1 DUP3 PUSH2 0xC38 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xF00 JUMPI PUSH2 0xEFF PUSH2 0xEAB JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF12 PUSH2 0xB39 JUMP JUMPDEST SWAP1 POP PUSH2 0xF1E DUP3 DUP3 PUSH2 0xED8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xF3D JUMPI PUSH2 0xF3C PUSH2 0xEAB JUMP JUMPDEST JUMPDEST PUSH2 0xF46 DUP3 PUSH2 0xC38 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF73 PUSH2 0xF6E DUP5 PUSH2 0xF23 JUMP JUMPDEST PUSH2 0xF09 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xF8F JUMPI PUSH2 0xF8E PUSH2 0xEA7 JUMP JUMPDEST JUMPDEST PUSH2 0xF9A DUP5 DUP3 DUP6 PUSH2 0xF53 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xFB6 JUMPI PUSH2 0xFB5 PUSH2 0xEA3 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xFC6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xF61 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xFE7 JUMPI PUSH2 0xFE6 PUSH2 0xB42 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFF4 DUP8 DUP3 DUP9 ADD PUSH2 0xE3C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1015 JUMPI PUSH2 0x1014 PUSH2 0xB46 JUMP JUMPDEST JUMPDEST PUSH2 0x1021 DUP8 DUP3 DUP9 ADD PUSH2 0xFA2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1042 JUMPI PUSH2 0x1041 PUSH2 0xB46 JUMP JUMPDEST JUMPDEST PUSH2 0x104E DUP8 DUP3 DUP9 ADD PUSH2 0xFA2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x106F JUMPI PUSH2 0x106E PUSH2 0xB46 JUMP JUMPDEST JUMPDEST PUSH2 0x107B DUP8 DUP3 DUP9 ADD PUSH2 0xFA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10AA PUSH2 0x10A5 PUSH2 0x10A0 DUP5 PUSH2 0xB4A JUMP JUMPDEST PUSH2 0x1087 JUMP JUMPDEST PUSH2 0xB4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10BB DUP3 PUSH2 0x1090 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10CC DUP3 PUSH2 0x10B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10DC DUP2 PUSH2 0x10C2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10F5 PUSH0 DUP4 ADD DUP5 PUSH2 0x10D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373206E6F7420617574686F72697A65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x113F PUSH1 0x15 DUP4 PUSH2 0x10FB JUMP JUMPDEST SWAP2 POP PUSH2 0x114A DUP3 PUSH2 0x110B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x116C DUP2 PUSH2 0x1133 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x11B7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x11CA JUMPI PUSH2 0x11C9 PUSH2 0x1173 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11D9 DUP2 PUSH2 0xDB3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x11F2 PUSH0 DUP4 ADD DUP6 PUSH2 0x11D0 JUMP JUMPDEST PUSH2 0x11FF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE7B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x123A PUSH1 0x20 DUP4 PUSH2 0x10FB JUMP JUMPDEST SWAP2 POP PUSH2 0x1245 DUP3 PUSH2 0x1206 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1267 DUP2 PUSH2 0x122E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1277 DUP2 PUSH2 0xB69 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1290 PUSH0 DUP4 ADD DUP5 PUSH2 0x126E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x12A4 DUP2 PUSH2 0xE26 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12BF JUMPI PUSH2 0x12BE PUSH2 0xB42 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12CC DUP5 DUP3 DUP6 ADD PUSH2 0x1296 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420636F6E74726163742062616C616E6365000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1309 PUSH1 0x1D DUP4 PUSH2 0x10FB JUMP JUMPDEST SWAP2 POP PUSH2 0x1314 DUP3 PUSH2 0x12D5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1336 DUP2 PUSH2 0x12FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1399 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x135E JUMP JUMPDEST PUSH2 0x13A3 DUP7 DUP4 PUSH2 0x135E JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13D5 PUSH2 0x13D0 PUSH2 0x13CB DUP5 PUSH2 0xBF8 JUMP JUMPDEST PUSH2 0x1087 JUMP JUMPDEST PUSH2 0xBF8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13EE DUP4 PUSH2 0x13BB JUMP JUMPDEST PUSH2 0x1402 PUSH2 0x13FA DUP3 PUSH2 0x13DC JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x136A JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x1416 PUSH2 0x140A JUMP JUMPDEST PUSH2 0x1421 DUP2 DUP5 DUP5 PUSH2 0x13E5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1444 JUMPI PUSH2 0x1439 PUSH0 DUP3 PUSH2 0x140E JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1427 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1489 JUMPI PUSH2 0x145A DUP2 PUSH2 0x133D JUMP JUMPDEST PUSH2 0x1463 DUP5 PUSH2 0x134F JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1472 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1486 PUSH2 0x147E DUP6 PUSH2 0x134F JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1426 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14A9 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x148E JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14C1 DUP4 DUP4 PUSH2 0x149A JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14DA DUP3 PUSH2 0xC10 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14F3 JUMPI PUSH2 0x14F2 PUSH2 0xEAB JUMP JUMPDEST JUMPDEST PUSH2 0x14FD DUP3 SLOAD PUSH2 0x11A0 JUMP JUMPDEST PUSH2 0x1508 DUP3 DUP3 DUP6 PUSH2 0x1448 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1539 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1527 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1531 DUP6 DUP3 PUSH2 0x14B6 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1598 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1547 DUP7 PUSH2 0x133D JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x156E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1549 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x158B JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x1587 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x149A JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x15B3 PUSH0 DUP4 ADD DUP6 PUSH2 0xE7B JUMP JUMPDEST PUSH2 0x15C0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE7B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x15DA PUSH0 DUP4 ADD DUP6 PUSH2 0x126E JUMP JUMPDEST PUSH2 0x15E7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE7B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB 0xCF DUP2 0xE2 DUP9 DUP1 LOG3 0xC9 0xE9 BASEFEE CALLDATALOAD DUP2 0xAA GASPRICE STOP SWAP3 INVALID SWAP9 PUSH7 0xDF8E05B13B59C OR DUP11 0xB6 SMOD BLOBBASEFEE SMOD PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "187:3473:6:-:0;;;1405:158;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1482:1;1458:26;;:12;:26;;;1450:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;1542:12;1521:11;;:34;;;;;;;;;;;;;;;;;;1405:158;187:3473;;88:117:7;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:169::-;1286:11;1320:6;1315:3;1308:19;1360:4;1355:3;1351:14;1336:29;;1202:169;;;;:::o;1377:171::-;1517:23;1513:1;1505:6;1501:14;1494:47;1377:171;:::o;1554:366::-;1696:3;1717:67;1781:2;1776:3;1717:67;:::i;:::-;1710:74;;1793:93;1882:3;1793:93;:::i;:::-;1911:2;1906:3;1902:12;1895:19;;1554:366;;;:::o;1926:419::-;2092:4;2130:2;2119:9;2115:18;2107:26;;2179:9;2173:4;2169:20;2165:1;2154:9;2150:17;2143:47;2207:131;2333:4;2207:131;:::i;:::-;2199:139;;1926:419;;;:::o;187:3473:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@TOKEN_REWARD_607": {
									"entryPoint": 2544,
									"id": 607,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_534": {
									"entryPoint": 2718,
									"id": 534,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@claimTokens_826": {
									"entryPoint": 1543,
									"id": 826,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@contractTokenBalance_840": {
									"entryPoint": 1981,
									"id": 840,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@logHealthData_724": {
									"entryPoint": 2139,
									"id": 724,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@rewardToken_599": {
									"entryPoint": 2556,
									"id": 599,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransfer_212": {
									"entryPoint": 2591,
									"id": 212,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@updateAccess_757": {
									"entryPoint": 1203,
									"id": 757,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@viewHealthData_786": {
									"entryPoint": 349,
									"id": 786,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 3937,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 3540,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 4002,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 4758,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2980,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 3560,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3664,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4778,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr": {
									"entryPoint": 4047,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encodeUpdatedPos_t_struct$_HealthData_$618_memory_ptr_to_t_struct$_HealthData_$618_memory_ptr": {
									"entryPoint": 3329,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_struct$_HealthData_$618_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_HealthData_$618_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 3360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4560,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$167_to_t_address_fromStack": {
									"entryPoint": 4307,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr": {
									"entryPoint": 3144,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4654,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_35524723070ac5375c7260be238565eacc4e8a59252edddbe0aa4f3cd94db18b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4403,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4861,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_HealthData_$618_memory_ptr_to_t_struct$_HealthData_$618_memory_ptr": {
									"entryPoint": 3200,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 3073,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3707,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5575,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_HealthData_$618_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_HealthData_$618_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 3475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed": {
									"entryPoint": 4575,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$167__to_t_address__fromStack_reversed": {
									"entryPoint": 4322,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4688,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_35524723070ac5375c7260be238565eacc4e8a59252edddbe0aa4f3cd94db18b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4437,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4895,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5536,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 3849,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 2873,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 3875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_struct$_HealthData_$618_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 3049,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 4925,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_struct$_HealthData_$618_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 3023,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3088,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_struct$_HealthData_$618_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 3348,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_struct$_HealthData_$618_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 3033,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr": {
									"entryPoint": 3098,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4347,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 5192,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2921,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3507,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2890,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3064,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 5158,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_contract$_IERC20_$167_to_t_address": {
									"entryPoint": 4290,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 4273,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 4240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 5051,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 5329,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 3923,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3114,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 4943,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 4512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 5302,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 3800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 4231,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 5274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 4467,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3755,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 5084,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 3747,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 3751,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 2886,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2882,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3128,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 4958,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 5262,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 5134,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887": {
									"entryPoint": 4614,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_35524723070ac5375c7260be238565eacc4e8a59252edddbe0aa4f3cd94db18b": {
									"entryPoint": 4363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749": {
									"entryPoint": 4821,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 4970,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 5093,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2938,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3518,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3622,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 5130,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:22305:7",
										"nodeType": "YulBlock",
										"src": "0:22305:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:81:7",
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nativeSrc": "389:65:7",
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:7",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nativeSrc": "400:54:7",
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nativeSrc": "511:51:7",
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nativeSrc": "521:35:7",
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nativeSrc": "532:24:7",
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:7",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:7",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nativeSrc": "611:79:7",
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:7",
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:7",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:7",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nativeSrc": "670:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nativeSrc": "670:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nativeSrc": "641:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nativeSrc": "631:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nativeSrc": "624:43:7",
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nativeSrc": "621:63:7",
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:7",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nativeSrc": "748:87:7",
													"nodeType": "YulBlock",
													"src": "748:87:7",
													"statements": [
														{
															"nativeSrc": "758:29:7",
															"nodeType": "YulAssignment",
															"src": "758:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:7"
																},
																"nativeSrc": "767:20:7",
																"nodeType": "YulFunctionCall",
																"src": "767:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:7"
																},
																"nativeSrc": "796:33:7",
																"nodeType": "YulFunctionCall",
																"src": "796:33:7"
															},
															"nativeSrc": "796:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:7",
														"nodeType": "YulTypedName",
														"src": "726:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:7",
														"nodeType": "YulTypedName",
														"src": "734:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:7",
														"nodeType": "YulTypedName",
														"src": "742:5:7",
														"type": ""
													}
												],
												"src": "696:139:7"
											},
											{
												"body": {
													"nativeSrc": "907:263:7",
													"nodeType": "YulBlock",
													"src": "907:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:7",
																"nodeType": "YulBlock",
																"src": "953:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:7"
																			},
																			"nativeSrc": "955:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:7"
																		},
																		"nativeSrc": "955:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:7"
																		},
																		"nativeSrc": "924:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:7",
																		"nodeType": "YulLiteral",
																		"src": "949:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:7"
																},
																"nativeSrc": "920:32:7",
																"nodeType": "YulFunctionCall",
																"src": "920:32:7"
															},
															"nativeSrc": "917:119:7",
															"nodeType": "YulIf",
															"src": "917:119:7"
														},
														{
															"nativeSrc": "1046:117:7",
															"nodeType": "YulBlock",
															"src": "1046:117:7",
															"statements": [
																{
																	"nativeSrc": "1061:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:7",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:7"
																				},
																				"nativeSrc": "1121:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:7"
																		},
																		"nativeSrc": "1100:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:7",
														"nodeType": "YulTypedName",
														"src": "877:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:7",
														"nodeType": "YulTypedName",
														"src": "888:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:7",
														"nodeType": "YulTypedName",
														"src": "900:6:7",
														"type": ""
													}
												],
												"src": "841:329:7"
											},
											{
												"body": {
													"nativeSrc": "1277:40:7",
													"nodeType": "YulBlock",
													"src": "1277:40:7",
													"statements": [
														{
															"nativeSrc": "1288:22:7",
															"nodeType": "YulAssignment",
															"src": "1288:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1304:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1304:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1298:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1298:5:7"
																},
																"nativeSrc": "1298:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1298:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1288:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1288:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_struct$_HealthData_$618_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "1176:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1260:5:7",
														"nodeType": "YulTypedName",
														"src": "1260:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1270:6:7",
														"nodeType": "YulTypedName",
														"src": "1270:6:7",
														"type": ""
													}
												],
												"src": "1176:141:7"
											},
											{
												"body": {
													"nativeSrc": "1461:73:7",
													"nodeType": "YulBlock",
													"src": "1461:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1478:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1478:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1483:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1483:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1471:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1471:6:7"
																},
																"nativeSrc": "1471:19:7",
																"nodeType": "YulFunctionCall",
																"src": "1471:19:7"
															},
															"nativeSrc": "1471:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "1471:19:7"
														},
														{
															"nativeSrc": "1499:29:7",
															"nodeType": "YulAssignment",
															"src": "1499:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1518:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1518:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1523:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1523:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1514:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1514:3:7"
																},
																"nativeSrc": "1514:14:7",
																"nodeType": "YulFunctionCall",
																"src": "1514:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1499:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "1499:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_struct$_HealthData_$618_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "1323:211:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1433:3:7",
														"nodeType": "YulTypedName",
														"src": "1433:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1438:6:7",
														"nodeType": "YulTypedName",
														"src": "1438:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1449:11:7",
														"nodeType": "YulTypedName",
														"src": "1449:11:7",
														"type": ""
													}
												],
												"src": "1323:211:7"
											},
											{
												"body": {
													"nativeSrc": "1639:60:7",
													"nodeType": "YulBlock",
													"src": "1639:60:7",
													"statements": [
														{
															"nativeSrc": "1649:11:7",
															"nodeType": "YulAssignment",
															"src": "1649:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "1657:3:7",
																"nodeType": "YulIdentifier",
																"src": "1657:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1649:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1649:4:7"
																}
															]
														},
														{
															"nativeSrc": "1670:22:7",
															"nodeType": "YulAssignment",
															"src": "1670:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "1682:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1682:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1687:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1687:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1678:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1678:3:7"
																},
																"nativeSrc": "1678:14:7",
																"nodeType": "YulFunctionCall",
																"src": "1678:14:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1670:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1670:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_struct$_HealthData_$618_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "1540:159:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1626:3:7",
														"nodeType": "YulTypedName",
														"src": "1626:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1634:4:7",
														"nodeType": "YulTypedName",
														"src": "1634:4:7",
														"type": ""
													}
												],
												"src": "1540:159:7"
											},
											{
												"body": {
													"nativeSrc": "1750:32:7",
													"nodeType": "YulBlock",
													"src": "1750:32:7",
													"statements": [
														{
															"nativeSrc": "1760:16:7",
															"nodeType": "YulAssignment",
															"src": "1760:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "1771:5:7",
																"nodeType": "YulIdentifier",
																"src": "1771:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1760:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1760:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1705:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1732:5:7",
														"nodeType": "YulTypedName",
														"src": "1732:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1742:7:7",
														"nodeType": "YulTypedName",
														"src": "1742:7:7",
														"type": ""
													}
												],
												"src": "1705:77:7"
											},
											{
												"body": {
													"nativeSrc": "1843:53:7",
													"nodeType": "YulBlock",
													"src": "1843:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1860:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1860:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1883:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1883:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1865:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "1865:17:7"
																		},
																		"nativeSrc": "1865:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1865:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1853:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:7"
																},
																"nativeSrc": "1853:37:7",
																"nodeType": "YulFunctionCall",
																"src": "1853:37:7"
															},
															"nativeSrc": "1853:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "1853:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "1788:108:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1831:5:7",
														"nodeType": "YulTypedName",
														"src": "1831:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1838:3:7",
														"nodeType": "YulTypedName",
														"src": "1838:3:7",
														"type": ""
													}
												],
												"src": "1788:108:7"
											},
											{
												"body": {
													"nativeSrc": "1961:40:7",
													"nodeType": "YulBlock",
													"src": "1961:40:7",
													"statements": [
														{
															"nativeSrc": "1972:22:7",
															"nodeType": "YulAssignment",
															"src": "1972:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1988:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1988:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1982:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1982:5:7"
																},
																"nativeSrc": "1982:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1982:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1972:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1972:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1902:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1944:5:7",
														"nodeType": "YulTypedName",
														"src": "1944:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1954:6:7",
														"nodeType": "YulTypedName",
														"src": "1954:6:7",
														"type": ""
													}
												],
												"src": "1902:99:7"
											},
											{
												"body": {
													"nativeSrc": "2093:73:7",
													"nodeType": "YulBlock",
													"src": "2093:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2110:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2110:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2115:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2115:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2103:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2103:6:7"
																},
																"nativeSrc": "2103:19:7",
																"nodeType": "YulFunctionCall",
																"src": "2103:19:7"
															},
															"nativeSrc": "2103:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "2103:19:7"
														},
														{
															"nativeSrc": "2131:29:7",
															"nodeType": "YulAssignment",
															"src": "2131:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2150:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2150:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2155:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2155:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2146:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2146:3:7"
																},
																"nativeSrc": "2146:14:7",
																"nodeType": "YulFunctionCall",
																"src": "2146:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2131:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "2131:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr",
												"nativeSrc": "2007:159:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2065:3:7",
														"nodeType": "YulTypedName",
														"src": "2065:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2070:6:7",
														"nodeType": "YulTypedName",
														"src": "2070:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2081:11:7",
														"nodeType": "YulTypedName",
														"src": "2081:11:7",
														"type": ""
													}
												],
												"src": "2007:159:7"
											},
											{
												"body": {
													"nativeSrc": "2234:77:7",
													"nodeType": "YulBlock",
													"src": "2234:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "2251:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2251:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "2256:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2256:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2261:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2261:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "2245:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2245:5:7"
																},
																"nativeSrc": "2245:23:7",
																"nodeType": "YulFunctionCall",
																"src": "2245:23:7"
															},
															"nativeSrc": "2245:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "2245:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2288:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2288:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2293:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2293:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2284:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2284:3:7"
																		},
																		"nativeSrc": "2284:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2284:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2302:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2302:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2277:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2277:6:7"
																},
																"nativeSrc": "2277:27:7",
																"nodeType": "YulFunctionCall",
																"src": "2277:27:7"
															},
															"nativeSrc": "2277:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "2277:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "2172:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2216:3:7",
														"nodeType": "YulTypedName",
														"src": "2216:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "2221:3:7",
														"nodeType": "YulTypedName",
														"src": "2221:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2226:6:7",
														"nodeType": "YulTypedName",
														"src": "2226:6:7",
														"type": ""
													}
												],
												"src": "2172:139:7"
											},
											{
												"body": {
													"nativeSrc": "2365:54:7",
													"nodeType": "YulBlock",
													"src": "2365:54:7",
													"statements": [
														{
															"nativeSrc": "2375:38:7",
															"nodeType": "YulAssignment",
															"src": "2375:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2393:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2393:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2400:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2400:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2389:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2389:3:7"
																		},
																		"nativeSrc": "2389:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2389:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2409:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2409:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2405:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2405:3:7"
																		},
																		"nativeSrc": "2405:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2405:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2385:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2385:3:7"
																},
																"nativeSrc": "2385:28:7",
																"nodeType": "YulFunctionCall",
																"src": "2385:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2375:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2375:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2317:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2348:5:7",
														"nodeType": "YulTypedName",
														"src": "2348:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2358:6:7",
														"nodeType": "YulTypedName",
														"src": "2358:6:7",
														"type": ""
													}
												],
												"src": "2317:102:7"
											},
											{
												"body": {
													"nativeSrc": "2507:275:7",
													"nodeType": "YulBlock",
													"src": "2507:275:7",
													"statements": [
														{
															"nativeSrc": "2517:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2517:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2564:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2564:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2531:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "2531:32:7"
																},
																"nativeSrc": "2531:39:7",
																"nodeType": "YulFunctionCall",
																"src": "2531:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2521:6:7",
																	"nodeType": "YulTypedName",
																	"src": "2521:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2579:68:7",
															"nodeType": "YulAssignment",
															"src": "2579:68:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2635:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2635:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2640:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2640:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr",
																	"nativeSrc": "2586:48:7",
																	"nodeType": "YulIdentifier",
																	"src": "2586:48:7"
																},
																"nativeSrc": "2586:61:7",
																"nodeType": "YulFunctionCall",
																"src": "2586:61:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2579:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2579:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2695:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2695:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2702:4:7",
																				"nodeType": "YulLiteral",
																				"src": "2702:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2691:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2691:3:7"
																		},
																		"nativeSrc": "2691:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2691:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2709:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2709:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2714:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2714:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2656:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "2656:34:7"
																},
																"nativeSrc": "2656:65:7",
																"nodeType": "YulFunctionCall",
																"src": "2656:65:7"
															},
															"nativeSrc": "2656:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "2656:65:7"
														},
														{
															"nativeSrc": "2730:46:7",
															"nodeType": "YulAssignment",
															"src": "2730:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2741:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2741:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2768:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2768:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2746:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "2746:21:7"
																		},
																		"nativeSrc": "2746:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2746:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2737:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2737:3:7"
																},
																"nativeSrc": "2737:39:7",
																"nodeType": "YulFunctionCall",
																"src": "2737:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2730:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2730:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
												"nativeSrc": "2425:357:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2488:5:7",
														"nodeType": "YulTypedName",
														"src": "2488:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2495:3:7",
														"nodeType": "YulTypedName",
														"src": "2495:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2503:3:7",
														"nodeType": "YulTypedName",
														"src": "2503:3:7",
														"type": ""
													}
												],
												"src": "2425:357:7"
											},
											{
												"body": {
													"nativeSrc": "2996:1170:7",
													"nodeType": "YulBlock",
													"src": "2996:1170:7",
													"statements": [
														{
															"nativeSrc": "3006:26:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3006:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3022:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3022:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3027:4:7",
																		"nodeType": "YulLiteral",
																		"src": "3027:4:7",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3018:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3018:3:7"
																},
																"nativeSrc": "3018:14:7",
																"nodeType": "YulFunctionCall",
																"src": "3018:14:7"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "3010:4:7",
																	"nodeType": "YulTypedName",
																	"src": "3010:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3042:169:7",
															"nodeType": "YulBlock",
															"src": "3042:169:7",
															"statements": [
																{
																	"nativeSrc": "3082:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3082:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3112:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3112:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3119:4:7",
																						"nodeType": "YulLiteral",
																						"src": "3119:4:7",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3108:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3108:3:7"
																				},
																				"nativeSrc": "3108:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3108:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3102:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "3102:5:7"
																		},
																		"nativeSrc": "3102:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3102:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "3086:12:7",
																			"nodeType": "YulTypedName",
																			"src": "3086:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "3172:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "3172:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "3190:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "3190:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3195:4:7",
																						"nodeType": "YulLiteral",
																						"src": "3195:4:7",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3186:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3186:3:7"
																				},
																				"nativeSrc": "3186:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3186:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "3138:33:7",
																			"nodeType": "YulIdentifier",
																			"src": "3138:33:7"
																		},
																		"nativeSrc": "3138:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3138:63:7"
																	},
																	"nativeSrc": "3138:63:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "3138:63:7"
																}
															]
														},
														{
															"nativeSrc": "3221:172:7",
															"nodeType": "YulBlock",
															"src": "3221:172:7",
															"statements": [
																{
																	"nativeSrc": "3264:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3264:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3294:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3294:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3301:4:7",
																						"nodeType": "YulLiteral",
																						"src": "3301:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3290:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3290:3:7"
																				},
																				"nativeSrc": "3290:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3290:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3284:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "3284:5:7"
																		},
																		"nativeSrc": "3284:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3284:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "3268:12:7",
																			"nodeType": "YulTypedName",
																			"src": "3268:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "3354:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "3354:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "3372:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "3372:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3377:4:7",
																						"nodeType": "YulLiteral",
																						"src": "3377:4:7",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3368:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3368:3:7"
																				},
																				"nativeSrc": "3368:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3368:14:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "3320:33:7",
																			"nodeType": "YulIdentifier",
																			"src": "3320:33:7"
																		},
																		"nativeSrc": "3320:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3320:63:7"
																	},
																	"nativeSrc": "3320:63:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "3320:63:7"
																}
															]
														},
														{
															"nativeSrc": "3403:241:7",
															"nodeType": "YulBlock",
															"src": "3403:241:7",
															"statements": [
																{
																	"nativeSrc": "3444:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3444:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3474:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3474:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3481:4:7",
																						"nodeType": "YulLiteral",
																						"src": "3481:4:7",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3470:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3470:3:7"
																				},
																				"nativeSrc": "3470:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3470:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3464:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "3464:5:7"
																		},
																		"nativeSrc": "3464:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3464:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "3448:12:7",
																			"nodeType": "YulTypedName",
																			"src": "3448:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "3512:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "3512:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3517:4:7",
																						"nodeType": "YulLiteral",
																						"src": "3517:4:7",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3508:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3508:3:7"
																				},
																				"nativeSrc": "3508:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3508:14:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nativeSrc": "3528:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "3528:4:7"
																					},
																					{
																						"name": "pos",
																						"nativeSrc": "3534:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "3534:3:7"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3524:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3524:3:7"
																				},
																				"nativeSrc": "3524:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3524:14:7"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "3501:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3501:6:7"
																		},
																		"nativeSrc": "3501:38:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3501:38:7"
																	},
																	"nativeSrc": "3501:38:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "3501:38:7"
																},
																{
																	"nativeSrc": "3552:81:7",
																	"nodeType": "YulAssignment",
																	"src": "3552:81:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "3614:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "3614:12:7"
																			},
																			{
																				"name": "tail",
																				"nativeSrc": "3628:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "3628:4:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
																			"nativeSrc": "3560:53:7",
																			"nodeType": "YulIdentifier",
																			"src": "3560:53:7"
																		},
																		"nativeSrc": "3560:73:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3560:73:7"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nativeSrc": "3552:4:7",
																			"nodeType": "YulIdentifier",
																			"src": "3552:4:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3654:236:7",
															"nodeType": "YulBlock",
															"src": "3654:236:7",
															"statements": [
																{
																	"nativeSrc": "3690:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3690:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3720:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3720:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3727:4:7",
																						"nodeType": "YulLiteral",
																						"src": "3727:4:7",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3716:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3716:3:7"
																				},
																				"nativeSrc": "3716:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3716:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3710:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "3710:5:7"
																		},
																		"nativeSrc": "3710:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3710:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "3694:12:7",
																			"nodeType": "YulTypedName",
																			"src": "3694:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "3758:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "3758:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3763:4:7",
																						"nodeType": "YulLiteral",
																						"src": "3763:4:7",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3754:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3754:3:7"
																				},
																				"nativeSrc": "3754:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3754:14:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nativeSrc": "3774:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "3774:4:7"
																					},
																					{
																						"name": "pos",
																						"nativeSrc": "3780:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "3780:3:7"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3770:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3770:3:7"
																				},
																				"nativeSrc": "3770:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3770:14:7"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "3747:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3747:6:7"
																		},
																		"nativeSrc": "3747:38:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3747:38:7"
																	},
																	"nativeSrc": "3747:38:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "3747:38:7"
																},
																{
																	"nativeSrc": "3798:81:7",
																	"nodeType": "YulAssignment",
																	"src": "3798:81:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "3860:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "3860:12:7"
																			},
																			{
																				"name": "tail",
																				"nativeSrc": "3874:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "3874:4:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
																			"nativeSrc": "3806:53:7",
																			"nodeType": "YulIdentifier",
																			"src": "3806:53:7"
																		},
																		"nativeSrc": "3806:73:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3806:73:7"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nativeSrc": "3798:4:7",
																			"nodeType": "YulIdentifier",
																			"src": "3798:4:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3900:239:7",
															"nodeType": "YulBlock",
															"src": "3900:239:7",
															"statements": [
																{
																	"nativeSrc": "3939:43:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3939:43:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3969:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3969:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3976:4:7",
																						"nodeType": "YulLiteral",
																						"src": "3976:4:7",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3965:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3965:3:7"
																				},
																				"nativeSrc": "3965:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3965:16:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3959:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "3959:5:7"
																		},
																		"nativeSrc": "3959:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3959:23:7"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "3943:12:7",
																			"nodeType": "YulTypedName",
																			"src": "3943:12:7",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4007:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4007:3:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4012:4:7",
																						"nodeType": "YulLiteral",
																						"src": "4012:4:7",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4003:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4003:3:7"
																				},
																				"nativeSrc": "4003:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4003:14:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nativeSrc": "4023:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "4023:4:7"
																					},
																					{
																						"name": "pos",
																						"nativeSrc": "4029:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4029:3:7"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4019:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4019:3:7"
																				},
																				"nativeSrc": "4019:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4019:14:7"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "3996:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3996:6:7"
																		},
																		"nativeSrc": "3996:38:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3996:38:7"
																	},
																	"nativeSrc": "3996:38:7",
																	"nodeType": "YulExpressionStatement",
																	"src": "3996:38:7"
																},
																{
																	"nativeSrc": "4047:81:7",
																	"nodeType": "YulAssignment",
																	"src": "4047:81:7",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4109:12:7",
																				"nodeType": "YulIdentifier",
																				"src": "4109:12:7"
																			},
																			{
																				"name": "tail",
																				"nativeSrc": "4123:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "4123:4:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
																			"nativeSrc": "4055:53:7",
																			"nodeType": "YulIdentifier",
																			"src": "4055:53:7"
																		},
																		"nativeSrc": "4055:73:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4055:73:7"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nativeSrc": "4047:4:7",
																			"nodeType": "YulIdentifier",
																			"src": "4047:4:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4149:11:7",
															"nodeType": "YulAssignment",
															"src": "4149:11:7",
															"value": {
																"name": "tail",
																"nativeSrc": "4156:4:7",
																"nodeType": "YulIdentifier",
																"src": "4156:4:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4149:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4149:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_HealthData_$618_memory_ptr_to_t_struct$_HealthData_$618_memory_ptr",
												"nativeSrc": "2878:1288:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2975:5:7",
														"nodeType": "YulTypedName",
														"src": "2975:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2982:3:7",
														"nodeType": "YulTypedName",
														"src": "2982:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2991:3:7",
														"nodeType": "YulTypedName",
														"src": "2991:3:7",
														"type": ""
													}
												],
												"src": "2878:1288:7"
											},
											{
												"body": {
													"nativeSrc": "4306:130:7",
													"nodeType": "YulBlock",
													"src": "4306:130:7",
													"statements": [
														{
															"nativeSrc": "4316:114:7",
															"nodeType": "YulAssignment",
															"src": "4316:114:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4418:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4418:6:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "4426:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4426:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_HealthData_$618_memory_ptr_to_t_struct$_HealthData_$618_memory_ptr",
																	"nativeSrc": "4330:87:7",
																	"nodeType": "YulIdentifier",
																	"src": "4330:87:7"
																},
																"nativeSrc": "4330:100:7",
																"nodeType": "YulFunctionCall",
																"src": "4330:100:7"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "4316:10:7",
																	"nodeType": "YulIdentifier",
																	"src": "4316:10:7"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_struct$_HealthData_$618_memory_ptr_to_t_struct$_HealthData_$618_memory_ptr",
												"nativeSrc": "4172:264:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "4279:6:7",
														"nodeType": "YulTypedName",
														"src": "4279:6:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4287:3:7",
														"nodeType": "YulTypedName",
														"src": "4287:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "4295:10:7",
														"nodeType": "YulTypedName",
														"src": "4295:10:7",
														"type": ""
													}
												],
												"src": "4172:264:7"
											},
											{
												"body": {
													"nativeSrc": "4544:38:7",
													"nodeType": "YulBlock",
													"src": "4544:38:7",
													"statements": [
														{
															"nativeSrc": "4554:22:7",
															"nodeType": "YulAssignment",
															"src": "4554:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "4566:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4566:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4571:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4571:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4562:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4562:3:7"
																},
																"nativeSrc": "4562:14:7",
																"nodeType": "YulFunctionCall",
																"src": "4562:14:7"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "4554:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4554:4:7"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_struct$_HealthData_$618_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "4442:140:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4531:3:7",
														"nodeType": "YulTypedName",
														"src": "4531:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "4539:4:7",
														"nodeType": "YulTypedName",
														"src": "4539:4:7",
														"type": ""
													}
												],
												"src": "4442:140:7"
											},
											{
												"body": {
													"nativeSrc": "4860:949:7",
													"nodeType": "YulBlock",
													"src": "4860:949:7",
													"statements": [
														{
															"nativeSrc": "4870:95:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4870:95:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4959:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4959:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_struct$_HealthData_$618_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "4884:74:7",
																	"nodeType": "YulIdentifier",
																	"src": "4884:74:7"
																},
																"nativeSrc": "4884:81:7",
																"nodeType": "YulFunctionCall",
																"src": "4884:81:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4874:6:7",
																	"nodeType": "YulTypedName",
																	"src": "4874:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4974:120:7",
															"nodeType": "YulAssignment",
															"src": "4974:120:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5082:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5082:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5087:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5087:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_struct$_HealthData_$618_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "4981:100:7",
																	"nodeType": "YulIdentifier",
																	"src": "4981:100:7"
																},
																"nativeSrc": "4981:113:7",
																"nodeType": "YulFunctionCall",
																"src": "4981:113:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4974:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4974:3:7"
																}
															]
														},
														{
															"nativeSrc": "5103:20:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5103:20:7",
															"value": {
																"name": "pos",
																"nativeSrc": "5120:3:7",
																"nodeType": "YulIdentifier",
																"src": "5120:3:7"
															},
															"variables": [
																{
																	"name": "headStart",
																	"nativeSrc": "5107:9:7",
																	"nodeType": "YulTypedName",
																	"src": "5107:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5132:39:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5132:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5148:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5148:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5157:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5157:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5165:4:7",
																				"nodeType": "YulLiteral",
																				"src": "5165:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5153:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5153:3:7"
																		},
																		"nativeSrc": "5153:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5153:17:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5144:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5144:3:7"
																},
																"nativeSrc": "5144:27:7",
																"nodeType": "YulFunctionCall",
																"src": "5144:27:7"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "5136:4:7",
																	"nodeType": "YulTypedName",
																	"src": "5136:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5180:98:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5180:98:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5272:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5272:5:7"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_struct$_HealthData_$618_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "5195:76:7",
																	"nodeType": "YulIdentifier",
																	"src": "5195:76:7"
																},
																"nativeSrc": "5195:83:7",
																"nodeType": "YulFunctionCall",
																"src": "5195:83:7"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "5184:7:7",
																	"nodeType": "YulTypedName",
																	"src": "5184:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5287:21:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5287:21:7",
															"value": {
																"name": "baseRef",
																"nativeSrc": "5301:7:7",
																"nodeType": "YulIdentifier",
																"src": "5301:7:7"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "5291:6:7",
																	"nodeType": "YulTypedName",
																	"src": "5291:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5377:387:7",
																"nodeType": "YulBlock",
																"src": "5377:387:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "5398:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5398:3:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nativeSrc": "5407:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "5407:4:7"
																						},
																						{
																							"name": "headStart",
																							"nativeSrc": "5413:9:7",
																							"nodeType": "YulIdentifier",
																							"src": "5413:9:7"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nativeSrc": "5403:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "5403:3:7"
																					},
																					"nativeSrc": "5403:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5403:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5391:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5391:6:7"
																			},
																			"nativeSrc": "5391:33:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5391:33:7"
																		},
																		"nativeSrc": "5391:33:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5391:33:7"
																	},
																	{
																		"nativeSrc": "5437:34:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5437:34:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "5464:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "5464:6:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5458:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5458:5:7"
																			},
																			"nativeSrc": "5458:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5458:13:7"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "5441:13:7",
																				"nodeType": "YulTypedName",
																				"src": "5441:13:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "5484:126:7",
																		"nodeType": "YulAssignment",
																		"src": "5484:126:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "5590:13:7",
																					"nodeType": "YulIdentifier",
																					"src": "5590:13:7"
																				},
																				{
																					"name": "tail",
																					"nativeSrc": "5605:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "5605:4:7"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_struct$_HealthData_$618_memory_ptr_to_t_struct$_HealthData_$618_memory_ptr",
																				"nativeSrc": "5492:97:7",
																				"nodeType": "YulIdentifier",
																				"src": "5492:97:7"
																			},
																			"nativeSrc": "5492:118:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5492:118:7"
																		},
																		"variableNames": [
																			{
																				"name": "tail",
																				"nativeSrc": "5484:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5484:4:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "5623:97:7",
																		"nodeType": "YulAssignment",
																		"src": "5623:97:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "5713:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "5713:6:7"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_struct$_HealthData_$618_memory_ptr_$dyn_memory_ptr",
																				"nativeSrc": "5633:79:7",
																				"nodeType": "YulIdentifier",
																				"src": "5633:79:7"
																			},
																			"nativeSrc": "5633:87:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5633:87:7"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "5623:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5623:6:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "5733:21:7",
																		"nodeType": "YulAssignment",
																		"src": "5733:21:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "5744:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5744:3:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5749:4:7",
																					"nodeType": "YulLiteral",
																					"src": "5749:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5740:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "5740:3:7"
																			},
																			"nativeSrc": "5740:14:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5740:14:7"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "5733:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "5733:3:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "5339:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5339:1:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5342:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5342:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5336:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5336:2:7"
																},
																"nativeSrc": "5336:13:7",
																"nodeType": "YulFunctionCall",
																"src": "5336:13:7"
															},
															"nativeSrc": "5317:447:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5350:18:7",
																"nodeType": "YulBlock",
																"src": "5350:18:7",
																"statements": [
																	{
																		"nativeSrc": "5352:14:7",
																		"nodeType": "YulAssignment",
																		"src": "5352:14:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "5361:1:7",
																					"nodeType": "YulIdentifier",
																					"src": "5361:1:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5364:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5364:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5357:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "5357:3:7"
																			},
																			"nativeSrc": "5357:9:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5357:9:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "5352:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "5352:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "5321:14:7",
																"nodeType": "YulBlock",
																"src": "5321:14:7",
																"statements": [
																	{
																		"nativeSrc": "5323:10:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5323:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "5332:1:7",
																			"nodeType": "YulLiteral",
																			"src": "5332:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "5327:1:7",
																				"nodeType": "YulTypedName",
																				"src": "5327:1:7",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "5317:447:7"
														},
														{
															"nativeSrc": "5773:11:7",
															"nodeType": "YulAssignment",
															"src": "5773:11:7",
															"value": {
																"name": "tail",
																"nativeSrc": "5780:4:7",
																"nodeType": "YulIdentifier",
																"src": "5780:4:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5773:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5773:3:7"
																}
															]
														},
														{
															"nativeSrc": "5793:10:7",
															"nodeType": "YulAssignment",
															"src": "5793:10:7",
															"value": {
																"name": "pos",
																"nativeSrc": "5800:3:7",
																"nodeType": "YulIdentifier",
																"src": "5800:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5793:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5793:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_HealthData_$618_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_HealthData_$618_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "4682:1127:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4839:5:7",
														"nodeType": "YulTypedName",
														"src": "4839:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4846:3:7",
														"nodeType": "YulTypedName",
														"src": "4846:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4855:3:7",
														"nodeType": "YulTypedName",
														"src": "4855:3:7",
														"type": ""
													}
												],
												"src": "4682:1127:7"
											},
											{
												"body": {
													"nativeSrc": "6017:279:7",
													"nodeType": "YulBlock",
													"src": "6017:279:7",
													"statements": [
														{
															"nativeSrc": "6027:26:7",
															"nodeType": "YulAssignment",
															"src": "6027:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6039:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6039:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6050:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6050:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6035:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6035:3:7"
																},
																"nativeSrc": "6035:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6035:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6027:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6027:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6074:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6074:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6085:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6085:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6070:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6070:3:7"
																		},
																		"nativeSrc": "6070:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6070:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6093:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "6093:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6099:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6099:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6089:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6089:3:7"
																		},
																		"nativeSrc": "6089:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6089:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6063:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6063:6:7"
																},
																"nativeSrc": "6063:47:7",
																"nodeType": "YulFunctionCall",
																"src": "6063:47:7"
															},
															"nativeSrc": "6063:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "6063:47:7"
														},
														{
															"nativeSrc": "6119:170:7",
															"nodeType": "YulAssignment",
															"src": "6119:170:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6275:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6275:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "6284:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6284:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_struct$_HealthData_$618_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_HealthData_$618_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "6127:147:7",
																	"nodeType": "YulIdentifier",
																	"src": "6127:147:7"
																},
																"nativeSrc": "6127:162:7",
																"nodeType": "YulFunctionCall",
																"src": "6127:162:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6119:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6119:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_HealthData_$618_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_HealthData_$618_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "5815:481:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5989:9:7",
														"nodeType": "YulTypedName",
														"src": "5989:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6001:6:7",
														"nodeType": "YulTypedName",
														"src": "6001:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6012:4:7",
														"nodeType": "YulTypedName",
														"src": "6012:4:7",
														"type": ""
													}
												],
												"src": "5815:481:7"
											},
											{
												"body": {
													"nativeSrc": "6344:48:7",
													"nodeType": "YulBlock",
													"src": "6344:48:7",
													"statements": [
														{
															"nativeSrc": "6354:32:7",
															"nodeType": "YulAssignment",
															"src": "6354:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6379:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6379:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "6372:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6372:6:7"
																		},
																		"nativeSrc": "6372:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6372:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6365:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6365:6:7"
																},
																"nativeSrc": "6365:21:7",
																"nodeType": "YulFunctionCall",
																"src": "6365:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6354:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "6354:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "6302:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6326:5:7",
														"nodeType": "YulTypedName",
														"src": "6326:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6336:7:7",
														"nodeType": "YulTypedName",
														"src": "6336:7:7",
														"type": ""
													}
												],
												"src": "6302:90:7"
											},
											{
												"body": {
													"nativeSrc": "6438:76:7",
													"nodeType": "YulBlock",
													"src": "6438:76:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6492:16:7",
																"nodeType": "YulBlock",
																"src": "6492:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6501:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6501:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6504:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6504:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6494:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6494:6:7"
																			},
																			"nativeSrc": "6494:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6494:12:7"
																		},
																		"nativeSrc": "6494:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6494:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6461:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6461:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6483:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "6483:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "6468:14:7",
																					"nodeType": "YulIdentifier",
																					"src": "6468:14:7"
																				},
																				"nativeSrc": "6468:21:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6468:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6458:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "6458:2:7"
																		},
																		"nativeSrc": "6458:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6458:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6451:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6451:6:7"
																},
																"nativeSrc": "6451:40:7",
																"nodeType": "YulFunctionCall",
																"src": "6451:40:7"
															},
															"nativeSrc": "6448:60:7",
															"nodeType": "YulIf",
															"src": "6448:60:7"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "6398:116:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6431:5:7",
														"nodeType": "YulTypedName",
														"src": "6431:5:7",
														"type": ""
													}
												],
												"src": "6398:116:7"
											},
											{
												"body": {
													"nativeSrc": "6569:84:7",
													"nodeType": "YulBlock",
													"src": "6569:84:7",
													"statements": [
														{
															"nativeSrc": "6579:29:7",
															"nodeType": "YulAssignment",
															"src": "6579:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6601:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6601:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6588:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "6588:12:7"
																},
																"nativeSrc": "6588:20:7",
																"nodeType": "YulFunctionCall",
																"src": "6588:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6579:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "6579:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6641:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6641:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "6617:23:7",
																	"nodeType": "YulIdentifier",
																	"src": "6617:23:7"
																},
																"nativeSrc": "6617:30:7",
																"nodeType": "YulFunctionCall",
																"src": "6617:30:7"
															},
															"nativeSrc": "6617:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "6617:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "6520:133:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6547:6:7",
														"nodeType": "YulTypedName",
														"src": "6547:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6555:3:7",
														"nodeType": "YulTypedName",
														"src": "6555:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6563:5:7",
														"nodeType": "YulTypedName",
														"src": "6563:5:7",
														"type": ""
													}
												],
												"src": "6520:133:7"
											},
											{
												"body": {
													"nativeSrc": "6739:388:7",
													"nodeType": "YulBlock",
													"src": "6739:388:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6785:83:7",
																"nodeType": "YulBlock",
																"src": "6785:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6787:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "6787:77:7"
																			},
																			"nativeSrc": "6787:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6787:79:7"
																		},
																		"nativeSrc": "6787:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6787:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6760:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6760:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6769:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6769:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6756:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6756:3:7"
																		},
																		"nativeSrc": "6756:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6756:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6781:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6781:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6752:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6752:3:7"
																},
																"nativeSrc": "6752:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6752:32:7"
															},
															"nativeSrc": "6749:119:7",
															"nodeType": "YulIf",
															"src": "6749:119:7"
														},
														{
															"nativeSrc": "6878:117:7",
															"nodeType": "YulBlock",
															"src": "6878:117:7",
															"statements": [
																{
																	"nativeSrc": "6893:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6893:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6907:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6907:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6897:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6897:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6922:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6922:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6957:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6957:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6968:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6968:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6953:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6953:3:7"
																				},
																				"nativeSrc": "6953:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6953:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6977:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6977:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6932:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6932:20:7"
																		},
																		"nativeSrc": "6932:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6932:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6922:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6922:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7005:115:7",
															"nodeType": "YulBlock",
															"src": "7005:115:7",
															"statements": [
																{
																	"nativeSrc": "7020:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7020:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7034:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7034:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7024:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7024:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7050:60:7",
																	"nodeType": "YulAssignment",
																	"src": "7050:60:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7082:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7082:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7093:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7093:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7078:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7078:3:7"
																				},
																				"nativeSrc": "7078:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7078:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7102:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7102:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "7060:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "7060:17:7"
																		},
																		"nativeSrc": "7060:50:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7060:50:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7050:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7050:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "6659:468:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6701:9:7",
														"nodeType": "YulTypedName",
														"src": "6701:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6712:7:7",
														"nodeType": "YulTypedName",
														"src": "6712:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6724:6:7",
														"nodeType": "YulTypedName",
														"src": "6724:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6732:6:7",
														"nodeType": "YulTypedName",
														"src": "6732:6:7",
														"type": ""
													}
												],
												"src": "6659:468:7"
											},
											{
												"body": {
													"nativeSrc": "7176:79:7",
													"nodeType": "YulBlock",
													"src": "7176:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7233:16:7",
																"nodeType": "YulBlock",
																"src": "7233:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7242:1:7",
																					"nodeType": "YulLiteral",
																					"src": "7242:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7245:1:7",
																					"nodeType": "YulLiteral",
																					"src": "7245:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7235:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7235:6:7"
																			},
																			"nativeSrc": "7235:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7235:12:7"
																		},
																		"nativeSrc": "7235:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7235:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7199:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "7199:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7224:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "7224:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "7206:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "7206:17:7"
																				},
																				"nativeSrc": "7206:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7206:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7196:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "7196:2:7"
																		},
																		"nativeSrc": "7196:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7196:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7189:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7189:6:7"
																},
																"nativeSrc": "7189:43:7",
																"nodeType": "YulFunctionCall",
																"src": "7189:43:7"
															},
															"nativeSrc": "7186:63:7",
															"nodeType": "YulIf",
															"src": "7186:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "7133:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7169:5:7",
														"nodeType": "YulTypedName",
														"src": "7169:5:7",
														"type": ""
													}
												],
												"src": "7133:122:7"
											},
											{
												"body": {
													"nativeSrc": "7313:87:7",
													"nodeType": "YulBlock",
													"src": "7313:87:7",
													"statements": [
														{
															"nativeSrc": "7323:29:7",
															"nodeType": "YulAssignment",
															"src": "7323:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7345:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7345:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7332:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "7332:12:7"
																},
																"nativeSrc": "7332:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7332:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7323:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7323:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7388:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7388:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "7361:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "7361:26:7"
																},
																"nativeSrc": "7361:33:7",
																"nodeType": "YulFunctionCall",
																"src": "7361:33:7"
															},
															"nativeSrc": "7361:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "7361:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "7261:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7291:6:7",
														"nodeType": "YulTypedName",
														"src": "7291:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7299:3:7",
														"nodeType": "YulTypedName",
														"src": "7299:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7307:5:7",
														"nodeType": "YulTypedName",
														"src": "7307:5:7",
														"type": ""
													}
												],
												"src": "7261:139:7"
											},
											{
												"body": {
													"nativeSrc": "7472:263:7",
													"nodeType": "YulBlock",
													"src": "7472:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7518:83:7",
																"nodeType": "YulBlock",
																"src": "7518:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7520:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7520:77:7"
																			},
																			"nativeSrc": "7520:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7520:79:7"
																		},
																		"nativeSrc": "7520:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7520:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7493:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7493:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7502:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7502:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7489:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7489:3:7"
																		},
																		"nativeSrc": "7489:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7489:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7514:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7514:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7485:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7485:3:7"
																},
																"nativeSrc": "7485:32:7",
																"nodeType": "YulFunctionCall",
																"src": "7485:32:7"
															},
															"nativeSrc": "7482:119:7",
															"nodeType": "YulIf",
															"src": "7482:119:7"
														},
														{
															"nativeSrc": "7611:117:7",
															"nodeType": "YulBlock",
															"src": "7611:117:7",
															"statements": [
																{
																	"nativeSrc": "7626:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7626:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7640:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7640:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7630:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7630:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7655:63:7",
																	"nodeType": "YulAssignment",
																	"src": "7655:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7690:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7690:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7701:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7701:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7686:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7686:3:7"
																				},
																				"nativeSrc": "7686:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7686:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7710:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7710:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7665:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "7665:20:7"
																		},
																		"nativeSrc": "7665:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7665:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7655:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7655:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "7406:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7442:9:7",
														"nodeType": "YulTypedName",
														"src": "7442:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7453:7:7",
														"nodeType": "YulTypedName",
														"src": "7453:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7465:6:7",
														"nodeType": "YulTypedName",
														"src": "7465:6:7",
														"type": ""
													}
												],
												"src": "7406:329:7"
											},
											{
												"body": {
													"nativeSrc": "7806:53:7",
													"nodeType": "YulBlock",
													"src": "7806:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7823:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7823:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7846:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "7846:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "7828:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "7828:17:7"
																		},
																		"nativeSrc": "7828:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7828:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7816:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7816:6:7"
																},
																"nativeSrc": "7816:37:7",
																"nodeType": "YulFunctionCall",
																"src": "7816:37:7"
															},
															"nativeSrc": "7816:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "7816:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "7741:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7794:5:7",
														"nodeType": "YulTypedName",
														"src": "7794:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7801:3:7",
														"nodeType": "YulTypedName",
														"src": "7801:3:7",
														"type": ""
													}
												],
												"src": "7741:118:7"
											},
											{
												"body": {
													"nativeSrc": "7963:124:7",
													"nodeType": "YulBlock",
													"src": "7963:124:7",
													"statements": [
														{
															"nativeSrc": "7973:26:7",
															"nodeType": "YulAssignment",
															"src": "7973:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7985:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7985:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7996:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7996:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7981:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7981:3:7"
																},
																"nativeSrc": "7981:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7981:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7973:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7973:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8053:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8053:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8066:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8066:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8077:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8077:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8062:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8062:3:7"
																		},
																		"nativeSrc": "8062:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8062:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8009:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "8009:43:7"
																},
																"nativeSrc": "8009:71:7",
																"nodeType": "YulFunctionCall",
																"src": "8009:71:7"
															},
															"nativeSrc": "8009:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "8009:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "7865:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7935:9:7",
														"nodeType": "YulTypedName",
														"src": "7935:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7947:6:7",
														"nodeType": "YulTypedName",
														"src": "7947:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7958:4:7",
														"nodeType": "YulTypedName",
														"src": "7958:4:7",
														"type": ""
													}
												],
												"src": "7865:222:7"
											},
											{
												"body": {
													"nativeSrc": "8182:28:7",
													"nodeType": "YulBlock",
													"src": "8182:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8199:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8199:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8202:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8202:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8192:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8192:6:7"
																},
																"nativeSrc": "8192:12:7",
																"nodeType": "YulFunctionCall",
																"src": "8192:12:7"
															},
															"nativeSrc": "8192:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "8192:12:7"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "8093:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "8093:117:7"
											},
											{
												"body": {
													"nativeSrc": "8305:28:7",
													"nodeType": "YulBlock",
													"src": "8305:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8322:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8322:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8325:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8325:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8315:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8315:6:7"
																},
																"nativeSrc": "8315:12:7",
																"nodeType": "YulFunctionCall",
																"src": "8315:12:7"
															},
															"nativeSrc": "8315:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "8315:12:7"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "8216:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "8216:117:7"
											},
											{
												"body": {
													"nativeSrc": "8367:152:7",
													"nodeType": "YulBlock",
													"src": "8367:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8384:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8384:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8387:77:7",
																		"nodeType": "YulLiteral",
																		"src": "8387:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8377:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8377:6:7"
																},
																"nativeSrc": "8377:88:7",
																"nodeType": "YulFunctionCall",
																"src": "8377:88:7"
															},
															"nativeSrc": "8377:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "8377:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8481:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8481:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8484:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8484:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8474:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8474:6:7"
																},
																"nativeSrc": "8474:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8474:15:7"
															},
															"nativeSrc": "8474:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8474:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8505:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8505:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8508:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8508:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8498:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8498:6:7"
																},
																"nativeSrc": "8498:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8498:15:7"
															},
															"nativeSrc": "8498:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8498:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "8339:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "8339:180:7"
											},
											{
												"body": {
													"nativeSrc": "8568:238:7",
													"nodeType": "YulBlock",
													"src": "8568:238:7",
													"statements": [
														{
															"nativeSrc": "8578:58:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8578:58:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "8600:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8600:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "8630:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8630:4:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "8608:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "8608:21:7"
																		},
																		"nativeSrc": "8608:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8608:27:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8596:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8596:3:7"
																},
																"nativeSrc": "8596:40:7",
																"nodeType": "YulFunctionCall",
																"src": "8596:40:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "8582:10:7",
																	"nodeType": "YulTypedName",
																	"src": "8582:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8747:22:7",
																"nodeType": "YulBlock",
																"src": "8747:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8749:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8749:16:7"
																			},
																			"nativeSrc": "8749:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8749:18:7"
																		},
																		"nativeSrc": "8749:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8749:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "8690:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "8690:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8702:18:7",
																				"nodeType": "YulLiteral",
																				"src": "8702:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8687:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "8687:2:7"
																		},
																		"nativeSrc": "8687:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8687:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "8726:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "8726:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "8738:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8738:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8723:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "8723:2:7"
																		},
																		"nativeSrc": "8723:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8723:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8684:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8684:2:7"
																},
																"nativeSrc": "8684:62:7",
																"nodeType": "YulFunctionCall",
																"src": "8684:62:7"
															},
															"nativeSrc": "8681:88:7",
															"nodeType": "YulIf",
															"src": "8681:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8785:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8785:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "8789:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "8789:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8778:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8778:6:7"
																},
																"nativeSrc": "8778:22:7",
																"nodeType": "YulFunctionCall",
																"src": "8778:22:7"
															},
															"nativeSrc": "8778:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "8778:22:7"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "8525:281:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8554:6:7",
														"nodeType": "YulTypedName",
														"src": "8554:6:7",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "8562:4:7",
														"nodeType": "YulTypedName",
														"src": "8562:4:7",
														"type": ""
													}
												],
												"src": "8525:281:7"
											},
											{
												"body": {
													"nativeSrc": "8853:88:7",
													"nodeType": "YulBlock",
													"src": "8853:88:7",
													"statements": [
														{
															"nativeSrc": "8863:30:7",
															"nodeType": "YulAssignment",
															"src": "8863:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "8873:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "8873:18:7"
																},
																"nativeSrc": "8873:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8873:20:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "8863:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8863:6:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "8922:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8922:6:7"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "8930:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8930:4:7"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "8902:19:7",
																	"nodeType": "YulIdentifier",
																	"src": "8902:19:7"
																},
																"nativeSrc": "8902:33:7",
																"nodeType": "YulFunctionCall",
																"src": "8902:33:7"
															},
															"nativeSrc": "8902:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "8902:33:7"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "8812:129:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "8837:4:7",
														"nodeType": "YulTypedName",
														"src": "8837:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "8846:6:7",
														"nodeType": "YulTypedName",
														"src": "8846:6:7",
														"type": ""
													}
												],
												"src": "8812:129:7"
											},
											{
												"body": {
													"nativeSrc": "9014:241:7",
													"nodeType": "YulBlock",
													"src": "9014:241:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "9119:22:7",
																"nodeType": "YulBlock",
																"src": "9119:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "9121:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "9121:16:7"
																			},
																			"nativeSrc": "9121:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9121:18:7"
																		},
																		"nativeSrc": "9121:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9121:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "9091:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9091:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9099:18:7",
																		"nodeType": "YulLiteral",
																		"src": "9099:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9088:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "9088:2:7"
																},
																"nativeSrc": "9088:30:7",
																"nodeType": "YulFunctionCall",
																"src": "9088:30:7"
															},
															"nativeSrc": "9085:56:7",
															"nodeType": "YulIf",
															"src": "9085:56:7"
														},
														{
															"nativeSrc": "9151:37:7",
															"nodeType": "YulAssignment",
															"src": "9151:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "9181:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9181:6:7"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "9159:21:7",
																	"nodeType": "YulIdentifier",
																	"src": "9159:21:7"
																},
																"nativeSrc": "9159:29:7",
																"nodeType": "YulFunctionCall",
																"src": "9159:29:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "9151:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9151:4:7"
																}
															]
														},
														{
															"nativeSrc": "9225:23:7",
															"nodeType": "YulAssignment",
															"src": "9225:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "9237:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9237:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9243:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9243:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9233:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9233:3:7"
																},
																"nativeSrc": "9233:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9233:15:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "9225:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9225:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "8947:308:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "8998:6:7",
														"nodeType": "YulTypedName",
														"src": "8998:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "9009:4:7",
														"nodeType": "YulTypedName",
														"src": "9009:4:7",
														"type": ""
													}
												],
												"src": "8947:308:7"
											},
											{
												"body": {
													"nativeSrc": "9325:84:7",
													"nodeType": "YulBlock",
													"src": "9325:84:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "9349:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9349:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "9354:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9354:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9359:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9359:6:7"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "9336:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "9336:12:7"
																},
																"nativeSrc": "9336:30:7",
																"nodeType": "YulFunctionCall",
																"src": "9336:30:7"
															},
															"nativeSrc": "9336:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "9336:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "9386:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "9386:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "9391:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9391:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9382:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9382:3:7"
																		},
																		"nativeSrc": "9382:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9382:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9400:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9400:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9375:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9375:6:7"
																},
																"nativeSrc": "9375:27:7",
																"nodeType": "YulFunctionCall",
																"src": "9375:27:7"
															},
															"nativeSrc": "9375:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "9375:27:7"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "9261:148:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "9307:3:7",
														"nodeType": "YulTypedName",
														"src": "9307:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "9312:3:7",
														"nodeType": "YulTypedName",
														"src": "9312:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9317:6:7",
														"nodeType": "YulTypedName",
														"src": "9317:6:7",
														"type": ""
													}
												],
												"src": "9261:148:7"
											},
											{
												"body": {
													"nativeSrc": "9499:341:7",
													"nodeType": "YulBlock",
													"src": "9499:341:7",
													"statements": [
														{
															"nativeSrc": "9509:75:7",
															"nodeType": "YulAssignment",
															"src": "9509:75:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9576:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9576:6:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "9534:41:7",
																			"nodeType": "YulIdentifier",
																			"src": "9534:41:7"
																		},
																		"nativeSrc": "9534:49:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9534:49:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "9518:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "9518:15:7"
																},
																"nativeSrc": "9518:66:7",
																"nodeType": "YulFunctionCall",
																"src": "9518:66:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "9509:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9509:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "9600:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9600:5:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9607:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9607:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9593:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9593:6:7"
																},
																"nativeSrc": "9593:21:7",
																"nodeType": "YulFunctionCall",
																"src": "9593:21:7"
															},
															"nativeSrc": "9593:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "9593:21:7"
														},
														{
															"nativeSrc": "9623:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "9623:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "9638:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9638:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9645:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9645:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9634:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9634:3:7"
																},
																"nativeSrc": "9634:16:7",
																"nodeType": "YulFunctionCall",
																"src": "9634:16:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "9627:3:7",
																	"nodeType": "YulTypedName",
																	"src": "9627:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9688:83:7",
																"nodeType": "YulBlock",
																"src": "9688:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "9690:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "9690:77:7"
																			},
																			"nativeSrc": "9690:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9690:79:7"
																		},
																		"nativeSrc": "9690:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9690:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "9669:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "9669:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "9674:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9674:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9665:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9665:3:7"
																		},
																		"nativeSrc": "9665:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9665:16:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9683:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9683:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9662:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "9662:2:7"
																},
																"nativeSrc": "9662:25:7",
																"nodeType": "YulFunctionCall",
																"src": "9662:25:7"
															},
															"nativeSrc": "9659:112:7",
															"nodeType": "YulIf",
															"src": "9659:112:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "9817:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9817:3:7"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "9822:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9822:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9827:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9827:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "9780:36:7",
																	"nodeType": "YulIdentifier",
																	"src": "9780:36:7"
																},
																"nativeSrc": "9780:54:7",
																"nodeType": "YulFunctionCall",
																"src": "9780:54:7"
															},
															"nativeSrc": "9780:54:7",
															"nodeType": "YulExpressionStatement",
															"src": "9780:54:7"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "9415:425:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "9472:3:7",
														"nodeType": "YulTypedName",
														"src": "9472:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9477:6:7",
														"nodeType": "YulTypedName",
														"src": "9477:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9485:3:7",
														"nodeType": "YulTypedName",
														"src": "9485:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "9493:5:7",
														"nodeType": "YulTypedName",
														"src": "9493:5:7",
														"type": ""
													}
												],
												"src": "9415:425:7"
											},
											{
												"body": {
													"nativeSrc": "9922:278:7",
													"nodeType": "YulBlock",
													"src": "9922:278:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "9971:83:7",
																"nodeType": "YulBlock",
																"src": "9971:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "9973:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "9973:77:7"
																			},
																			"nativeSrc": "9973:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9973:79:7"
																		},
																		"nativeSrc": "9973:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9973:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "9950:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "9950:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9958:4:7",
																						"nodeType": "YulLiteral",
																						"src": "9958:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9946:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "9946:3:7"
																				},
																				"nativeSrc": "9946:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9946:17:7"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "9965:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "9965:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "9942:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9942:3:7"
																		},
																		"nativeSrc": "9942:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9942:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9935:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9935:6:7"
																},
																"nativeSrc": "9935:35:7",
																"nodeType": "YulFunctionCall",
																"src": "9935:35:7"
															},
															"nativeSrc": "9932:122:7",
															"nodeType": "YulIf",
															"src": "9932:122:7"
														},
														{
															"nativeSrc": "10063:34:7",
															"nodeType": "YulVariableDeclaration",
															"src": "10063:34:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10090:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10090:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "10077:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "10077:12:7"
																},
																"nativeSrc": "10077:20:7",
																"nodeType": "YulFunctionCall",
																"src": "10077:20:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10067:6:7",
																	"nodeType": "YulTypedName",
																	"src": "10067:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10106:88:7",
															"nodeType": "YulAssignment",
															"src": "10106:88:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10167:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "10167:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10175:4:7",
																				"nodeType": "YulLiteral",
																				"src": "10175:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10163:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10163:3:7"
																		},
																		"nativeSrc": "10163:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10163:17:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10182:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10182:6:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10190:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10190:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "10115:47:7",
																	"nodeType": "YulIdentifier",
																	"src": "10115:47:7"
																},
																"nativeSrc": "10115:79:7",
																"nodeType": "YulFunctionCall",
																"src": "10115:79:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "10106:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "10106:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "9860:340:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9900:6:7",
														"nodeType": "YulTypedName",
														"src": "9900:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9908:3:7",
														"nodeType": "YulTypedName",
														"src": "9908:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "9916:5:7",
														"nodeType": "YulTypedName",
														"src": "9916:5:7",
														"type": ""
													}
												],
												"src": "9860:340:7"
											},
											{
												"body": {
													"nativeSrc": "10353:1158:7",
													"nodeType": "YulBlock",
													"src": "10353:1158:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "10400:83:7",
																"nodeType": "YulBlock",
																"src": "10400:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10402:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "10402:77:7"
																			},
																			"nativeSrc": "10402:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10402:79:7"
																		},
																		"nativeSrc": "10402:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "10402:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10374:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10374:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10383:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10383:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10370:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10370:3:7"
																		},
																		"nativeSrc": "10370:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10370:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10395:3:7",
																		"nodeType": "YulLiteral",
																		"src": "10395:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10366:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10366:3:7"
																},
																"nativeSrc": "10366:33:7",
																"nodeType": "YulFunctionCall",
																"src": "10366:33:7"
															},
															"nativeSrc": "10363:120:7",
															"nodeType": "YulIf",
															"src": "10363:120:7"
														},
														{
															"nativeSrc": "10493:117:7",
															"nodeType": "YulBlock",
															"src": "10493:117:7",
															"statements": [
																{
																	"nativeSrc": "10508:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10508:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10522:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10522:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10512:6:7",
																			"nodeType": "YulTypedName",
																			"src": "10512:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10537:63:7",
																	"nodeType": "YulAssignment",
																	"src": "10537:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10572:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10572:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10583:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "10583:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10568:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10568:3:7"
																				},
																				"nativeSrc": "10568:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10568:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10592:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10592:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "10547:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "10547:20:7"
																		},
																		"nativeSrc": "10547:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10547:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10537:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "10537:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10620:288:7",
															"nodeType": "YulBlock",
															"src": "10620:288:7",
															"statements": [
																{
																	"nativeSrc": "10635:46:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10635:46:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10666:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10666:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10677:2:7",
																						"nodeType": "YulLiteral",
																						"src": "10677:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10662:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10662:3:7"
																				},
																				"nativeSrc": "10662:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10662:18:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "10649:12:7",
																			"nodeType": "YulIdentifier",
																			"src": "10649:12:7"
																		},
																		"nativeSrc": "10649:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10649:32:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10639:6:7",
																			"nodeType": "YulTypedName",
																			"src": "10639:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "10728:83:7",
																		"nodeType": "YulBlock",
																		"src": "10728:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "10730:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "10730:77:7"
																					},
																					"nativeSrc": "10730:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "10730:79:7"
																				},
																				"nativeSrc": "10730:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "10730:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10700:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "10700:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10708:18:7",
																				"nodeType": "YulLiteral",
																				"src": "10708:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10697:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "10697:2:7"
																		},
																		"nativeSrc": "10697:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10697:30:7"
																	},
																	"nativeSrc": "10694:117:7",
																	"nodeType": "YulIf",
																	"src": "10694:117:7"
																},
																{
																	"nativeSrc": "10825:73:7",
																	"nodeType": "YulAssignment",
																	"src": "10825:73:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10870:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10870:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10881:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "10881:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10866:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10866:3:7"
																				},
																				"nativeSrc": "10866:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10866:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10890:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10890:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "10835:30:7",
																			"nodeType": "YulIdentifier",
																			"src": "10835:30:7"
																		},
																		"nativeSrc": "10835:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10835:63:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10825:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "10825:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10918:288:7",
															"nodeType": "YulBlock",
															"src": "10918:288:7",
															"statements": [
																{
																	"nativeSrc": "10933:46:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10933:46:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10964:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10964:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10975:2:7",
																						"nodeType": "YulLiteral",
																						"src": "10975:2:7",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10960:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10960:3:7"
																				},
																				"nativeSrc": "10960:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10960:18:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "10947:12:7",
																			"nodeType": "YulIdentifier",
																			"src": "10947:12:7"
																		},
																		"nativeSrc": "10947:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10947:32:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10937:6:7",
																			"nodeType": "YulTypedName",
																			"src": "10937:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "11026:83:7",
																		"nodeType": "YulBlock",
																		"src": "11026:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "11028:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "11028:77:7"
																					},
																					"nativeSrc": "11028:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "11028:79:7"
																				},
																				"nativeSrc": "11028:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "11028:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10998:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "10998:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11006:18:7",
																				"nodeType": "YulLiteral",
																				"src": "11006:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10995:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "10995:2:7"
																		},
																		"nativeSrc": "10995:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10995:30:7"
																	},
																	"nativeSrc": "10992:117:7",
																	"nodeType": "YulIf",
																	"src": "10992:117:7"
																},
																{
																	"nativeSrc": "11123:73:7",
																	"nodeType": "YulAssignment",
																	"src": "11123:73:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11168:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "11168:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11179:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "11179:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11164:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11164:3:7"
																				},
																				"nativeSrc": "11164:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11164:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11188:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "11188:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "11133:30:7",
																			"nodeType": "YulIdentifier",
																			"src": "11133:30:7"
																		},
																		"nativeSrc": "11133:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11133:63:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "11123:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "11123:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11216:288:7",
															"nodeType": "YulBlock",
															"src": "11216:288:7",
															"statements": [
																{
																	"nativeSrc": "11231:46:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11231:46:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11262:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "11262:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11273:2:7",
																						"nodeType": "YulLiteral",
																						"src": "11273:2:7",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11258:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11258:3:7"
																				},
																				"nativeSrc": "11258:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11258:18:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "11245:12:7",
																			"nodeType": "YulIdentifier",
																			"src": "11245:12:7"
																		},
																		"nativeSrc": "11245:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11245:32:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11235:6:7",
																			"nodeType": "YulTypedName",
																			"src": "11235:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "11324:83:7",
																		"nodeType": "YulBlock",
																		"src": "11324:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "11326:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "11326:77:7"
																					},
																					"nativeSrc": "11326:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "11326:79:7"
																				},
																				"nativeSrc": "11326:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "11326:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11296:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "11296:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11304:18:7",
																				"nodeType": "YulLiteral",
																				"src": "11304:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "11293:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "11293:2:7"
																		},
																		"nativeSrc": "11293:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11293:30:7"
																	},
																	"nativeSrc": "11290:117:7",
																	"nodeType": "YulIf",
																	"src": "11290:117:7"
																},
																{
																	"nativeSrc": "11421:73:7",
																	"nodeType": "YulAssignment",
																	"src": "11421:73:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11466:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "11466:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11477:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "11477:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11462:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11462:3:7"
																				},
																				"nativeSrc": "11462:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11462:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11486:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "11486:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "11431:30:7",
																			"nodeType": "YulIdentifier",
																			"src": "11431:30:7"
																		},
																		"nativeSrc": "11431:63:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11431:63:7"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "11421:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "11421:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr",
												"nativeSrc": "10206:1305:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10299:9:7",
														"nodeType": "YulTypedName",
														"src": "10299:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10310:7:7",
														"nodeType": "YulTypedName",
														"src": "10310:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10322:6:7",
														"nodeType": "YulTypedName",
														"src": "10322:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10330:6:7",
														"nodeType": "YulTypedName",
														"src": "10330:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10338:6:7",
														"nodeType": "YulTypedName",
														"src": "10338:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10346:6:7",
														"nodeType": "YulTypedName",
														"src": "10346:6:7",
														"type": ""
													}
												],
												"src": "10206:1305:7"
											},
											{
												"body": {
													"nativeSrc": "11549:28:7",
													"nodeType": "YulBlock",
													"src": "11549:28:7",
													"statements": [
														{
															"nativeSrc": "11559:12:7",
															"nodeType": "YulAssignment",
															"src": "11559:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "11566:5:7",
																"nodeType": "YulIdentifier",
																"src": "11566:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "11559:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11559:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "11517:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11535:5:7",
														"nodeType": "YulTypedName",
														"src": "11535:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "11545:3:7",
														"nodeType": "YulTypedName",
														"src": "11545:3:7",
														"type": ""
													}
												],
												"src": "11517:60:7"
											},
											{
												"body": {
													"nativeSrc": "11643:82:7",
													"nodeType": "YulBlock",
													"src": "11643:82:7",
													"statements": [
														{
															"nativeSrc": "11653:66:7",
															"nodeType": "YulAssignment",
															"src": "11653:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11711:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "11711:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "11693:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "11693:17:7"
																				},
																				"nativeSrc": "11693:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11693:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "11684:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "11684:8:7"
																		},
																		"nativeSrc": "11684:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11684:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "11666:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "11666:17:7"
																},
																"nativeSrc": "11666:53:7",
																"nodeType": "YulFunctionCall",
																"src": "11666:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "11653:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "11653:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "11583:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11623:5:7",
														"nodeType": "YulTypedName",
														"src": "11623:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "11633:9:7",
														"nodeType": "YulTypedName",
														"src": "11633:9:7",
														"type": ""
													}
												],
												"src": "11583:142:7"
											},
											{
												"body": {
													"nativeSrc": "11791:66:7",
													"nodeType": "YulBlock",
													"src": "11791:66:7",
													"statements": [
														{
															"nativeSrc": "11801:50:7",
															"nodeType": "YulAssignment",
															"src": "11801:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11845:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "11845:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "11814:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "11814:30:7"
																},
																"nativeSrc": "11814:37:7",
																"nodeType": "YulFunctionCall",
																"src": "11814:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "11801:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "11801:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "11731:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11771:5:7",
														"nodeType": "YulTypedName",
														"src": "11771:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "11781:9:7",
														"nodeType": "YulTypedName",
														"src": "11781:9:7",
														"type": ""
													}
												],
												"src": "11731:126:7"
											},
											{
												"body": {
													"nativeSrc": "11937:66:7",
													"nodeType": "YulBlock",
													"src": "11937:66:7",
													"statements": [
														{
															"nativeSrc": "11947:50:7",
															"nodeType": "YulAssignment",
															"src": "11947:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11991:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "11991:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "11960:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "11960:30:7"
																},
																"nativeSrc": "11960:37:7",
																"nodeType": "YulFunctionCall",
																"src": "11960:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "11947:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "11947:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$167_to_t_address",
												"nativeSrc": "11863:140:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11917:5:7",
														"nodeType": "YulTypedName",
														"src": "11917:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "11927:9:7",
														"nodeType": "YulTypedName",
														"src": "11927:9:7",
														"type": ""
													}
												],
												"src": "11863:140:7"
											},
											{
												"body": {
													"nativeSrc": "12088:80:7",
													"nodeType": "YulBlock",
													"src": "12088:80:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12105:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12105:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12155:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "12155:5:7"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$167_to_t_address",
																			"nativeSrc": "12110:44:7",
																			"nodeType": "YulIdentifier",
																			"src": "12110:44:7"
																		},
																		"nativeSrc": "12110:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12110:51:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12098:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12098:6:7"
																},
																"nativeSrc": "12098:64:7",
																"nodeType": "YulFunctionCall",
																"src": "12098:64:7"
															},
															"nativeSrc": "12098:64:7",
															"nodeType": "YulExpressionStatement",
															"src": "12098:64:7"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$167_to_t_address_fromStack",
												"nativeSrc": "12009:159:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12076:5:7",
														"nodeType": "YulTypedName",
														"src": "12076:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12083:3:7",
														"nodeType": "YulTypedName",
														"src": "12083:3:7",
														"type": ""
													}
												],
												"src": "12009:159:7"
											},
											{
												"body": {
													"nativeSrc": "12286:138:7",
													"nodeType": "YulBlock",
													"src": "12286:138:7",
													"statements": [
														{
															"nativeSrc": "12296:26:7",
															"nodeType": "YulAssignment",
															"src": "12296:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12308:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12308:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12319:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12319:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12304:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12304:3:7"
																},
																"nativeSrc": "12304:18:7",
																"nodeType": "YulFunctionCall",
																"src": "12304:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12296:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12296:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12390:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "12390:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12403:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12403:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12414:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12414:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12399:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12399:3:7"
																		},
																		"nativeSrc": "12399:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12399:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$167_to_t_address_fromStack",
																	"nativeSrc": "12332:57:7",
																	"nodeType": "YulIdentifier",
																	"src": "12332:57:7"
																},
																"nativeSrc": "12332:85:7",
																"nodeType": "YulFunctionCall",
																"src": "12332:85:7"
															},
															"nativeSrc": "12332:85:7",
															"nodeType": "YulExpressionStatement",
															"src": "12332:85:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$167__to_t_address__fromStack_reversed",
												"nativeSrc": "12174:250:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12258:9:7",
														"nodeType": "YulTypedName",
														"src": "12258:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12270:6:7",
														"nodeType": "YulTypedName",
														"src": "12270:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12281:4:7",
														"nodeType": "YulTypedName",
														"src": "12281:4:7",
														"type": ""
													}
												],
												"src": "12174:250:7"
											},
											{
												"body": {
													"nativeSrc": "12526:73:7",
													"nodeType": "YulBlock",
													"src": "12526:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12543:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12543:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12548:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "12548:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12536:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12536:6:7"
																},
																"nativeSrc": "12536:19:7",
																"nodeType": "YulFunctionCall",
																"src": "12536:19:7"
															},
															"nativeSrc": "12536:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "12536:19:7"
														},
														{
															"nativeSrc": "12564:29:7",
															"nodeType": "YulAssignment",
															"src": "12564:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12583:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12583:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12588:4:7",
																		"nodeType": "YulLiteral",
																		"src": "12588:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12579:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12579:3:7"
																},
																"nativeSrc": "12579:14:7",
																"nodeType": "YulFunctionCall",
																"src": "12579:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "12564:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "12564:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "12430:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12498:3:7",
														"nodeType": "YulTypedName",
														"src": "12498:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12503:6:7",
														"nodeType": "YulTypedName",
														"src": "12503:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "12514:11:7",
														"nodeType": "YulTypedName",
														"src": "12514:11:7",
														"type": ""
													}
												],
												"src": "12430:169:7"
											},
											{
												"body": {
													"nativeSrc": "12711:65:7",
													"nodeType": "YulBlock",
													"src": "12711:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12733:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "12733:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12741:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12741:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12729:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12729:3:7"
																		},
																		"nativeSrc": "12729:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12729:14:7"
																	},
																	{
																		"hexValue": "416363657373206e6f7420617574686f72697a6564",
																		"kind": "string",
																		"nativeSrc": "12745:23:7",
																		"nodeType": "YulLiteral",
																		"src": "12745:23:7",
																		"type": "",
																		"value": "Access not authorized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12722:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12722:6:7"
																},
																"nativeSrc": "12722:47:7",
																"nodeType": "YulFunctionCall",
																"src": "12722:47:7"
															},
															"nativeSrc": "12722:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "12722:47:7"
														}
													]
												},
												"name": "store_literal_in_memory_35524723070ac5375c7260be238565eacc4e8a59252edddbe0aa4f3cd94db18b",
												"nativeSrc": "12605:171:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12703:6:7",
														"nodeType": "YulTypedName",
														"src": "12703:6:7",
														"type": ""
													}
												],
												"src": "12605:171:7"
											},
											{
												"body": {
													"nativeSrc": "12928:220:7",
													"nodeType": "YulBlock",
													"src": "12928:220:7",
													"statements": [
														{
															"nativeSrc": "12938:74:7",
															"nodeType": "YulAssignment",
															"src": "12938:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13004:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13004:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13009:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13009:2:7",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12945:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "12945:58:7"
																},
																"nativeSrc": "12945:67:7",
																"nodeType": "YulFunctionCall",
																"src": "12945:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12938:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12938:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13110:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13110:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_35524723070ac5375c7260be238565eacc4e8a59252edddbe0aa4f3cd94db18b",
																	"nativeSrc": "13021:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "13021:88:7"
																},
																"nativeSrc": "13021:93:7",
																"nodeType": "YulFunctionCall",
																"src": "13021:93:7"
															},
															"nativeSrc": "13021:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "13021:93:7"
														},
														{
															"nativeSrc": "13123:19:7",
															"nodeType": "YulAssignment",
															"src": "13123:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13134:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13134:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13139:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13139:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13130:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13130:3:7"
																},
																"nativeSrc": "13130:12:7",
																"nodeType": "YulFunctionCall",
																"src": "13130:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13123:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13123:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_35524723070ac5375c7260be238565eacc4e8a59252edddbe0aa4f3cd94db18b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12782:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12916:3:7",
														"nodeType": "YulTypedName",
														"src": "12916:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12924:3:7",
														"nodeType": "YulTypedName",
														"src": "12924:3:7",
														"type": ""
													}
												],
												"src": "12782:366:7"
											},
											{
												"body": {
													"nativeSrc": "13325:248:7",
													"nodeType": "YulBlock",
													"src": "13325:248:7",
													"statements": [
														{
															"nativeSrc": "13335:26:7",
															"nodeType": "YulAssignment",
															"src": "13335:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13347:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13347:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13358:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13358:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13343:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13343:3:7"
																},
																"nativeSrc": "13343:18:7",
																"nodeType": "YulFunctionCall",
																"src": "13343:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13335:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13335:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13382:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13382:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13393:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13393:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13378:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13378:3:7"
																		},
																		"nativeSrc": "13378:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13378:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13401:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "13401:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13407:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13407:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13397:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13397:3:7"
																		},
																		"nativeSrc": "13397:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13397:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13371:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13371:6:7"
																},
																"nativeSrc": "13371:47:7",
																"nodeType": "YulFunctionCall",
																"src": "13371:47:7"
															},
															"nativeSrc": "13371:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "13371:47:7"
														},
														{
															"nativeSrc": "13427:139:7",
															"nodeType": "YulAssignment",
															"src": "13427:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13561:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "13561:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_35524723070ac5375c7260be238565eacc4e8a59252edddbe0aa4f3cd94db18b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13435:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "13435:124:7"
																},
																"nativeSrc": "13435:131:7",
																"nodeType": "YulFunctionCall",
																"src": "13435:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13427:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13427:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_35524723070ac5375c7260be238565eacc4e8a59252edddbe0aa4f3cd94db18b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13154:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13305:9:7",
														"nodeType": "YulTypedName",
														"src": "13305:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13320:4:7",
														"nodeType": "YulTypedName",
														"src": "13320:4:7",
														"type": ""
													}
												],
												"src": "13154:419:7"
											},
											{
												"body": {
													"nativeSrc": "13607:152:7",
													"nodeType": "YulBlock",
													"src": "13607:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13624:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13624:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13627:77:7",
																		"nodeType": "YulLiteral",
																		"src": "13627:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13617:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13617:6:7"
																},
																"nativeSrc": "13617:88:7",
																"nodeType": "YulFunctionCall",
																"src": "13617:88:7"
															},
															"nativeSrc": "13617:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "13617:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13721:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13721:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13724:4:7",
																		"nodeType": "YulLiteral",
																		"src": "13724:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13714:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13714:6:7"
																},
																"nativeSrc": "13714:15:7",
																"nodeType": "YulFunctionCall",
																"src": "13714:15:7"
															},
															"nativeSrc": "13714:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "13714:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13745:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13745:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13748:4:7",
																		"nodeType": "YulLiteral",
																		"src": "13748:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13738:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13738:6:7"
																},
																"nativeSrc": "13738:15:7",
																"nodeType": "YulFunctionCall",
																"src": "13738:15:7"
															},
															"nativeSrc": "13738:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "13738:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "13579:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "13579:180:7"
											},
											{
												"body": {
													"nativeSrc": "13816:269:7",
													"nodeType": "YulBlock",
													"src": "13816:269:7",
													"statements": [
														{
															"nativeSrc": "13826:22:7",
															"nodeType": "YulAssignment",
															"src": "13826:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13840:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "13840:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13846:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13846:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "13836:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13836:3:7"
																},
																"nativeSrc": "13836:12:7",
																"nodeType": "YulFunctionCall",
																"src": "13836:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "13826:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13826:6:7"
																}
															]
														},
														{
															"nativeSrc": "13857:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "13857:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13887:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "13887:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13893:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13893:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "13883:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13883:3:7"
																},
																"nativeSrc": "13883:12:7",
																"nodeType": "YulFunctionCall",
																"src": "13883:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "13861:18:7",
																	"nodeType": "YulTypedName",
																	"src": "13861:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13934:51:7",
																"nodeType": "YulBlock",
																"src": "13934:51:7",
																"statements": [
																	{
																		"nativeSrc": "13948:27:7",
																		"nodeType": "YulAssignment",
																		"src": "13948:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "13962:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "13962:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13970:4:7",
																					"nodeType": "YulLiteral",
																					"src": "13970:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "13958:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "13958:3:7"
																			},
																			"nativeSrc": "13958:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "13958:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "13948:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "13948:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "13914:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "13914:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13907:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13907:6:7"
																},
																"nativeSrc": "13907:26:7",
																"nodeType": "YulFunctionCall",
																"src": "13907:26:7"
															},
															"nativeSrc": "13904:81:7",
															"nodeType": "YulIf",
															"src": "13904:81:7"
														},
														{
															"body": {
																"nativeSrc": "14037:42:7",
																"nodeType": "YulBlock",
																"src": "14037:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "14051:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "14051:16:7"
																			},
																			"nativeSrc": "14051:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "14051:18:7"
																		},
																		"nativeSrc": "14051:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "14051:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "14001:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "14001:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "14024:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "14024:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14032:2:7",
																				"nodeType": "YulLiteral",
																				"src": "14032:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "14021:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "14021:2:7"
																		},
																		"nativeSrc": "14021:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14021:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "13998:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "13998:2:7"
																},
																"nativeSrc": "13998:38:7",
																"nodeType": "YulFunctionCall",
																"src": "13998:38:7"
															},
															"nativeSrc": "13995:84:7",
															"nodeType": "YulIf",
															"src": "13995:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "13765:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "13800:4:7",
														"nodeType": "YulTypedName",
														"src": "13800:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "13809:6:7",
														"nodeType": "YulTypedName",
														"src": "13809:6:7",
														"type": ""
													}
												],
												"src": "13765:320:7"
											},
											{
												"body": {
													"nativeSrc": "14150:50:7",
													"nodeType": "YulBlock",
													"src": "14150:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14167:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14167:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14187:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "14187:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "14172:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "14172:14:7"
																		},
																		"nativeSrc": "14172:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14172:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14160:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14160:6:7"
																},
																"nativeSrc": "14160:34:7",
																"nodeType": "YulFunctionCall",
																"src": "14160:34:7"
															},
															"nativeSrc": "14160:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "14160:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "14091:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14138:5:7",
														"nodeType": "YulTypedName",
														"src": "14138:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14145:3:7",
														"nodeType": "YulTypedName",
														"src": "14145:3:7",
														"type": ""
													}
												],
												"src": "14091:109:7"
											},
											{
												"body": {
													"nativeSrc": "14326:200:7",
													"nodeType": "YulBlock",
													"src": "14326:200:7",
													"statements": [
														{
															"nativeSrc": "14336:26:7",
															"nodeType": "YulAssignment",
															"src": "14336:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14348:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "14348:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14359:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14359:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14344:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14344:3:7"
																},
																"nativeSrc": "14344:18:7",
																"nodeType": "YulFunctionCall",
																"src": "14344:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14336:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14336:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14410:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "14410:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14423:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14423:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14434:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14434:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14419:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14419:3:7"
																		},
																		"nativeSrc": "14419:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14419:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "14372:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "14372:37:7"
																},
																"nativeSrc": "14372:65:7",
																"nodeType": "YulFunctionCall",
																"src": "14372:65:7"
															},
															"nativeSrc": "14372:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "14372:65:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14491:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "14491:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14504:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14504:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14515:2:7",
																				"nodeType": "YulLiteral",
																				"src": "14515:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14500:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14500:3:7"
																		},
																		"nativeSrc": "14500:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14500:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14447:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "14447:43:7"
																},
																"nativeSrc": "14447:72:7",
																"nodeType": "YulFunctionCall",
																"src": "14447:72:7"
															},
															"nativeSrc": "14447:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "14447:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed",
												"nativeSrc": "14206:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14290:9:7",
														"nodeType": "YulTypedName",
														"src": "14290:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14302:6:7",
														"nodeType": "YulTypedName",
														"src": "14302:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14310:6:7",
														"nodeType": "YulTypedName",
														"src": "14310:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14321:4:7",
														"nodeType": "YulTypedName",
														"src": "14321:4:7",
														"type": ""
													}
												],
												"src": "14206:320:7"
											},
											{
												"body": {
													"nativeSrc": "14638:76:7",
													"nodeType": "YulBlock",
													"src": "14638:76:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14660:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "14660:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14668:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14668:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14656:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14656:3:7"
																		},
																		"nativeSrc": "14656:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14656:14:7"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "14672:34:7",
																		"nodeType": "YulLiteral",
																		"src": "14672:34:7",
																		"type": "",
																		"value": "Amount must be greater than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14649:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14649:6:7"
																},
																"nativeSrc": "14649:58:7",
																"nodeType": "YulFunctionCall",
																"src": "14649:58:7"
															},
															"nativeSrc": "14649:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "14649:58:7"
														}
													]
												},
												"name": "store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
												"nativeSrc": "14532:182:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14630:6:7",
														"nodeType": "YulTypedName",
														"src": "14630:6:7",
														"type": ""
													}
												],
												"src": "14532:182:7"
											},
											{
												"body": {
													"nativeSrc": "14866:220:7",
													"nodeType": "YulBlock",
													"src": "14866:220:7",
													"statements": [
														{
															"nativeSrc": "14876:74:7",
															"nodeType": "YulAssignment",
															"src": "14876:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14942:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14942:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14947:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14947:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14883:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "14883:58:7"
																},
																"nativeSrc": "14883:67:7",
																"nodeType": "YulFunctionCall",
																"src": "14883:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14876:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14876:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15048:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15048:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																	"nativeSrc": "14959:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "14959:88:7"
																},
																"nativeSrc": "14959:93:7",
																"nodeType": "YulFunctionCall",
																"src": "14959:93:7"
															},
															"nativeSrc": "14959:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "14959:93:7"
														},
														{
															"nativeSrc": "15061:19:7",
															"nodeType": "YulAssignment",
															"src": "15061:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15072:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15072:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15077:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15077:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15068:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15068:3:7"
																},
																"nativeSrc": "15068:12:7",
																"nodeType": "YulFunctionCall",
																"src": "15068:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15061:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15061:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14720:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14854:3:7",
														"nodeType": "YulTypedName",
														"src": "14854:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14862:3:7",
														"nodeType": "YulTypedName",
														"src": "14862:3:7",
														"type": ""
													}
												],
												"src": "14720:366:7"
											},
											{
												"body": {
													"nativeSrc": "15263:248:7",
													"nodeType": "YulBlock",
													"src": "15263:248:7",
													"statements": [
														{
															"nativeSrc": "15273:26:7",
															"nodeType": "YulAssignment",
															"src": "15273:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15285:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "15285:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15296:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15296:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15281:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15281:3:7"
																},
																"nativeSrc": "15281:18:7",
																"nodeType": "YulFunctionCall",
																"src": "15281:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15273:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15273:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15320:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15320:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15331:1:7",
																				"nodeType": "YulLiteral",
																				"src": "15331:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15316:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15316:3:7"
																		},
																		"nativeSrc": "15316:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15316:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15339:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "15339:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15345:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15345:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15335:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15335:3:7"
																		},
																		"nativeSrc": "15335:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15335:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15309:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15309:6:7"
																},
																"nativeSrc": "15309:47:7",
																"nodeType": "YulFunctionCall",
																"src": "15309:47:7"
															},
															"nativeSrc": "15309:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "15309:47:7"
														},
														{
															"nativeSrc": "15365:139:7",
															"nodeType": "YulAssignment",
															"src": "15365:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15499:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "15499:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15373:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "15373:124:7"
																},
																"nativeSrc": "15373:131:7",
																"nodeType": "YulFunctionCall",
																"src": "15373:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15365:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15365:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15092:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15243:9:7",
														"nodeType": "YulTypedName",
														"src": "15243:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15258:4:7",
														"nodeType": "YulTypedName",
														"src": "15258:4:7",
														"type": ""
													}
												],
												"src": "15092:419:7"
											},
											{
												"body": {
													"nativeSrc": "15582:53:7",
													"nodeType": "YulBlock",
													"src": "15582:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15599:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15599:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15622:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "15622:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "15604:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "15604:17:7"
																		},
																		"nativeSrc": "15604:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15604:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15592:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15592:6:7"
																},
																"nativeSrc": "15592:37:7",
																"nodeType": "YulFunctionCall",
																"src": "15592:37:7"
															},
															"nativeSrc": "15592:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "15592:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "15517:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15570:5:7",
														"nodeType": "YulTypedName",
														"src": "15570:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "15577:3:7",
														"nodeType": "YulTypedName",
														"src": "15577:3:7",
														"type": ""
													}
												],
												"src": "15517:118:7"
											},
											{
												"body": {
													"nativeSrc": "15739:124:7",
													"nodeType": "YulBlock",
													"src": "15739:124:7",
													"statements": [
														{
															"nativeSrc": "15749:26:7",
															"nodeType": "YulAssignment",
															"src": "15749:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15761:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "15761:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15772:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15772:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15757:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15757:3:7"
																},
																"nativeSrc": "15757:18:7",
																"nodeType": "YulFunctionCall",
																"src": "15757:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15749:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15749:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15829:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "15829:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15842:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15842:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15853:1:7",
																				"nodeType": "YulLiteral",
																				"src": "15853:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15838:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15838:3:7"
																		},
																		"nativeSrc": "15838:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15838:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15785:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "15785:43:7"
																},
																"nativeSrc": "15785:71:7",
																"nodeType": "YulFunctionCall",
																"src": "15785:71:7"
															},
															"nativeSrc": "15785:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "15785:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "15641:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15711:9:7",
														"nodeType": "YulTypedName",
														"src": "15711:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15723:6:7",
														"nodeType": "YulTypedName",
														"src": "15723:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15734:4:7",
														"nodeType": "YulTypedName",
														"src": "15734:4:7",
														"type": ""
													}
												],
												"src": "15641:222:7"
											},
											{
												"body": {
													"nativeSrc": "15932:80:7",
													"nodeType": "YulBlock",
													"src": "15932:80:7",
													"statements": [
														{
															"nativeSrc": "15942:22:7",
															"nodeType": "YulAssignment",
															"src": "15942:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "15957:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "15957:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15951:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "15951:5:7"
																},
																"nativeSrc": "15951:13:7",
																"nodeType": "YulFunctionCall",
																"src": "15951:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "15942:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "15942:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16000:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "16000:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "15973:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "15973:26:7"
																},
																"nativeSrc": "15973:33:7",
																"nodeType": "YulFunctionCall",
																"src": "15973:33:7"
															},
															"nativeSrc": "15973:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "15973:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "15869:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "15910:6:7",
														"nodeType": "YulTypedName",
														"src": "15910:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15918:3:7",
														"nodeType": "YulTypedName",
														"src": "15918:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "15926:5:7",
														"nodeType": "YulTypedName",
														"src": "15926:5:7",
														"type": ""
													}
												],
												"src": "15869:143:7"
											},
											{
												"body": {
													"nativeSrc": "16095:274:7",
													"nodeType": "YulBlock",
													"src": "16095:274:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "16141:83:7",
																"nodeType": "YulBlock",
																"src": "16141:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "16143:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "16143:77:7"
																			},
																			"nativeSrc": "16143:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "16143:79:7"
																		},
																		"nativeSrc": "16143:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "16143:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16116:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "16116:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16125:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16125:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16112:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16112:3:7"
																		},
																		"nativeSrc": "16112:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16112:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16137:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16137:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "16108:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16108:3:7"
																},
																"nativeSrc": "16108:32:7",
																"nodeType": "YulFunctionCall",
																"src": "16108:32:7"
															},
															"nativeSrc": "16105:119:7",
															"nodeType": "YulIf",
															"src": "16105:119:7"
														},
														{
															"nativeSrc": "16234:128:7",
															"nodeType": "YulBlock",
															"src": "16234:128:7",
															"statements": [
																{
																	"nativeSrc": "16249:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16249:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16263:1:7",
																		"nodeType": "YulLiteral",
																		"src": "16263:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16253:6:7",
																			"nodeType": "YulTypedName",
																			"src": "16253:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16278:74:7",
																	"nodeType": "YulAssignment",
																	"src": "16278:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16324:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "16324:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16335:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "16335:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16320:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "16320:3:7"
																				},
																				"nativeSrc": "16320:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "16320:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16344:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "16344:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "16288:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "16288:31:7"
																		},
																		"nativeSrc": "16288:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16288:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "16278:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "16278:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "16018:351:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16065:9:7",
														"nodeType": "YulTypedName",
														"src": "16065:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "16076:7:7",
														"nodeType": "YulTypedName",
														"src": "16076:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "16088:6:7",
														"nodeType": "YulTypedName",
														"src": "16088:6:7",
														"type": ""
													}
												],
												"src": "16018:351:7"
											},
											{
												"body": {
													"nativeSrc": "16481:73:7",
													"nodeType": "YulBlock",
													"src": "16481:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16503:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "16503:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16511:1:7",
																				"nodeType": "YulLiteral",
																				"src": "16511:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16499:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16499:3:7"
																		},
																		"nativeSrc": "16499:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16499:14:7"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420636f6e74726163742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "16515:31:7",
																		"nodeType": "YulLiteral",
																		"src": "16515:31:7",
																		"type": "",
																		"value": "Insufficient contract balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16492:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16492:6:7"
																},
																"nativeSrc": "16492:55:7",
																"nodeType": "YulFunctionCall",
																"src": "16492:55:7"
															},
															"nativeSrc": "16492:55:7",
															"nodeType": "YulExpressionStatement",
															"src": "16492:55:7"
														}
													]
												},
												"name": "store_literal_in_memory_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
												"nativeSrc": "16375:179:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16473:6:7",
														"nodeType": "YulTypedName",
														"src": "16473:6:7",
														"type": ""
													}
												],
												"src": "16375:179:7"
											},
											{
												"body": {
													"nativeSrc": "16706:220:7",
													"nodeType": "YulBlock",
													"src": "16706:220:7",
													"statements": [
														{
															"nativeSrc": "16716:74:7",
															"nodeType": "YulAssignment",
															"src": "16716:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16782:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16782:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16787:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16787:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16723:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "16723:58:7"
																},
																"nativeSrc": "16723:67:7",
																"nodeType": "YulFunctionCall",
																"src": "16723:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16716:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16716:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16888:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16888:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
																	"nativeSrc": "16799:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "16799:88:7"
																},
																"nativeSrc": "16799:93:7",
																"nodeType": "YulFunctionCall",
																"src": "16799:93:7"
															},
															"nativeSrc": "16799:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "16799:93:7"
														},
														{
															"nativeSrc": "16901:19:7",
															"nodeType": "YulAssignment",
															"src": "16901:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16912:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16912:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16917:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16917:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16908:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16908:3:7"
																},
																"nativeSrc": "16908:12:7",
																"nodeType": "YulFunctionCall",
																"src": "16908:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16901:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16901:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16560:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16694:3:7",
														"nodeType": "YulTypedName",
														"src": "16694:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16702:3:7",
														"nodeType": "YulTypedName",
														"src": "16702:3:7",
														"type": ""
													}
												],
												"src": "16560:366:7"
											},
											{
												"body": {
													"nativeSrc": "17103:248:7",
													"nodeType": "YulBlock",
													"src": "17103:248:7",
													"statements": [
														{
															"nativeSrc": "17113:26:7",
															"nodeType": "YulAssignment",
															"src": "17113:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17125:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "17125:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17136:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17136:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17121:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17121:3:7"
																},
																"nativeSrc": "17121:18:7",
																"nodeType": "YulFunctionCall",
																"src": "17121:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17113:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "17113:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17160:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "17160:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17171:1:7",
																				"nodeType": "YulLiteral",
																				"src": "17171:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17156:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17156:3:7"
																		},
																		"nativeSrc": "17156:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17156:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17179:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "17179:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17185:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "17185:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17175:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17175:3:7"
																		},
																		"nativeSrc": "17175:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17175:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17149:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17149:6:7"
																},
																"nativeSrc": "17149:47:7",
																"nodeType": "YulFunctionCall",
																"src": "17149:47:7"
															},
															"nativeSrc": "17149:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "17149:47:7"
														},
														{
															"nativeSrc": "17205:139:7",
															"nodeType": "YulAssignment",
															"src": "17205:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17339:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "17339:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17213:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "17213:124:7"
																},
																"nativeSrc": "17213:131:7",
																"nodeType": "YulFunctionCall",
																"src": "17213:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17205:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "17205:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16932:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17083:9:7",
														"nodeType": "YulTypedName",
														"src": "17083:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17098:4:7",
														"nodeType": "YulTypedName",
														"src": "17098:4:7",
														"type": ""
													}
												],
												"src": "16932:419:7"
											},
											{
												"body": {
													"nativeSrc": "17411:87:7",
													"nodeType": "YulBlock",
													"src": "17411:87:7",
													"statements": [
														{
															"nativeSrc": "17421:11:7",
															"nodeType": "YulAssignment",
															"src": "17421:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "17429:3:7",
																"nodeType": "YulIdentifier",
																"src": "17429:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "17421:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "17421:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17449:1:7",
																		"nodeType": "YulLiteral",
																		"src": "17449:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "17452:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "17452:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17442:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17442:6:7"
																},
																"nativeSrc": "17442:14:7",
																"nodeType": "YulFunctionCall",
																"src": "17442:14:7"
															},
															"nativeSrc": "17442:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "17442:14:7"
														},
														{
															"nativeSrc": "17465:26:7",
															"nodeType": "YulAssignment",
															"src": "17465:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17483:1:7",
																		"nodeType": "YulLiteral",
																		"src": "17483:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17486:4:7",
																		"nodeType": "YulLiteral",
																		"src": "17486:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "17473:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "17473:9:7"
																},
																"nativeSrc": "17473:18:7",
																"nodeType": "YulFunctionCall",
																"src": "17473:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "17465:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "17465:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "17357:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "17398:3:7",
														"nodeType": "YulTypedName",
														"src": "17398:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "17406:4:7",
														"nodeType": "YulTypedName",
														"src": "17406:4:7",
														"type": ""
													}
												],
												"src": "17357:141:7"
											},
											{
												"body": {
													"nativeSrc": "17548:49:7",
													"nodeType": "YulBlock",
													"src": "17548:49:7",
													"statements": [
														{
															"nativeSrc": "17558:33:7",
															"nodeType": "YulAssignment",
															"src": "17558:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "17576:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "17576:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17583:2:7",
																				"nodeType": "YulLiteral",
																				"src": "17583:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17572:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17572:3:7"
																		},
																		"nativeSrc": "17572:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17572:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17588:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17588:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "17568:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17568:3:7"
																},
																"nativeSrc": "17568:23:7",
																"nodeType": "YulFunctionCall",
																"src": "17568:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "17558:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17558:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "17504:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17531:5:7",
														"nodeType": "YulTypedName",
														"src": "17531:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "17541:6:7",
														"nodeType": "YulTypedName",
														"src": "17541:6:7",
														"type": ""
													}
												],
												"src": "17504:93:7"
											},
											{
												"body": {
													"nativeSrc": "17656:54:7",
													"nodeType": "YulBlock",
													"src": "17656:54:7",
													"statements": [
														{
															"nativeSrc": "17666:37:7",
															"nodeType": "YulAssignment",
															"src": "17666:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "17691:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "17691:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "17697:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "17697:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "17687:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17687:3:7"
																},
																"nativeSrc": "17687:16:7",
																"nodeType": "YulFunctionCall",
																"src": "17687:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "17666:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "17666:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "17603:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "17631:4:7",
														"nodeType": "YulTypedName",
														"src": "17631:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "17637:5:7",
														"nodeType": "YulTypedName",
														"src": "17637:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "17647:8:7",
														"nodeType": "YulTypedName",
														"src": "17647:8:7",
														"type": ""
													}
												],
												"src": "17603:107:7"
											},
											{
												"body": {
													"nativeSrc": "17792:317:7",
													"nodeType": "YulBlock",
													"src": "17792:317:7",
													"statements": [
														{
															"nativeSrc": "17802:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "17802:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "17823:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "17823:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17835:1:7",
																		"nodeType": "YulLiteral",
																		"src": "17835:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "17819:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17819:3:7"
																},
																"nativeSrc": "17819:18:7",
																"nodeType": "YulFunctionCall",
																"src": "17819:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "17806:9:7",
																	"nodeType": "YulTypedName",
																	"src": "17806:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17846:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "17846:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "17877:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "17877:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17888:66:7",
																		"nodeType": "YulLiteral",
																		"src": "17888:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "17858:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "17858:18:7"
																},
																"nativeSrc": "17858:97:7",
																"nodeType": "YulFunctionCall",
																"src": "17858:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "17850:4:7",
																	"nodeType": "YulTypedName",
																	"src": "17850:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17964:51:7",
															"nodeType": "YulAssignment",
															"src": "17964:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "17995:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "17995:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "18006:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "18006:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "17976:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "17976:18:7"
																},
																"nativeSrc": "17976:39:7",
																"nodeType": "YulFunctionCall",
																"src": "17976:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "17964:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "17964:8:7"
																}
															]
														},
														{
															"nativeSrc": "18024:30:7",
															"nodeType": "YulAssignment",
															"src": "18024:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18037:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "18037:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "18048:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "18048:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "18044:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18044:3:7"
																		},
																		"nativeSrc": "18044:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18044:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "18033:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18033:3:7"
																},
																"nativeSrc": "18033:21:7",
																"nodeType": "YulFunctionCall",
																"src": "18033:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "18024:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "18024:5:7"
																}
															]
														},
														{
															"nativeSrc": "18063:40:7",
															"nodeType": "YulAssignment",
															"src": "18063:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18076:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "18076:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "18087:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "18087:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "18097:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "18097:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "18083:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18083:3:7"
																		},
																		"nativeSrc": "18083:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18083:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "18073:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "18073:2:7"
																},
																"nativeSrc": "18073:30:7",
																"nodeType": "YulFunctionCall",
																"src": "18073:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "18063:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18063:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "17716:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17753:5:7",
														"nodeType": "YulTypedName",
														"src": "17753:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "17760:10:7",
														"nodeType": "YulTypedName",
														"src": "17760:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "17772:8:7",
														"nodeType": "YulTypedName",
														"src": "17772:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "17785:6:7",
														"nodeType": "YulTypedName",
														"src": "17785:6:7",
														"type": ""
													}
												],
												"src": "17716:393:7"
											},
											{
												"body": {
													"nativeSrc": "18175:82:7",
													"nodeType": "YulBlock",
													"src": "18175:82:7",
													"statements": [
														{
															"nativeSrc": "18185:66:7",
															"nodeType": "YulAssignment",
															"src": "18185:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "18243:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "18243:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "18225:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "18225:17:7"
																				},
																				"nativeSrc": "18225:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "18225:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "18216:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "18216:8:7"
																		},
																		"nativeSrc": "18216:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18216:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18198:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "18198:17:7"
																},
																"nativeSrc": "18198:53:7",
																"nodeType": "YulFunctionCall",
																"src": "18198:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "18185:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "18185:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "18115:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18155:5:7",
														"nodeType": "YulTypedName",
														"src": "18155:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "18165:9:7",
														"nodeType": "YulTypedName",
														"src": "18165:9:7",
														"type": ""
													}
												],
												"src": "18115:142:7"
											},
											{
												"body": {
													"nativeSrc": "18310:28:7",
													"nodeType": "YulBlock",
													"src": "18310:28:7",
													"statements": [
														{
															"nativeSrc": "18320:12:7",
															"nodeType": "YulAssignment",
															"src": "18320:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "18327:5:7",
																"nodeType": "YulIdentifier",
																"src": "18327:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "18320:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18320:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "18263:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18296:5:7",
														"nodeType": "YulTypedName",
														"src": "18296:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "18306:3:7",
														"nodeType": "YulTypedName",
														"src": "18306:3:7",
														"type": ""
													}
												],
												"src": "18263:75:7"
											},
											{
												"body": {
													"nativeSrc": "18420:193:7",
													"nodeType": "YulBlock",
													"src": "18420:193:7",
													"statements": [
														{
															"nativeSrc": "18430:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "18430:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "18485:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "18485:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "18454:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "18454:30:7"
																},
																"nativeSrc": "18454:39:7",
																"nodeType": "YulFunctionCall",
																"src": "18454:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "18434:16:7",
																	"nodeType": "YulTypedName",
																	"src": "18434:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "18509:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "18509:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "18549:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "18549:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "18543:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "18543:5:7"
																				},
																				"nativeSrc": "18543:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "18543:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "18556:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "18556:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "18588:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "18588:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "18564:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "18564:23:7"
																				},
																				"nativeSrc": "18564:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "18564:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "18515:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "18515:27:7"
																		},
																		"nativeSrc": "18515:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18515:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "18502:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18502:6:7"
																},
																"nativeSrc": "18502:105:7",
																"nodeType": "YulFunctionCall",
																"src": "18502:105:7"
															},
															"nativeSrc": "18502:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "18502:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "18344:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "18397:4:7",
														"nodeType": "YulTypedName",
														"src": "18397:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "18403:6:7",
														"nodeType": "YulTypedName",
														"src": "18403:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "18411:7:7",
														"nodeType": "YulTypedName",
														"src": "18411:7:7",
														"type": ""
													}
												],
												"src": "18344:269:7"
											},
											{
												"body": {
													"nativeSrc": "18668:24:7",
													"nodeType": "YulBlock",
													"src": "18668:24:7",
													"statements": [
														{
															"nativeSrc": "18678:8:7",
															"nodeType": "YulAssignment",
															"src": "18678:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "18685:1:7",
																"nodeType": "YulLiteral",
																"src": "18685:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "18678:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18678:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "18619:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "18664:3:7",
														"nodeType": "YulTypedName",
														"src": "18664:3:7",
														"type": ""
													}
												],
												"src": "18619:73:7"
											},
											{
												"body": {
													"nativeSrc": "18751:136:7",
													"nodeType": "YulBlock",
													"src": "18751:136:7",
													"statements": [
														{
															"nativeSrc": "18761:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "18761:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "18775:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "18775:30:7"
																},
																"nativeSrc": "18775:32:7",
																"nodeType": "YulFunctionCall",
																"src": "18775:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "18765:6:7",
																	"nodeType": "YulTypedName",
																	"src": "18765:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "18860:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "18860:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "18866:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "18866:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "18874:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "18874:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "18816:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "18816:43:7"
																},
																"nativeSrc": "18816:65:7",
																"nodeType": "YulFunctionCall",
																"src": "18816:65:7"
															},
															"nativeSrc": "18816:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "18816:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "18698:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "18737:4:7",
														"nodeType": "YulTypedName",
														"src": "18737:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "18743:6:7",
														"nodeType": "YulTypedName",
														"src": "18743:6:7",
														"type": ""
													}
												],
												"src": "18698:189:7"
											},
											{
												"body": {
													"nativeSrc": "18943:136:7",
													"nodeType": "YulBlock",
													"src": "18943:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "19010:63:7",
																"nodeType": "YulBlock",
																"src": "19010:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "19054:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "19054:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "19061:1:7",
																					"nodeType": "YulLiteral",
																					"src": "19061:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "19024:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "19024:29:7"
																			},
																			"nativeSrc": "19024:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "19024:39:7"
																		},
																		"nativeSrc": "19024:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "19024:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "18963:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "18963:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "18970:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "18970:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "18960:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "18960:2:7"
																},
																"nativeSrc": "18960:14:7",
																"nodeType": "YulFunctionCall",
																"src": "18960:14:7"
															},
															"nativeSrc": "18953:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "18975:26:7",
																"nodeType": "YulBlock",
																"src": "18975:26:7",
																"statements": [
																	{
																		"nativeSrc": "18977:22:7",
																		"nodeType": "YulAssignment",
																		"src": "18977:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "18990:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "18990:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18997:1:7",
																					"nodeType": "YulLiteral",
																					"src": "18997:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "18986:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "18986:3:7"
																			},
																			"nativeSrc": "18986:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "18986:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "18977:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "18977:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "18957:2:7",
																"nodeType": "YulBlock",
																"src": "18957:2:7",
																"statements": []
															},
															"src": "18953:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "18893:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "18931:5:7",
														"nodeType": "YulTypedName",
														"src": "18931:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "18938:3:7",
														"nodeType": "YulTypedName",
														"src": "18938:3:7",
														"type": ""
													}
												],
												"src": "18893:186:7"
											},
											{
												"body": {
													"nativeSrc": "19164:464:7",
													"nodeType": "YulBlock",
													"src": "19164:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "19190:431:7",
																"nodeType": "YulBlock",
																"src": "19190:431:7",
																"statements": [
																	{
																		"nativeSrc": "19204:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "19204:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "19252:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "19252:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "19220:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "19220:31:7"
																			},
																			"nativeSrc": "19220:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "19220:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "19208:8:7",
																				"nodeType": "YulTypedName",
																				"src": "19208:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "19271:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "19271:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "19294:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "19294:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "19322:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "19322:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "19304:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "19304:17:7"
																					},
																					"nativeSrc": "19304:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "19304:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "19290:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "19290:3:7"
																			},
																			"nativeSrc": "19290:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "19290:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "19275:11:7",
																				"nodeType": "YulTypedName",
																				"src": "19275:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "19491:27:7",
																			"nodeType": "YulBlock",
																			"src": "19491:27:7",
																			"statements": [
																				{
																					"nativeSrc": "19493:23:7",
																					"nodeType": "YulAssignment",
																					"src": "19493:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "19508:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "19508:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "19493:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "19493:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "19475:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "19475:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "19487:2:7",
																					"nodeType": "YulLiteral",
																					"src": "19487:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "19472:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "19472:2:7"
																			},
																			"nativeSrc": "19472:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "19472:18:7"
																		},
																		"nativeSrc": "19469:49:7",
																		"nodeType": "YulIf",
																		"src": "19469:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "19560:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "19560:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "19577:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "19577:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "19605:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "19605:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "19587:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "19587:17:7"
																							},
																							"nativeSrc": "19587:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "19587:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "19573:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "19573:3:7"
																					},
																					"nativeSrc": "19573:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "19573:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "19531:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "19531:28:7"
																			},
																			"nativeSrc": "19531:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "19531:80:7"
																		},
																		"nativeSrc": "19531:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "19531:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "19181:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "19181:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19186:2:7",
																		"nodeType": "YulLiteral",
																		"src": "19186:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "19178:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "19178:2:7"
																},
																"nativeSrc": "19178:11:7",
																"nodeType": "YulFunctionCall",
																"src": "19178:11:7"
															},
															"nativeSrc": "19175:446:7",
															"nodeType": "YulIf",
															"src": "19175:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "19085:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "19140:5:7",
														"nodeType": "YulTypedName",
														"src": "19140:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "19147:3:7",
														"nodeType": "YulTypedName",
														"src": "19147:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "19152:10:7",
														"nodeType": "YulTypedName",
														"src": "19152:10:7",
														"type": ""
													}
												],
												"src": "19085:543:7"
											},
											{
												"body": {
													"nativeSrc": "19697:54:7",
													"nodeType": "YulBlock",
													"src": "19697:54:7",
													"statements": [
														{
															"nativeSrc": "19707:37:7",
															"nodeType": "YulAssignment",
															"src": "19707:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "19732:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "19732:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "19738:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "19738:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "19728:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19728:3:7"
																},
																"nativeSrc": "19728:16:7",
																"nodeType": "YulFunctionCall",
																"src": "19728:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "19707:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "19707:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "19634:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "19672:4:7",
														"nodeType": "YulTypedName",
														"src": "19672:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "19678:5:7",
														"nodeType": "YulTypedName",
														"src": "19678:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "19688:8:7",
														"nodeType": "YulTypedName",
														"src": "19688:8:7",
														"type": ""
													}
												],
												"src": "19634:117:7"
											},
											{
												"body": {
													"nativeSrc": "19808:118:7",
													"nodeType": "YulBlock",
													"src": "19808:118:7",
													"statements": [
														{
															"nativeSrc": "19818:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "19818:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "19867:1:7",
																						"nodeType": "YulLiteral",
																						"src": "19867:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "19870:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "19870:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "19863:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "19863:3:7"
																				},
																				"nativeSrc": "19863:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "19863:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "19882:1:7",
																						"nodeType": "YulLiteral",
																						"src": "19882:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "19878:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "19878:3:7"
																				},
																				"nativeSrc": "19878:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "19878:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "19834:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "19834:28:7"
																		},
																		"nativeSrc": "19834:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19834:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "19830:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19830:3:7"
																},
																"nativeSrc": "19830:56:7",
																"nodeType": "YulFunctionCall",
																"src": "19830:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "19822:4:7",
																	"nodeType": "YulTypedName",
																	"src": "19822:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19895:25:7",
															"nodeType": "YulAssignment",
															"src": "19895:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "19909:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "19909:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "19915:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "19915:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "19905:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19905:3:7"
																},
																"nativeSrc": "19905:15:7",
																"nodeType": "YulFunctionCall",
																"src": "19905:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "19895:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "19895:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "19757:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "19785:4:7",
														"nodeType": "YulTypedName",
														"src": "19785:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "19791:5:7",
														"nodeType": "YulTypedName",
														"src": "19791:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "19801:6:7",
														"nodeType": "YulTypedName",
														"src": "19801:6:7",
														"type": ""
													}
												],
												"src": "19757:169:7"
											},
											{
												"body": {
													"nativeSrc": "20012:214:7",
													"nodeType": "YulBlock",
													"src": "20012:214:7",
													"statements": [
														{
															"nativeSrc": "20145:37:7",
															"nodeType": "YulAssignment",
															"src": "20145:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "20172:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "20172:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "20178:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "20178:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "20153:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "20153:18:7"
																},
																"nativeSrc": "20153:29:7",
																"nodeType": "YulFunctionCall",
																"src": "20153:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "20145:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "20145:4:7"
																}
															]
														},
														{
															"nativeSrc": "20191:29:7",
															"nodeType": "YulAssignment",
															"src": "20191:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "20202:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "20202:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "20212:1:7",
																				"nodeType": "YulLiteral",
																				"src": "20212:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "20215:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "20215:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "20208:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "20208:3:7"
																		},
																		"nativeSrc": "20208:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "20208:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "20199:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "20199:2:7"
																},
																"nativeSrc": "20199:21:7",
																"nodeType": "YulFunctionCall",
																"src": "20199:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "20191:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "20191:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "19931:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "19993:4:7",
														"nodeType": "YulTypedName",
														"src": "19993:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "19999:3:7",
														"nodeType": "YulTypedName",
														"src": "19999:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "20007:4:7",
														"nodeType": "YulTypedName",
														"src": "20007:4:7",
														"type": ""
													}
												],
												"src": "19931:295:7"
											},
											{
												"body": {
													"nativeSrc": "20323:1303:7",
													"nodeType": "YulBlock",
													"src": "20323:1303:7",
													"statements": [
														{
															"nativeSrc": "20334:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "20334:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "20381:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "20381:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "20348:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "20348:32:7"
																},
																"nativeSrc": "20348:37:7",
																"nodeType": "YulFunctionCall",
																"src": "20348:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "20338:6:7",
																	"nodeType": "YulTypedName",
																	"src": "20338:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "20470:22:7",
																"nodeType": "YulBlock",
																"src": "20470:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "20472:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "20472:16:7"
																			},
																			"nativeSrc": "20472:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "20472:18:7"
																		},
																		"nativeSrc": "20472:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "20472:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "20442:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "20442:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20450:18:7",
																		"nodeType": "YulLiteral",
																		"src": "20450:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "20439:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "20439:2:7"
																},
																"nativeSrc": "20439:30:7",
																"nodeType": "YulFunctionCall",
																"src": "20439:30:7"
															},
															"nativeSrc": "20436:56:7",
															"nodeType": "YulIf",
															"src": "20436:56:7"
														},
														{
															"nativeSrc": "20502:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "20502:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "20548:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "20548:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "20542:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "20542:5:7"
																		},
																		"nativeSrc": "20542:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "20542:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "20516:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "20516:25:7"
																},
																"nativeSrc": "20516:38:7",
																"nodeType": "YulFunctionCall",
																"src": "20516:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "20506:6:7",
																	"nodeType": "YulTypedName",
																	"src": "20506:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "20647:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "20647:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "20653:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "20653:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "20661:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "20661:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "20601:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "20601:45:7"
																},
																"nativeSrc": "20601:67:7",
																"nodeType": "YulFunctionCall",
																"src": "20601:67:7"
															},
															"nativeSrc": "20601:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "20601:67:7"
														},
														{
															"nativeSrc": "20678:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "20678:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "20695:1:7",
																"nodeType": "YulLiteral",
																"src": "20695:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "20682:9:7",
																	"nodeType": "YulTypedName",
																	"src": "20682:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "20706:17:7",
															"nodeType": "YulAssignment",
															"src": "20706:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "20719:4:7",
																"nodeType": "YulLiteral",
																"src": "20719:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "20706:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "20706:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "20770:611:7",
																		"nodeType": "YulBlock",
																		"src": "20770:611:7",
																		"statements": [
																			{
																				"nativeSrc": "20784:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "20784:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "20803:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "20803:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "20815:4:7",
																									"nodeType": "YulLiteral",
																									"src": "20815:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "20811:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "20811:3:7"
																							},
																							"nativeSrc": "20811:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "20811:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "20799:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "20799:3:7"
																					},
																					"nativeSrc": "20799:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "20799:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "20788:7:7",
																						"nodeType": "YulTypedName",
																						"src": "20788:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "20835:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "20835:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "20881:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "20881:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "20849:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "20849:31:7"
																					},
																					"nativeSrc": "20849:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "20849:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "20839:6:7",
																						"nodeType": "YulTypedName",
																						"src": "20839:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "20899:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "20899:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "20908:1:7",
																					"nodeType": "YulLiteral",
																					"src": "20908:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "20903:1:7",
																						"nodeType": "YulTypedName",
																						"src": "20903:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "20967:163:7",
																					"nodeType": "YulBlock",
																					"src": "20967:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "20992:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "20992:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "21010:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "21010:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "21015:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "21015:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "21006:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "21006:3:7"
																												},
																												"nativeSrc": "21006:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "21006:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "21000:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "21000:5:7"
																										},
																										"nativeSrc": "21000:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "21000:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "20985:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "20985:6:7"
																								},
																								"nativeSrc": "20985:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "20985:42:7"
																							},
																							"nativeSrc": "20985:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "20985:42:7"
																						},
																						{
																							"nativeSrc": "21044:24:7",
																							"nodeType": "YulAssignment",
																							"src": "21044:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "21058:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "21058:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "21066:1:7",
																										"nodeType": "YulLiteral",
																										"src": "21066:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "21054:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "21054:3:7"
																								},
																								"nativeSrc": "21054:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "21054:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "21044:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "21044:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "21085:31:7",
																							"nodeType": "YulAssignment",
																							"src": "21085:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "21102:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "21102:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "21113:2:7",
																										"nodeType": "YulLiteral",
																										"src": "21113:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "21098:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "21098:3:7"
																								},
																								"nativeSrc": "21098:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "21098:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "21085:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "21085:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "20933:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "20933:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "20936:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "20936:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "20930:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "20930:2:7"
																					},
																					"nativeSrc": "20930:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "20930:14:7"
																				},
																				"nativeSrc": "20922:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "20945:21:7",
																					"nodeType": "YulBlock",
																					"src": "20945:21:7",
																					"statements": [
																						{
																							"nativeSrc": "20947:17:7",
																							"nodeType": "YulAssignment",
																							"src": "20947:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "20956:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "20956:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "20959:4:7",
																										"nodeType": "YulLiteral",
																										"src": "20959:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "20952:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "20952:3:7"
																								},
																								"nativeSrc": "20952:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "20952:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "20947:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "20947:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "20926:3:7",
																					"nodeType": "YulBlock",
																					"src": "20926:3:7",
																					"statements": []
																				},
																				"src": "20922:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "21166:156:7",
																					"nodeType": "YulBlock",
																					"src": "21166:156:7",
																					"statements": [
																						{
																							"nativeSrc": "21184:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "21184:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "21211:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "21211:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "21216:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "21216:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "21207:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "21207:3:7"
																										},
																										"nativeSrc": "21207:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "21207:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "21201:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "21201:5:7"
																								},
																								"nativeSrc": "21201:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "21201:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "21188:9:7",
																									"nodeType": "YulTypedName",
																									"src": "21188:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "21251:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "21251:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "21278:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "21278:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "21293:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "21293:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "21301:4:7",
																														"nodeType": "YulLiteral",
																														"src": "21301:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "21289:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "21289:3:7"
																												},
																												"nativeSrc": "21289:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "21289:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "21259:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "21259:18:7"
																										},
																										"nativeSrc": "21259:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "21259:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "21244:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "21244:6:7"
																								},
																								"nativeSrc": "21244:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "21244:64:7"
																							},
																							"nativeSrc": "21244:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "21244:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "21149:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "21149:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "21158:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "21158:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "21146:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "21146:2:7"
																					},
																					"nativeSrc": "21146:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "21146:19:7"
																				},
																				"nativeSrc": "21143:179:7",
																				"nodeType": "YulIf",
																				"src": "21143:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "21342:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "21342:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "21356:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "21356:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "21364:1:7",
																											"nodeType": "YulLiteral",
																											"src": "21364:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "21352:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "21352:3:7"
																									},
																									"nativeSrc": "21352:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "21352:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "21368:1:7",
																									"nodeType": "YulLiteral",
																									"src": "21368:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "21348:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "21348:3:7"
																							},
																							"nativeSrc": "21348:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "21348:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "21335:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "21335:6:7"
																					},
																					"nativeSrc": "21335:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "21335:36:7"
																				},
																				"nativeSrc": "21335:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "21335:36:7"
																			}
																		]
																	},
																	"nativeSrc": "20763:618:7",
																	"nodeType": "YulCase",
																	"src": "20763:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "20768:1:7",
																		"nodeType": "YulLiteral",
																		"src": "20768:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "21398:222:7",
																		"nodeType": "YulBlock",
																		"src": "21398:222:7",
																		"statements": [
																			{
																				"nativeSrc": "21412:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "21412:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "21425:1:7",
																					"nodeType": "YulLiteral",
																					"src": "21425:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "21416:5:7",
																						"nodeType": "YulTypedName",
																						"src": "21416:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "21449:67:7",
																					"nodeType": "YulBlock",
																					"src": "21449:67:7",
																					"statements": [
																						{
																							"nativeSrc": "21467:35:7",
																							"nodeType": "YulAssignment",
																							"src": "21467:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "21486:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "21486:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "21491:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "21491:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "21482:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "21482:3:7"
																										},
																										"nativeSrc": "21482:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "21482:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "21476:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "21476:5:7"
																								},
																								"nativeSrc": "21476:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "21476:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "21467:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "21467:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "21442:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "21442:6:7"
																				},
																				"nativeSrc": "21439:77:7",
																				"nodeType": "YulIf",
																				"src": "21439:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "21536:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "21536:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "21595:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "21595:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "21602:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "21602:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "21542:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "21542:52:7"
																							},
																							"nativeSrc": "21542:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "21542:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "21529:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "21529:6:7"
																					},
																					"nativeSrc": "21529:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "21529:81:7"
																				},
																				"nativeSrc": "21529:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "21529:81:7"
																			}
																		]
																	},
																	"nativeSrc": "21390:230:7",
																	"nodeType": "YulCase",
																	"src": "21390:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "20743:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "20743:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20751:2:7",
																		"nodeType": "YulLiteral",
																		"src": "20751:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "20740:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "20740:2:7"
																},
																"nativeSrc": "20740:14:7",
																"nodeType": "YulFunctionCall",
																"src": "20740:14:7"
															},
															"nativeSrc": "20733:887:7",
															"nodeType": "YulSwitch",
															"src": "20733:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "20231:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "20312:4:7",
														"nodeType": "YulTypedName",
														"src": "20312:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "20318:3:7",
														"nodeType": "YulTypedName",
														"src": "20318:3:7",
														"type": ""
													}
												],
												"src": "20231:1395:7"
											},
											{
												"body": {
													"nativeSrc": "21758:206:7",
													"nodeType": "YulBlock",
													"src": "21758:206:7",
													"statements": [
														{
															"nativeSrc": "21768:26:7",
															"nodeType": "YulAssignment",
															"src": "21768:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21780:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "21780:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21791:2:7",
																		"nodeType": "YulLiteral",
																		"src": "21791:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21776:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "21776:3:7"
																},
																"nativeSrc": "21776:18:7",
																"nodeType": "YulFunctionCall",
																"src": "21776:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21768:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "21768:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21848:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "21848:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21861:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "21861:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21872:1:7",
																				"nodeType": "YulLiteral",
																				"src": "21872:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21857:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "21857:3:7"
																		},
																		"nativeSrc": "21857:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "21857:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21804:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "21804:43:7"
																},
																"nativeSrc": "21804:71:7",
																"nodeType": "YulFunctionCall",
																"src": "21804:71:7"
															},
															"nativeSrc": "21804:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "21804:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21929:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "21929:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21942:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "21942:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21953:2:7",
																				"nodeType": "YulLiteral",
																				"src": "21953:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21938:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "21938:3:7"
																		},
																		"nativeSrc": "21938:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "21938:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21885:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "21885:43:7"
																},
																"nativeSrc": "21885:72:7",
																"nodeType": "YulFunctionCall",
																"src": "21885:72:7"
															},
															"nativeSrc": "21885:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "21885:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "21632:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21722:9:7",
														"nodeType": "YulTypedName",
														"src": "21722:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21734:6:7",
														"nodeType": "YulTypedName",
														"src": "21734:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21742:6:7",
														"nodeType": "YulTypedName",
														"src": "21742:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21753:4:7",
														"nodeType": "YulTypedName",
														"src": "21753:4:7",
														"type": ""
													}
												],
												"src": "21632:332:7"
											},
											{
												"body": {
													"nativeSrc": "22096:206:7",
													"nodeType": "YulBlock",
													"src": "22096:206:7",
													"statements": [
														{
															"nativeSrc": "22106:26:7",
															"nodeType": "YulAssignment",
															"src": "22106:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22118:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "22118:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22129:2:7",
																		"nodeType": "YulLiteral",
																		"src": "22129:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22114:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "22114:3:7"
																},
																"nativeSrc": "22114:18:7",
																"nodeType": "YulFunctionCall",
																"src": "22114:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22106:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "22106:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22186:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "22186:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22199:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "22199:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22210:1:7",
																				"nodeType": "YulLiteral",
																				"src": "22210:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22195:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "22195:3:7"
																		},
																		"nativeSrc": "22195:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "22195:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22142:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "22142:43:7"
																},
																"nativeSrc": "22142:71:7",
																"nodeType": "YulFunctionCall",
																"src": "22142:71:7"
															},
															"nativeSrc": "22142:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "22142:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22267:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "22267:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22280:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "22280:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22291:2:7",
																				"nodeType": "YulLiteral",
																				"src": "22291:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22276:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "22276:3:7"
																		},
																		"nativeSrc": "22276:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "22276:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22223:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "22223:43:7"
																},
																"nativeSrc": "22223:72:7",
																"nodeType": "YulFunctionCall",
																"src": "22223:72:7"
															},
															"nativeSrc": "22223:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "22223:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "21970:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22060:9:7",
														"nodeType": "YulTypedName",
														"src": "22060:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "22072:6:7",
														"nodeType": "YulTypedName",
														"src": "22072:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22080:6:7",
														"nodeType": "YulTypedName",
														"src": "22080:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22091:4:7",
														"nodeType": "YulTypedName",
														"src": "22091:4:7",
														"type": ""
													}
												],
												"src": "21970:332:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_struct$_HealthData_$618_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_HealthData_$618_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_HealthData_$618_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    // struct PatientDataManagement.HealthData -> struct PatientDataManagement.HealthData\n    function abi_encode_t_struct$_HealthData_$618_memory_ptr_to_t_struct$_HealthData_$618_memory_ptr(value, pos)  -> end  {\n        let tail := add(pos, 0xa0)\n\n        {\n            // timestamp\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // glucoseLevel\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // medication\n\n            let memberValue0 := mload(add(value, 0x40))\n\n            mstore(add(pos, 0x40), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // meals\n\n            let memberValue0 := mload(add(value, 0x60))\n\n            mstore(add(pos, 0x60), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // exercise\n\n            let memberValue0 := mload(add(value, 0x80))\n\n            mstore(add(pos, 0x80), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        end := tail\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_HealthData_$618_memory_ptr_to_t_struct$_HealthData_$618_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_struct$_HealthData_$618_memory_ptr_to_t_struct$_HealthData_$618_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_struct$_HealthData_$618_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct PatientDataManagement.HealthData[] -> struct PatientDataManagement.HealthData[]\n    function abi_encode_t_array$_t_struct$_HealthData_$618_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_HealthData_$618_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_HealthData_$618_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_HealthData_$618_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_struct$_HealthData_$618_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_struct$_HealthData_$618_memory_ptr_to_t_struct$_HealthData_$618_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_struct$_HealthData_$618_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_HealthData_$618_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_HealthData_$618_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_HealthData_$618_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_HealthData_$618_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$167_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$167_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$167_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$167__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$167_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_35524723070ac5375c7260be238565eacc4e8a59252edddbe0aa4f3cd94db18b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Access not authorized\")\n\n    }\n\n    function abi_encode_t_stringliteral_35524723070ac5375c7260be238565eacc4e8a59252edddbe0aa4f3cd94db18b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_35524723070ac5375c7260be238565eacc4e8a59252edddbe0aa4f3cd94db18b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_35524723070ac5375c7260be238565eacc4e8a59252edddbe0aa4f3cd94db18b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_35524723070ac5375c7260be238565eacc4e8a59252edddbe0aa4f3cd94db18b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be greater than zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient contract balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061007b575f3560e01c80639e9aed62116100595780639e9aed62146100e7578063a94f576614610105578063d4ba890214610121578063f7c618c11461013f5761007b565b806305c175211461007f5780630c66f928146100af57806346e04a2f146100cb575b5f80fd5b61009960048036038101906100949190610ba4565b61015d565b6040516100a69190610d93565b60405180910390f35b6100c960048036038101906100c49190610de8565b6104b3565b005b6100e560048036038101906100e09190610e50565b610607565b005b6100ef6107bd565b6040516100fc9190610e8a565b60405180910390f35b61011f600480360381019061011a9190610fcf565b61085b565b005b6101296109f0565b6040516101369190610e8a565b60405180910390f35b6101476109fc565b60405161015491906110e2565b60405180910390f35b60603373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16148061021a575060025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b610259576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025090611155565b60405180910390fd5b60015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805480602002602001604051908101604052809291908181526020015f905b828210156104a8578382905f5260205f2090600502016040518060a00160405290815f8201548152602001600182015481526020016002820180546102f9906111a0565b80601f0160208091040260200160405190810160405280929190818152602001828054610325906111a0565b80156103705780601f1061034757610100808354040283529160200191610370565b820191905f5260205f20905b81548152906001019060200180831161035357829003601f168201915b50505050508152602001600382018054610389906111a0565b80601f01602080910402602001604051908101604052809291908181526020018280546103b5906111a0565b80156104005780601f106103d757610100808354040283529160200191610400565b820191905f5260205f20905b8154815290600101906020018083116103e357829003601f168201915b50505050508152602001600482018054610419906111a0565b80601f0160208091040260200160405190810160405280929190818152602001828054610445906111a0565b80156104905780601f1061046757610100808354040283529160200191610490565b820191905f5260205f20905b81548152906001019060200180831161047357829003601f168201915b505050505081525050815260200190600101906102b5565b505050509050919050565b8060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061059433678ac7230489e800005f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610a1f9092919063ffffffff16565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f09c705c294119a93fb8ea4861ef048d5884d9504575b35eb38c7ea7705cf28b083678ac7230489e800006040516105fb9291906111df565b60405180910390a35050565b5f8111610649576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064090611250565b60405180910390fd5b805f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016106a2919061127d565b602060405180830381865afa1580156106bd573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106e191906112aa565b1015610722576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107199061131f565b60405180910390fd5b61076c33825f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610a1f9092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e430826040516107b29190610e8a565b60405180910390a250565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610817919061127d565b602060405180830381865afa158015610832573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061085691906112aa565b905090565b5f6040518060a0016040528042815260200186815260200185815260200184815260200183815250905060015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081908060018154018082558091505060019003905f5260205f2090600502015f909190919091505f820151815f015560208201518160010155604082015181600201908161091091906114d1565b50606082015181600301908161092691906114d1565b50608082015181600401908161093c91906114d1565b50505061099133678ac7230489e800005f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610a1f9092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f46b8550ac8f5f68f14d6a3540963578c9733e4ff2a4e7ca11cccdeeb0b521d6742678ac7230489e800006040516109e19291906115a0565b60405180910390a25050505050565b678ac7230489e8000081565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610a99838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610a529291906115c7565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610a9e565b505050565b5f8060205f8451602086015f885af180610abd576040513d5f823e3d81fd5b3d92505f519150505f8214610ad6576001811415610af1565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b15610b3357836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610b2a919061127d565b60405180910390fd5b50505050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610b7382610b4a565b9050919050565b610b8381610b69565b8114610b8d575f80fd5b50565b5f81359050610b9e81610b7a565b92915050565b5f60208284031215610bb957610bb8610b42565b5b5f610bc684828501610b90565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f819050919050565b610c0a81610bf8565b82525050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610c5282610c10565b610c5c8185610c1a565b9350610c6c818560208601610c2a565b610c7581610c38565b840191505092915050565b5f60a083015f830151610c955f860182610c01565b506020830151610ca86020860182610c01565b5060408301518482036040860152610cc08282610c48565b91505060608301518482036060860152610cda8282610c48565b91505060808301518482036080860152610cf48282610c48565b9150508091505092915050565b5f610d0c8383610c80565b905092915050565b5f602082019050919050565b5f610d2a82610bcf565b610d348185610bd9565b935083602082028501610d4685610be9565b805f5b85811015610d815784840389528151610d628582610d01565b9450610d6d83610d14565b925060208a01995050600181019050610d49565b50829750879550505050505092915050565b5f6020820190508181035f830152610dab8184610d20565b905092915050565b5f8115159050919050565b610dc781610db3565b8114610dd1575f80fd5b50565b5f81359050610de281610dbe565b92915050565b5f8060408385031215610dfe57610dfd610b42565b5b5f610e0b85828601610b90565b9250506020610e1c85828601610dd4565b9150509250929050565b610e2f81610bf8565b8114610e39575f80fd5b50565b5f81359050610e4a81610e26565b92915050565b5f60208284031215610e6557610e64610b42565b5b5f610e7284828501610e3c565b91505092915050565b610e8481610bf8565b82525050565b5f602082019050610e9d5f830184610e7b565b92915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610ee182610c38565b810181811067ffffffffffffffff82111715610f0057610eff610eab565b5b80604052505050565b5f610f12610b39565b9050610f1e8282610ed8565b919050565b5f67ffffffffffffffff821115610f3d57610f3c610eab565b5b610f4682610c38565b9050602081019050919050565b828183375f83830152505050565b5f610f73610f6e84610f23565b610f09565b905082815260208101848484011115610f8f57610f8e610ea7565b5b610f9a848285610f53565b509392505050565b5f82601f830112610fb657610fb5610ea3565b5b8135610fc6848260208601610f61565b91505092915050565b5f805f8060808587031215610fe757610fe6610b42565b5b5f610ff487828801610e3c565b945050602085013567ffffffffffffffff81111561101557611014610b46565b5b61102187828801610fa2565b935050604085013567ffffffffffffffff81111561104257611041610b46565b5b61104e87828801610fa2565b925050606085013567ffffffffffffffff81111561106f5761106e610b46565b5b61107b87828801610fa2565b91505092959194509250565b5f819050919050565b5f6110aa6110a56110a084610b4a565b611087565b610b4a565b9050919050565b5f6110bb82611090565b9050919050565b5f6110cc826110b1565b9050919050565b6110dc816110c2565b82525050565b5f6020820190506110f55f8301846110d3565b92915050565b5f82825260208201905092915050565b7f416363657373206e6f7420617574686f72697a656400000000000000000000005f82015250565b5f61113f6015836110fb565b915061114a8261110b565b602082019050919050565b5f6020820190508181035f83015261116c81611133565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806111b757607f821691505b6020821081036111ca576111c9611173565b5b50919050565b6111d981610db3565b82525050565b5f6040820190506111f25f8301856111d0565b6111ff6020830184610e7b565b9392505050565b7f416d6f756e74206d7573742062652067726561746572207468616e207a65726f5f82015250565b5f61123a6020836110fb565b915061124582611206565b602082019050919050565b5f6020820190508181035f8301526112678161122e565b9050919050565b61127781610b69565b82525050565b5f6020820190506112905f83018461126e565b92915050565b5f815190506112a481610e26565b92915050565b5f602082840312156112bf576112be610b42565b5b5f6112cc84828501611296565b91505092915050565b7f496e73756666696369656e7420636f6e74726163742062616c616e63650000005f82015250565b5f611309601d836110fb565b9150611314826112d5565b602082019050919050565b5f6020820190508181035f830152611336816112fd565b9050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026113997fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261135e565b6113a3868361135e565b95508019841693508086168417925050509392505050565b5f6113d56113d06113cb84610bf8565b611087565b610bf8565b9050919050565b5f819050919050565b6113ee836113bb565b6114026113fa826113dc565b84845461136a565b825550505050565b5f90565b61141661140a565b6114218184846113e5565b505050565b5b81811015611444576114395f8261140e565b600181019050611427565b5050565b601f8211156114895761145a8161133d565b6114638461134f565b81016020851015611472578190505b61148661147e8561134f565b830182611426565b50505b505050565b5f82821c905092915050565b5f6114a95f198460080261148e565b1980831691505092915050565b5f6114c1838361149a565b9150826002028217905092915050565b6114da82610c10565b67ffffffffffffffff8111156114f3576114f2610eab565b5b6114fd82546111a0565b611508828285611448565b5f60209050601f831160018114611539575f8415611527578287015190505b61153185826114b6565b865550611598565b601f1984166115478661133d565b5f5b8281101561156e57848901518255600182019150602085019450602081019050611549565b8683101561158b5784890151611587601f89168261149a565b8355505b6001600288020188555050505b505050505050565b5f6040820190506115b35f830185610e7b565b6115c06020830184610e7b565b9392505050565b5f6040820190506115da5f83018561126e565b6115e76020830184610e7b565b939250505056fea2646970667358221220dbcf81e28880a3c9e9483581aa3a0092fe98660df8e05b13b59c178ab6074a0764736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9E9AED62 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x9E9AED62 EQ PUSH2 0xE7 JUMPI DUP1 PUSH4 0xA94F5766 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0xD4BA8902 EQ PUSH2 0x121 JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x13F JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x5C17521 EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0xC66F928 EQ PUSH2 0xAF JUMPI DUP1 PUSH4 0x46E04A2F EQ PUSH2 0xCB JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x99 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x94 SWAP2 SWAP1 PUSH2 0xBA4 JUMP JUMPDEST PUSH2 0x15D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0xD93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC4 SWAP2 SWAP1 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0x4B3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0xE50 JUMP JUMPDEST PUSH2 0x607 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEF PUSH2 0x7BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFC SWAP2 SWAP1 PUSH2 0xE8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0xFCF JUMP JUMPDEST PUSH2 0x85B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x129 PUSH2 0x9F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x136 SWAP2 SWAP1 PUSH2 0xE8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x147 PUSH2 0x9FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x154 SWAP2 SWAP1 PUSH2 0x10E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x21A JUMPI POP PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x259 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x250 SWAP1 PUSH2 0x1155 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x4A8 JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x2F9 SWAP1 PUSH2 0x11A0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x325 SWAP1 PUSH2 0x11A0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x370 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x347 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x370 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x353 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH2 0x389 SWAP1 PUSH2 0x11A0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3B5 SWAP1 PUSH2 0x11A0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x400 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x400 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3E3 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH2 0x419 SWAP1 PUSH2 0x11A0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x445 SWAP1 PUSH2 0x11A0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x490 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x467 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x490 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x473 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2B5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x594 CALLER PUSH8 0x8AC7230489E80000 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA1F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9C705C294119A93FB8EA4861EF048D5884D9504575B35EB38C7EA7705CF28B0 DUP4 PUSH8 0x8AC7230489E80000 PUSH1 0x40 MLOAD PUSH2 0x5FB SWAP3 SWAP2 SWAP1 PUSH2 0x11DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x649 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x640 SWAP1 PUSH2 0x1250 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A2 SWAP2 SWAP1 PUSH2 0x127D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6BD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6E1 SWAP2 SWAP1 PUSH2 0x12AA JUMP JUMPDEST LT ISZERO PUSH2 0x722 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x719 SWAP1 PUSH2 0x131F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x76C CALLER DUP3 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA1F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x896E034966EAAF1ADC54ACC0F257056FEBBD300C9E47182CF761982CF1F5E430 DUP3 PUSH1 0x40 MLOAD PUSH2 0x7B2 SWAP2 SWAP1 PUSH2 0xE8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x817 SWAP2 SWAP1 PUSH2 0x127D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x832 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x856 SWAP2 SWAP1 PUSH2 0x12AA JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 POP PUSH1 0x1 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x910 SWAP2 SWAP1 PUSH2 0x14D1 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x926 SWAP2 SWAP1 PUSH2 0x14D1 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x93C SWAP2 SWAP1 PUSH2 0x14D1 JUMP JUMPDEST POP POP POP PUSH2 0x991 CALLER PUSH8 0x8AC7230489E80000 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA1F SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x46B8550AC8F5F68F14D6A3540963578C9733E4FF2A4E7CA11CCCDEEB0B521D67 TIMESTAMP PUSH8 0x8AC7230489E80000 PUSH1 0x40 MLOAD PUSH2 0x9E1 SWAP3 SWAP2 SWAP1 PUSH2 0x15A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH8 0x8AC7230489E80000 DUP2 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xA99 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xA52 SWAP3 SWAP2 SWAP1 PUSH2 0x15C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xA9E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0xABD JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0xAD6 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0xAF1 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xB33 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2A SWAP2 SWAP1 PUSH2 0x127D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB73 DUP3 PUSH2 0xB4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB83 DUP2 PUSH2 0xB69 JUMP JUMPDEST DUP2 EQ PUSH2 0xB8D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB9E DUP2 PUSH2 0xB7A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBB9 JUMPI PUSH2 0xBB8 PUSH2 0xB42 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xBC6 DUP5 DUP3 DUP6 ADD PUSH2 0xB90 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC0A DUP2 PUSH2 0xBF8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xC52 DUP3 PUSH2 0xC10 JUMP JUMPDEST PUSH2 0xC5C DUP2 DUP6 PUSH2 0xC1A JUMP JUMPDEST SWAP4 POP PUSH2 0xC6C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xC2A JUMP JUMPDEST PUSH2 0xC75 DUP2 PUSH2 0xC38 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP4 ADD PUSH0 DUP4 ADD MLOAD PUSH2 0xC95 PUSH0 DUP7 ADD DUP3 PUSH2 0xC01 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0xCA8 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0xC01 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0xCC0 DUP3 DUP3 PUSH2 0xC48 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0xCDA DUP3 DUP3 PUSH2 0xC48 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x80 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x80 DUP7 ADD MSTORE PUSH2 0xCF4 DUP3 DUP3 PUSH2 0xC48 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD0C DUP4 DUP4 PUSH2 0xC80 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD2A DUP3 PUSH2 0xBCF JUMP JUMPDEST PUSH2 0xD34 DUP2 DUP6 PUSH2 0xBD9 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0xD46 DUP6 PUSH2 0xBE9 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xD81 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0xD62 DUP6 DUP3 PUSH2 0xD01 JUMP JUMPDEST SWAP5 POP PUSH2 0xD6D DUP4 PUSH2 0xD14 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xD49 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xDAB DUP2 DUP5 PUSH2 0xD20 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDC7 DUP2 PUSH2 0xDB3 JUMP JUMPDEST DUP2 EQ PUSH2 0xDD1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDE2 DUP2 PUSH2 0xDBE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDFE JUMPI PUSH2 0xDFD PUSH2 0xB42 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE0B DUP6 DUP3 DUP7 ADD PUSH2 0xB90 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE1C DUP6 DUP3 DUP7 ADD PUSH2 0xDD4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xE2F DUP2 PUSH2 0xBF8 JUMP JUMPDEST DUP2 EQ PUSH2 0xE39 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE4A DUP2 PUSH2 0xE26 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE65 JUMPI PUSH2 0xE64 PUSH2 0xB42 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE72 DUP5 DUP3 DUP6 ADD PUSH2 0xE3C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE84 DUP2 PUSH2 0xBF8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE9D PUSH0 DUP4 ADD DUP5 PUSH2 0xE7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0xEE1 DUP3 PUSH2 0xC38 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xF00 JUMPI PUSH2 0xEFF PUSH2 0xEAB JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF12 PUSH2 0xB39 JUMP JUMPDEST SWAP1 POP PUSH2 0xF1E DUP3 DUP3 PUSH2 0xED8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xF3D JUMPI PUSH2 0xF3C PUSH2 0xEAB JUMP JUMPDEST JUMPDEST PUSH2 0xF46 DUP3 PUSH2 0xC38 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF73 PUSH2 0xF6E DUP5 PUSH2 0xF23 JUMP JUMPDEST PUSH2 0xF09 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xF8F JUMPI PUSH2 0xF8E PUSH2 0xEA7 JUMP JUMPDEST JUMPDEST PUSH2 0xF9A DUP5 DUP3 DUP6 PUSH2 0xF53 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xFB6 JUMPI PUSH2 0xFB5 PUSH2 0xEA3 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xFC6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xF61 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xFE7 JUMPI PUSH2 0xFE6 PUSH2 0xB42 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFF4 DUP8 DUP3 DUP9 ADD PUSH2 0xE3C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1015 JUMPI PUSH2 0x1014 PUSH2 0xB46 JUMP JUMPDEST JUMPDEST PUSH2 0x1021 DUP8 DUP3 DUP9 ADD PUSH2 0xFA2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1042 JUMPI PUSH2 0x1041 PUSH2 0xB46 JUMP JUMPDEST JUMPDEST PUSH2 0x104E DUP8 DUP3 DUP9 ADD PUSH2 0xFA2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x106F JUMPI PUSH2 0x106E PUSH2 0xB46 JUMP JUMPDEST JUMPDEST PUSH2 0x107B DUP8 DUP3 DUP9 ADD PUSH2 0xFA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10AA PUSH2 0x10A5 PUSH2 0x10A0 DUP5 PUSH2 0xB4A JUMP JUMPDEST PUSH2 0x1087 JUMP JUMPDEST PUSH2 0xB4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10BB DUP3 PUSH2 0x1090 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10CC DUP3 PUSH2 0x10B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10DC DUP2 PUSH2 0x10C2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10F5 PUSH0 DUP4 ADD DUP5 PUSH2 0x10D3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373206E6F7420617574686F72697A65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x113F PUSH1 0x15 DUP4 PUSH2 0x10FB JUMP JUMPDEST SWAP2 POP PUSH2 0x114A DUP3 PUSH2 0x110B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x116C DUP2 PUSH2 0x1133 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x11B7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x11CA JUMPI PUSH2 0x11C9 PUSH2 0x1173 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11D9 DUP2 PUSH2 0xDB3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x11F2 PUSH0 DUP4 ADD DUP6 PUSH2 0x11D0 JUMP JUMPDEST PUSH2 0x11FF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE7B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x123A PUSH1 0x20 DUP4 PUSH2 0x10FB JUMP JUMPDEST SWAP2 POP PUSH2 0x1245 DUP3 PUSH2 0x1206 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1267 DUP2 PUSH2 0x122E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1277 DUP2 PUSH2 0xB69 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1290 PUSH0 DUP4 ADD DUP5 PUSH2 0x126E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x12A4 DUP2 PUSH2 0xE26 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12BF JUMPI PUSH2 0x12BE PUSH2 0xB42 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12CC DUP5 DUP3 DUP6 ADD PUSH2 0x1296 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420636F6E74726163742062616C616E6365000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1309 PUSH1 0x1D DUP4 PUSH2 0x10FB JUMP JUMPDEST SWAP2 POP PUSH2 0x1314 DUP3 PUSH2 0x12D5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1336 DUP2 PUSH2 0x12FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1399 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x135E JUMP JUMPDEST PUSH2 0x13A3 DUP7 DUP4 PUSH2 0x135E JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13D5 PUSH2 0x13D0 PUSH2 0x13CB DUP5 PUSH2 0xBF8 JUMP JUMPDEST PUSH2 0x1087 JUMP JUMPDEST PUSH2 0xBF8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13EE DUP4 PUSH2 0x13BB JUMP JUMPDEST PUSH2 0x1402 PUSH2 0x13FA DUP3 PUSH2 0x13DC JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x136A JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x1416 PUSH2 0x140A JUMP JUMPDEST PUSH2 0x1421 DUP2 DUP5 DUP5 PUSH2 0x13E5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1444 JUMPI PUSH2 0x1439 PUSH0 DUP3 PUSH2 0x140E JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1427 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1489 JUMPI PUSH2 0x145A DUP2 PUSH2 0x133D JUMP JUMPDEST PUSH2 0x1463 DUP5 PUSH2 0x134F JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1472 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1486 PUSH2 0x147E DUP6 PUSH2 0x134F JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1426 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14A9 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x148E JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14C1 DUP4 DUP4 PUSH2 0x149A JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14DA DUP3 PUSH2 0xC10 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14F3 JUMPI PUSH2 0x14F2 PUSH2 0xEAB JUMP JUMPDEST JUMPDEST PUSH2 0x14FD DUP3 SLOAD PUSH2 0x11A0 JUMP JUMPDEST PUSH2 0x1508 DUP3 DUP3 DUP6 PUSH2 0x1448 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1539 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1527 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1531 DUP6 DUP3 PUSH2 0x14B6 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1598 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x1547 DUP7 PUSH2 0x133D JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x156E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1549 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x158B JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x1587 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x149A JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x15B3 PUSH0 DUP4 ADD DUP6 PUSH2 0xE7B JUMP JUMPDEST PUSH2 0x15C0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE7B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x15DA PUSH0 DUP4 ADD DUP6 PUSH2 0x126E JUMP JUMPDEST PUSH2 0x15E7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE7B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB 0xCF DUP2 0xE2 DUP9 DUP1 LOG3 0xC9 0xE9 BASEFEE CALLDATALOAD DUP2 0xAA GASPRICE STOP SWAP3 INVALID SWAP9 PUSH7 0xDF8E05B13B59C OR DUP11 0xB6 SMOD BLOBBASEFEE SMOD PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "187:3473:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2778:278;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2352:348;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3138:323;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3533:124;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1626:648;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;351:54;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;284:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2778:278;2841:19;2907:10;2895:22;;:8;:22;;;:65;;;;2921:17;:27;2939:8;2921:27;;;;;;;;;;;;;;;:39;2949:10;2921:39;;;;;;;;;;;;;;;;;;;;;;;;;2895:65;2873:136;;;;;;;;;;;;:::i;:::-;;;;;;;;;3027:11;:21;3039:8;3027:21;;;;;;;;;;;;;;;3020:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2778:278;;;:::o;2352:348::-;2471:10;2428:17;:29;2446:10;2428:29;;;;;;;;;;;;;;;:40;2458:9;2428:40;;;;;;;;;;;;;;;;:53;;;;;;;;;;;;;;;;;;2562:50;2587:10;390:15;2562:11;;;;;;;;;;:24;;;;:50;;;;;:::i;:::-;2656:9;2630:62;;2644:10;2630:62;;;2667:10;390:15;2630:62;;;;;;;:::i;:::-;;;;;;;;2352:348;;:::o;3138:323::-;3210:1;3201:6;:10;3193:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;3307:6;3267:11;;;;;;;;;;:21;;;3297:4;3267:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:46;;3259:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;3360:44;3385:10;3397:6;3360:11;;;;;;;;;;:24;;;;:44;;;;;:::i;:::-;3434:10;3420:33;;;3446:6;3420:33;;;;;;:::i;:::-;;;;;;;;3138:323;:::o;3533:124::-;3586:7;3613:11;;;;;;;;;;;:21;;;3643:4;3613:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3606:43;;3533:124;:::o;1626:648::-;1807:25;1835:206;;;;;;;;1872:15;1835:206;;;;1916:13;1835:206;;;;1956:11;1835:206;;;;1989:6;1835:206;;;;2020:9;1835:206;;;1807:234;;2052:11;:23;2064:10;2052:23;;;;;;;;;;;;;;;2081:7;2052:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;2145:50;2170:10;390:15;2145:11;;;;;;;;;;:24;;;;:50;;;;;:::i;:::-;2224:10;2213:53;;;2236:15;390;2213:53;;;;;;;:::i;:::-;;;;;;;;1796:478;1626:648;;;;:::o;351:54::-;390:15;351:54;:::o;284:25::-;;;;;;;;;;;;:::o;1219:160:4:-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;7686:720::-;7766:18;7794:19;7932:4;7929:1;7922:4;7916:11;7909:4;7903;7899:15;7896:1;7889:5;7882;7877:60;7989:7;7979:176;;8033:4;8027:11;8078:16;8075:1;8070:3;8055:40;8124:16;8119:3;8112:29;7979:176;8182:16;8168:30;;8232:1;8226:8;8211:23;;7848:396;8272:1;8258:10;:15;:68;;8325:1;8310:11;:16;;8258:68;;;8306:1;8284:5;8276:26;;;:31;8258:68;8254:146;;;8382:5;8349:40;;;;;;;;;;;:::i;:::-;;;;;;;;8254:146;7756:650;;7686:720;;:::o;7:75:7:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:141::-;1270:6;1304:5;1298:12;1288:22;;1176:141;;;:::o;1323:211::-;1449:11;1483:6;1478:3;1471:19;1523:4;1518:3;1514:14;1499:29;;1323:211;;;;:::o;1540:159::-;1634:4;1657:3;1649:11;;1687:4;1682:3;1678:14;1670:22;;1540:159;;;:::o;1705:77::-;1742:7;1771:5;1760:16;;1705:77;;;:::o;1788:108::-;1865:24;1883:5;1865:24;:::i;:::-;1860:3;1853:37;1788:108;;:::o;1902:99::-;1954:6;1988:5;1982:12;1972:22;;1902:99;;;:::o;2007:159::-;2081:11;2115:6;2110:3;2103:19;2155:4;2150:3;2146:14;2131:29;;2007:159;;;;:::o;2172:139::-;2261:6;2256:3;2251;2245:23;2302:1;2293:6;2288:3;2284:16;2277:27;2172:139;;;:::o;2317:102::-;2358:6;2409:2;2405:7;2400:2;2393:5;2389:14;2385:28;2375:38;;2317:102;;;:::o;2425:357::-;2503:3;2531:39;2564:5;2531:39;:::i;:::-;2586:61;2640:6;2635:3;2586:61;:::i;:::-;2579:68;;2656:65;2714:6;2709:3;2702:4;2695:5;2691:16;2656:65;:::i;:::-;2746:29;2768:6;2746:29;:::i;:::-;2741:3;2737:39;2730:46;;2507:275;2425:357;;;;:::o;2878:1288::-;2991:3;3027:4;3022:3;3018:14;3119:4;3112:5;3108:16;3102:23;3138:63;3195:4;3190:3;3186:14;3172:12;3138:63;:::i;:::-;3042:169;3301:4;3294:5;3290:16;3284:23;3320:63;3377:4;3372:3;3368:14;3354:12;3320:63;:::i;:::-;3221:172;3481:4;3474:5;3470:16;3464:23;3534:3;3528:4;3524:14;3517:4;3512:3;3508:14;3501:38;3560:73;3628:4;3614:12;3560:73;:::i;:::-;3552:81;;3403:241;3727:4;3720:5;3716:16;3710:23;3780:3;3774:4;3770:14;3763:4;3758:3;3754:14;3747:38;3806:73;3874:4;3860:12;3806:73;:::i;:::-;3798:81;;3654:236;3976:4;3969:5;3965:16;3959:23;4029:3;4023:4;4019:14;4012:4;4007:3;4003:14;3996:38;4055:73;4123:4;4109:12;4055:73;:::i;:::-;4047:81;;3900:239;4156:4;4149:11;;2996:1170;2878:1288;;;;:::o;4172:264::-;4295:10;4330:100;4426:3;4418:6;4330:100;:::i;:::-;4316:114;;4172:264;;;;:::o;4442:140::-;4539:4;4571;4566:3;4562:14;4554:22;;4442:140;;;:::o;4682:1127::-;4855:3;4884:81;4959:5;4884:81;:::i;:::-;4981:113;5087:6;5082:3;4981:113;:::i;:::-;4974:120;;5120:3;5165:4;5157:6;5153:17;5148:3;5144:27;5195:83;5272:5;5195:83;:::i;:::-;5301:7;5332:1;5317:447;5342:6;5339:1;5336:13;5317:447;;;5413:9;5407:4;5403:20;5398:3;5391:33;5464:6;5458:13;5492:118;5605:4;5590:13;5492:118;:::i;:::-;5484:126;;5633:87;5713:6;5633:87;:::i;:::-;5623:97;;5749:4;5744:3;5740:14;5733:21;;5377:387;5364:1;5361;5357:9;5352:14;;5317:447;;;5321:14;5780:4;5773:11;;5800:3;5793:10;;4860:949;;;;;4682:1127;;;;:::o;5815:481::-;6012:4;6050:2;6039:9;6035:18;6027:26;;6099:9;6093:4;6089:20;6085:1;6074:9;6070:17;6063:47;6127:162;6284:4;6275:6;6127:162;:::i;:::-;6119:170;;5815:481;;;;:::o;6302:90::-;6336:7;6379:5;6372:13;6365:21;6354:32;;6302:90;;;:::o;6398:116::-;6468:21;6483:5;6468:21;:::i;:::-;6461:5;6458:32;6448:60;;6504:1;6501;6494:12;6448:60;6398:116;:::o;6520:133::-;6563:5;6601:6;6588:20;6579:29;;6617:30;6641:5;6617:30;:::i;:::-;6520:133;;;;:::o;6659:468::-;6724:6;6732;6781:2;6769:9;6760:7;6756:23;6752:32;6749:119;;;6787:79;;:::i;:::-;6749:119;6907:1;6932:53;6977:7;6968:6;6957:9;6953:22;6932:53;:::i;:::-;6922:63;;6878:117;7034:2;7060:50;7102:7;7093:6;7082:9;7078:22;7060:50;:::i;:::-;7050:60;;7005:115;6659:468;;;;;:::o;7133:122::-;7206:24;7224:5;7206:24;:::i;:::-;7199:5;7196:35;7186:63;;7245:1;7242;7235:12;7186:63;7133:122;:::o;7261:139::-;7307:5;7345:6;7332:20;7323:29;;7361:33;7388:5;7361:33;:::i;:::-;7261:139;;;;:::o;7406:329::-;7465:6;7514:2;7502:9;7493:7;7489:23;7485:32;7482:119;;;7520:79;;:::i;:::-;7482:119;7640:1;7665:53;7710:7;7701:6;7690:9;7686:22;7665:53;:::i;:::-;7655:63;;7611:117;7406:329;;;;:::o;7741:118::-;7828:24;7846:5;7828:24;:::i;:::-;7823:3;7816:37;7741:118;;:::o;7865:222::-;7958:4;7996:2;7985:9;7981:18;7973:26;;8009:71;8077:1;8066:9;8062:17;8053:6;8009:71;:::i;:::-;7865:222;;;;:::o;8093:117::-;8202:1;8199;8192:12;8216:117;8325:1;8322;8315:12;8339:180;8387:77;8384:1;8377:88;8484:4;8481:1;8474:15;8508:4;8505:1;8498:15;8525:281;8608:27;8630:4;8608:27;:::i;:::-;8600:6;8596:40;8738:6;8726:10;8723:22;8702:18;8690:10;8687:34;8684:62;8681:88;;;8749:18;;:::i;:::-;8681:88;8789:10;8785:2;8778:22;8568:238;8525:281;;:::o;8812:129::-;8846:6;8873:20;;:::i;:::-;8863:30;;8902:33;8930:4;8922:6;8902:33;:::i;:::-;8812:129;;;:::o;8947:308::-;9009:4;9099:18;9091:6;9088:30;9085:56;;;9121:18;;:::i;:::-;9085:56;9159:29;9181:6;9159:29;:::i;:::-;9151:37;;9243:4;9237;9233:15;9225:23;;8947:308;;;:::o;9261:148::-;9359:6;9354:3;9349;9336:30;9400:1;9391:6;9386:3;9382:16;9375:27;9261:148;;;:::o;9415:425::-;9493:5;9518:66;9534:49;9576:6;9534:49;:::i;:::-;9518:66;:::i;:::-;9509:75;;9607:6;9600:5;9593:21;9645:4;9638:5;9634:16;9683:3;9674:6;9669:3;9665:16;9662:25;9659:112;;;9690:79;;:::i;:::-;9659:112;9780:54;9827:6;9822:3;9817;9780:54;:::i;:::-;9499:341;9415:425;;;;;:::o;9860:340::-;9916:5;9965:3;9958:4;9950:6;9946:17;9942:27;9932:122;;9973:79;;:::i;:::-;9932:122;10090:6;10077:20;10115:79;10190:3;10182:6;10175:4;10167:6;10163:17;10115:79;:::i;:::-;10106:88;;9922:278;9860:340;;;;:::o;10206:1305::-;10322:6;10330;10338;10346;10395:3;10383:9;10374:7;10370:23;10366:33;10363:120;;;10402:79;;:::i;:::-;10363:120;10522:1;10547:53;10592:7;10583:6;10572:9;10568:22;10547:53;:::i;:::-;10537:63;;10493:117;10677:2;10666:9;10662:18;10649:32;10708:18;10700:6;10697:30;10694:117;;;10730:79;;:::i;:::-;10694:117;10835:63;10890:7;10881:6;10870:9;10866:22;10835:63;:::i;:::-;10825:73;;10620:288;10975:2;10964:9;10960:18;10947:32;11006:18;10998:6;10995:30;10992:117;;;11028:79;;:::i;:::-;10992:117;11133:63;11188:7;11179:6;11168:9;11164:22;11133:63;:::i;:::-;11123:73;;10918:288;11273:2;11262:9;11258:18;11245:32;11304:18;11296:6;11293:30;11290:117;;;11326:79;;:::i;:::-;11290:117;11431:63;11486:7;11477:6;11466:9;11462:22;11431:63;:::i;:::-;11421:73;;11216:288;10206:1305;;;;;;;:::o;11517:60::-;11545:3;11566:5;11559:12;;11517:60;;;:::o;11583:142::-;11633:9;11666:53;11684:34;11693:24;11711:5;11693:24;:::i;:::-;11684:34;:::i;:::-;11666:53;:::i;:::-;11653:66;;11583:142;;;:::o;11731:126::-;11781:9;11814:37;11845:5;11814:37;:::i;:::-;11801:50;;11731:126;;;:::o;11863:140::-;11927:9;11960:37;11991:5;11960:37;:::i;:::-;11947:50;;11863:140;;;:::o;12009:159::-;12110:51;12155:5;12110:51;:::i;:::-;12105:3;12098:64;12009:159;;:::o;12174:250::-;12281:4;12319:2;12308:9;12304:18;12296:26;;12332:85;12414:1;12403:9;12399:17;12390:6;12332:85;:::i;:::-;12174:250;;;;:::o;12430:169::-;12514:11;12548:6;12543:3;12536:19;12588:4;12583:3;12579:14;12564:29;;12430:169;;;;:::o;12605:171::-;12745:23;12741:1;12733:6;12729:14;12722:47;12605:171;:::o;12782:366::-;12924:3;12945:67;13009:2;13004:3;12945:67;:::i;:::-;12938:74;;13021:93;13110:3;13021:93;:::i;:::-;13139:2;13134:3;13130:12;13123:19;;12782:366;;;:::o;13154:419::-;13320:4;13358:2;13347:9;13343:18;13335:26;;13407:9;13401:4;13397:20;13393:1;13382:9;13378:17;13371:47;13435:131;13561:4;13435:131;:::i;:::-;13427:139;;13154:419;;;:::o;13579:180::-;13627:77;13624:1;13617:88;13724:4;13721:1;13714:15;13748:4;13745:1;13738:15;13765:320;13809:6;13846:1;13840:4;13836:12;13826:22;;13893:1;13887:4;13883:12;13914:18;13904:81;;13970:4;13962:6;13958:17;13948:27;;13904:81;14032:2;14024:6;14021:14;14001:18;13998:38;13995:84;;14051:18;;:::i;:::-;13995:84;13816:269;13765:320;;;:::o;14091:109::-;14172:21;14187:5;14172:21;:::i;:::-;14167:3;14160:34;14091:109;;:::o;14206:320::-;14321:4;14359:2;14348:9;14344:18;14336:26;;14372:65;14434:1;14423:9;14419:17;14410:6;14372:65;:::i;:::-;14447:72;14515:2;14504:9;14500:18;14491:6;14447:72;:::i;:::-;14206:320;;;;;:::o;14532:182::-;14672:34;14668:1;14660:6;14656:14;14649:58;14532:182;:::o;14720:366::-;14862:3;14883:67;14947:2;14942:3;14883:67;:::i;:::-;14876:74;;14959:93;15048:3;14959:93;:::i;:::-;15077:2;15072:3;15068:12;15061:19;;14720:366;;;:::o;15092:419::-;15258:4;15296:2;15285:9;15281:18;15273:26;;15345:9;15339:4;15335:20;15331:1;15320:9;15316:17;15309:47;15373:131;15499:4;15373:131;:::i;:::-;15365:139;;15092:419;;;:::o;15517:118::-;15604:24;15622:5;15604:24;:::i;:::-;15599:3;15592:37;15517:118;;:::o;15641:222::-;15734:4;15772:2;15761:9;15757:18;15749:26;;15785:71;15853:1;15842:9;15838:17;15829:6;15785:71;:::i;:::-;15641:222;;;;:::o;15869:143::-;15926:5;15957:6;15951:13;15942:22;;15973:33;16000:5;15973:33;:::i;:::-;15869:143;;;;:::o;16018:351::-;16088:6;16137:2;16125:9;16116:7;16112:23;16108:32;16105:119;;;16143:79;;:::i;:::-;16105:119;16263:1;16288:64;16344:7;16335:6;16324:9;16320:22;16288:64;:::i;:::-;16278:74;;16234:128;16018:351;;;;:::o;16375:179::-;16515:31;16511:1;16503:6;16499:14;16492:55;16375:179;:::o;16560:366::-;16702:3;16723:67;16787:2;16782:3;16723:67;:::i;:::-;16716:74;;16799:93;16888:3;16799:93;:::i;:::-;16917:2;16912:3;16908:12;16901:19;;16560:366;;;:::o;16932:419::-;17098:4;17136:2;17125:9;17121:18;17113:26;;17185:9;17179:4;17175:20;17171:1;17160:9;17156:17;17149:47;17213:131;17339:4;17213:131;:::i;:::-;17205:139;;16932:419;;;:::o;17357:141::-;17406:4;17429:3;17421:11;;17452:3;17449:1;17442:14;17486:4;17483:1;17473:18;17465:26;;17357:141;;;:::o;17504:93::-;17541:6;17588:2;17583;17576:5;17572:14;17568:23;17558:33;;17504:93;;;:::o;17603:107::-;17647:8;17697:5;17691:4;17687:16;17666:37;;17603:107;;;;:::o;17716:393::-;17785:6;17835:1;17823:10;17819:18;17858:97;17888:66;17877:9;17858:97;:::i;:::-;17976:39;18006:8;17995:9;17976:39;:::i;:::-;17964:51;;18048:4;18044:9;18037:5;18033:21;18024:30;;18097:4;18087:8;18083:19;18076:5;18073:30;18063:40;;17792:317;;17716:393;;;;;:::o;18115:142::-;18165:9;18198:53;18216:34;18225:24;18243:5;18225:24;:::i;:::-;18216:34;:::i;:::-;18198:53;:::i;:::-;18185:66;;18115:142;;;:::o;18263:75::-;18306:3;18327:5;18320:12;;18263:75;;;:::o;18344:269::-;18454:39;18485:7;18454:39;:::i;:::-;18515:91;18564:41;18588:16;18564:41;:::i;:::-;18556:6;18549:4;18543:11;18515:91;:::i;:::-;18509:4;18502:105;18420:193;18344:269;;;:::o;18619:73::-;18664:3;18619:73;:::o;18698:189::-;18775:32;;:::i;:::-;18816:65;18874:6;18866;18860:4;18816:65;:::i;:::-;18751:136;18698:189;;:::o;18893:186::-;18953:120;18970:3;18963:5;18960:14;18953:120;;;19024:39;19061:1;19054:5;19024:39;:::i;:::-;18997:1;18990:5;18986:13;18977:22;;18953:120;;;18893:186;;:::o;19085:543::-;19186:2;19181:3;19178:11;19175:446;;;19220:38;19252:5;19220:38;:::i;:::-;19304:29;19322:10;19304:29;:::i;:::-;19294:8;19290:44;19487:2;19475:10;19472:18;19469:49;;;19508:8;19493:23;;19469:49;19531:80;19587:22;19605:3;19587:22;:::i;:::-;19577:8;19573:37;19560:11;19531:80;:::i;:::-;19190:431;;19175:446;19085:543;;;:::o;19634:117::-;19688:8;19738:5;19732:4;19728:16;19707:37;;19634:117;;;;:::o;19757:169::-;19801:6;19834:51;19882:1;19878:6;19870:5;19867:1;19863:13;19834:51;:::i;:::-;19830:56;19915:4;19909;19905:15;19895:25;;19808:118;19757:169;;;;:::o;19931:295::-;20007:4;20153:29;20178:3;20172:4;20153:29;:::i;:::-;20145:37;;20215:3;20212:1;20208:11;20202:4;20199:21;20191:29;;19931:295;;;;:::o;20231:1395::-;20348:37;20381:3;20348:37;:::i;:::-;20450:18;20442:6;20439:30;20436:56;;;20472:18;;:::i;:::-;20436:56;20516:38;20548:4;20542:11;20516:38;:::i;:::-;20601:67;20661:6;20653;20647:4;20601:67;:::i;:::-;20695:1;20719:4;20706:17;;20751:2;20743:6;20740:14;20768:1;20763:618;;;;21425:1;21442:6;21439:77;;;21491:9;21486:3;21482:19;21476:26;21467:35;;21439:77;21542:67;21602:6;21595:5;21542:67;:::i;:::-;21536:4;21529:81;21398:222;20733:887;;20763:618;20815:4;20811:9;20803:6;20799:22;20849:37;20881:4;20849:37;:::i;:::-;20908:1;20922:208;20936:7;20933:1;20930:14;20922:208;;;21015:9;21010:3;21006:19;21000:26;20992:6;20985:42;21066:1;21058:6;21054:14;21044:24;;21113:2;21102:9;21098:18;21085:31;;20959:4;20956:1;20952:12;20947:17;;20922:208;;;21158:6;21149:7;21146:19;21143:179;;;21216:9;21211:3;21207:19;21201:26;21259:48;21301:4;21293:6;21289:17;21278:9;21259:48;:::i;:::-;21251:6;21244:64;21166:156;21143:179;21368:1;21364;21356:6;21352:14;21348:22;21342:4;21335:36;20770:611;;;20733:887;;20323:1303;;;20231:1395;;:::o;21632:332::-;21753:4;21791:2;21780:9;21776:18;21768:26;;21804:71;21872:1;21861:9;21857:17;21848:6;21804:71;:::i;:::-;21885:72;21953:2;21942:9;21938:18;21929:6;21885:72;:::i;:::-;21632:332;;;;;:::o;21970:::-;22091:4;22129:2;22118:9;22114:18;22106:26;;22142:71;22210:1;22199:9;22195:17;22186:6;22142:71;:::i;:::-;22223:72;22291:2;22280:9;22276:18;22267:6;22223:72;:::i;:::-;21970:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1133600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"TOKEN_REWARD()": "369",
								"claimTokens(uint256)": "infinite",
								"contractTokenBalance()": "infinite",
								"logHealthData(uint256,string,string,string)": "infinite",
								"rewardToken()": "infinite",
								"updateAccess(address,bool)": "infinite",
								"viewHealthData(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 187,
									"end": 3660,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 187,
									"end": 3660,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 187,
									"end": 3660,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1405,
									"end": 1563,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1405,
									"end": 1563,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1405,
									"end": 1563,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1405,
									"end": 1563,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1405,
									"end": 1563,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1405,
									"end": 1563,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1405,
									"end": 1563,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1405,
									"end": 1563,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1405,
									"end": 1563,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1405,
									"end": 1563,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1405,
									"end": 1563,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1405,
									"end": 1563,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1405,
									"end": 1563,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1405,
									"end": 1563,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1405,
									"end": 1563,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 1405,
									"end": 1563,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1405,
									"end": 1563,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1405,
									"end": 1563,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1405,
									"end": 1563,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1405,
									"end": 1563,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1405,
									"end": 1563,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1405,
									"end": 1563,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1405,
									"end": 1563,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1405,
									"end": 1563,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1405,
									"end": 1563,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1405,
									"end": 1563,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1405,
									"end": 1563,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1405,
									"end": 1563,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1405,
									"end": 1563,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1405,
									"end": 1563,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1405,
									"end": 1563,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1405,
									"end": 1563,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1405,
									"end": 1563,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1405,
									"end": 1563,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1405,
									"end": 1563,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1482,
									"end": 1483,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1458,
									"end": 1484,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1458,
									"end": 1484,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1458,
									"end": 1470,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1458,
									"end": 1484,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1458,
									"end": 1484,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1458,
									"end": 1484,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1450,
									"end": 1510,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1450,
									"end": 1510,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1450,
									"end": 1510,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1450,
									"end": 1510,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1450,
									"end": 1510,
									"name": "PUSH",
									"source": 6,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1450,
									"end": 1510,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1450,
									"end": 1510,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1450,
									"end": 1510,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1450,
									"end": 1510,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1450,
									"end": 1510,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 1450,
									"end": 1510,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1450,
									"end": 1510,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1450,
									"end": 1510,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1450,
									"end": 1510,
									"name": "tag",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 1450,
									"end": 1510,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1450,
									"end": 1510,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1450,
									"end": 1510,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1450,
									"end": 1510,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1450,
									"end": 1510,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1450,
									"end": 1510,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1450,
									"end": 1510,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1450,
									"end": 1510,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1450,
									"end": 1510,
									"name": "tag",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1450,
									"end": 1510,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1542,
									"end": 1554,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1521,
									"end": 1532,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1521,
									"end": 1532,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1521,
									"end": 1555,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1521,
									"end": 1555,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1521,
									"end": 1555,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1521,
									"end": 1555,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1521,
									"end": 1555,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1521,
									"end": 1555,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1521,
									"end": 1555,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1521,
									"end": 1555,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1521,
									"end": 1555,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1521,
									"end": 1555,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1521,
									"end": 1555,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1521,
									"end": 1555,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1521,
									"end": 1555,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1521,
									"end": 1555,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1521,
									"end": 1555,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1521,
									"end": 1555,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1521,
									"end": 1555,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1521,
									"end": 1555,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1405,
									"end": 1563,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 187,
									"end": 3660,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 187,
									"end": 3660,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "tag",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1286,
									"end": 1297,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1320,
									"end": 1326,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1315,
									"end": 1318,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1308,
									"end": 1327,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1360,
									"end": 1364,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1355,
									"end": 1358,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1351,
									"end": 1365,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1336,
									"end": 1365,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1336,
									"end": 1365,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1202,
									"end": 1371,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1377,
									"end": 1548,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 1377,
									"end": 1548,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1517,
									"end": 1540,
									"name": "PUSH",
									"source": 7,
									"value": "496E76616C696420746F6B656E20616464726573730000000000000000000000"
								},
								{
									"begin": 1513,
									"end": 1514,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1505,
									"end": 1511,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1501,
									"end": 1515,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1494,
									"end": 1541,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1377,
									"end": 1548,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1377,
									"end": 1548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1920,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 1554,
									"end": 1920,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1696,
									"end": 1699,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1717,
									"end": 1784,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 1781,
									"end": 1783,
									"name": "PUSH",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1784,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 1717,
									"end": 1784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1717,
									"end": 1784,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 1717,
									"end": 1784,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1710,
									"end": 1784,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1710,
									"end": 1784,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1793,
									"end": 1886,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1882,
									"end": 1885,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1793,
									"end": 1886,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 1793,
									"end": 1886,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1793,
									"end": 1886,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1793,
									"end": 1886,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1911,
									"end": 1913,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1906,
									"end": 1909,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1902,
									"end": 1914,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1895,
									"end": 1914,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1895,
									"end": 1914,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1920,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1920,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1920,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1554,
									"end": 1920,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1926,
									"end": 2345,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1926,
									"end": 2345,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2092,
									"end": 2096,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2130,
									"end": 2132,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2119,
									"end": 2128,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2115,
									"end": 2133,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2107,
									"end": 2133,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2107,
									"end": 2133,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2179,
									"end": 2188,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2173,
									"end": 2177,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2169,
									"end": 2189,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 2165,
									"end": 2166,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2154,
									"end": 2163,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2150,
									"end": 2167,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2143,
									"end": 2190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2207,
									"end": 2338,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 2333,
									"end": 2337,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2207,
									"end": 2338,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 2207,
									"end": 2338,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2207,
									"end": 2338,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 2207,
									"end": 2338,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2199,
									"end": 2338,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2199,
									"end": 2338,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1926,
									"end": 2345,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1926,
									"end": 2345,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1926,
									"end": 2345,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1926,
									"end": 2345,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 187,
									"end": 3660,
									"name": "tag",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 187,
									"end": 3660,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 187,
									"end": 3660,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 3660,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 3660,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 3660,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 3660,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 187,
									"end": 3660,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 3660,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dbcf81e28880a3c9e9483581aa3a0092fe98660df8e05b13b59c178ab6074a0764736f6c634300081a0033",
									".code": [
										{
											"begin": 187,
											"end": 3660,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "PUSH",
											"source": 6,
											"value": "9E9AED62"
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "PUSH",
											"source": 6,
											"value": "9E9AED62"
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "PUSH",
											"source": 6,
											"value": "A94F5766"
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "PUSH",
											"source": 6,
											"value": "D4BA8902"
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "PUSH",
											"source": 6,
											"value": "F7C618C1"
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "PUSH",
											"source": 6,
											"value": "5C17521"
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "PUSH",
											"source": 6,
											"value": "C66F928"
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "PUSH",
											"source": 6,
											"value": "46E04A2F"
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 187,
											"end": 3660,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2778,
											"end": 3056,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2778,
											"end": 3056,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2778,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2778,
											"end": 3056,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2778,
											"end": 3056,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2778,
											"end": 3056,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2778,
											"end": 3056,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2778,
											"end": 3056,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2778,
											"end": 3056,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2778,
											"end": 3056,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2778,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 2778,
											"end": 3056,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2778,
											"end": 3056,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2778,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 2778,
											"end": 3056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2778,
											"end": 3056,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 2778,
											"end": 3056,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2778,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 2778,
											"end": 3056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2778,
											"end": 3056,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2778,
											"end": 3056,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2778,
											"end": 3056,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2778,
											"end": 3056,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2778,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 2778,
											"end": 3056,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2778,
											"end": 3056,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2778,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 2778,
											"end": 3056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2778,
											"end": 3056,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 2778,
											"end": 3056,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2778,
											"end": 3056,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2778,
											"end": 3056,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2778,
											"end": 3056,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2778,
											"end": 3056,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2778,
											"end": 3056,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2778,
											"end": 3056,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2778,
											"end": 3056,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2352,
											"end": 2700,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2352,
											"end": 2700,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2352,
											"end": 2700,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 2352,
											"end": 2700,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2352,
											"end": 2700,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2352,
											"end": 2700,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2352,
											"end": 2700,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2352,
											"end": 2700,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2352,
											"end": 2700,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2352,
											"end": 2700,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2352,
											"end": 2700,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 2352,
											"end": 2700,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2352,
											"end": 2700,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2352,
											"end": 2700,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 2352,
											"end": 2700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2352,
											"end": 2700,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 2352,
											"end": 2700,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2352,
											"end": 2700,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2352,
											"end": 2700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2352,
											"end": 2700,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 2352,
											"end": 2700,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2352,
											"end": 2700,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3138,
											"end": 3461,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3138,
											"end": 3461,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3138,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 3138,
											"end": 3461,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3138,
											"end": 3461,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3138,
											"end": 3461,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3138,
											"end": 3461,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3138,
											"end": 3461,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3138,
											"end": 3461,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3138,
											"end": 3461,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3138,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 3138,
											"end": 3461,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3138,
											"end": 3461,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3138,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 3138,
											"end": 3461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3138,
											"end": 3461,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 3138,
											"end": 3461,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3138,
											"end": 3461,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3138,
											"end": 3461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3138,
											"end": 3461,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 3138,
											"end": 3461,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3138,
											"end": 3461,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3657,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3533,
											"end": 3657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 3533,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 3533,
											"end": 3657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3657,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 3533,
											"end": 3657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3657,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3533,
											"end": 3657,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 3533,
											"end": 3657,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3657,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 3533,
											"end": 3657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3657,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 3533,
											"end": 3657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3657,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3533,
											"end": 3657,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3657,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3657,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3657,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3657,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3657,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1626,
											"end": 2274,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1626,
											"end": 2274,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1626,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1626,
											"end": 2274,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1626,
											"end": 2274,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1626,
											"end": 2274,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1626,
											"end": 2274,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1626,
											"end": 2274,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1626,
											"end": 2274,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1626,
											"end": 2274,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1626,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1626,
											"end": 2274,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1626,
											"end": 2274,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1626,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1626,
											"end": 2274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1626,
											"end": 2274,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1626,
											"end": 2274,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1626,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1626,
											"end": 2274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1626,
											"end": 2274,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1626,
											"end": 2274,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1626,
											"end": 2274,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 351,
											"end": 405,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 351,
											"end": 405,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 351,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 351,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 351,
											"end": 405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 351,
											"end": 405,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 351,
											"end": 405,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 351,
											"end": 405,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 351,
											"end": 405,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 351,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 351,
											"end": 405,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 351,
											"end": 405,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 351,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 351,
											"end": 405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 351,
											"end": 405,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 351,
											"end": 405,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 351,
											"end": 405,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 351,
											"end": 405,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 351,
											"end": 405,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 351,
											"end": 405,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 351,
											"end": 405,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 351,
											"end": 405,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 351,
											"end": 405,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 284,
											"end": 309,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 284,
											"end": 309,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 284,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 284,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 284,
											"end": 309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 284,
											"end": 309,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 284,
											"end": 309,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 284,
											"end": 309,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 284,
											"end": 309,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 284,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 284,
											"end": 309,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 284,
											"end": 309,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 284,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 284,
											"end": 309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 284,
											"end": 309,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 284,
											"end": 309,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 284,
											"end": 309,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 284,
											"end": 309,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 284,
											"end": 309,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 284,
											"end": 309,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 284,
											"end": 309,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 284,
											"end": 309,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 284,
											"end": 309,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2778,
											"end": 3056,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 2778,
											"end": 3056,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2841,
											"end": 2860,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2907,
											"end": 2917,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2895,
											"end": 2917,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2895,
											"end": 2917,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2895,
											"end": 2903,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2895,
											"end": 2917,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2895,
											"end": 2917,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2895,
											"end": 2917,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2895,
											"end": 2960,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2895,
											"end": 2960,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 2895,
											"end": 2960,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2895,
											"end": 2960,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2921,
											"end": 2938,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2921,
											"end": 2948,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2939,
											"end": 2947,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2921,
											"end": 2948,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2921,
											"end": 2948,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2921,
											"end": 2948,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2921,
											"end": 2948,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2921,
											"end": 2948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2921,
											"end": 2948,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2921,
											"end": 2948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2921,
											"end": 2948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2921,
											"end": 2948,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2921,
											"end": 2948,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2921,
											"end": 2948,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2921,
											"end": 2948,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2921,
											"end": 2948,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2921,
											"end": 2948,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2921,
											"end": 2948,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2921,
											"end": 2960,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2949,
											"end": 2959,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2921,
											"end": 2960,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2921,
											"end": 2960,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2921,
											"end": 2960,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2921,
											"end": 2960,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2921,
											"end": 2960,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2921,
											"end": 2960,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2921,
											"end": 2960,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2921,
											"end": 2960,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2921,
											"end": 2960,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2921,
											"end": 2960,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2921,
											"end": 2960,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2921,
											"end": 2960,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2921,
											"end": 2960,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2921,
											"end": 2960,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2921,
											"end": 2960,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2921,
											"end": 2960,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2921,
											"end": 2960,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2921,
											"end": 2960,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2921,
											"end": 2960,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2921,
											"end": 2960,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2921,
											"end": 2960,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2921,
											"end": 2960,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2921,
											"end": 2960,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2921,
											"end": 2960,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2921,
											"end": 2960,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2895,
											"end": 2960,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 2895,
											"end": 2960,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 3009,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 2873,
											"end": 3009,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 3009,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2873,
											"end": 3009,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 3009,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2873,
											"end": 3009,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 3009,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 3009,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2873,
											"end": 3009,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 3009,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 2873,
											"end": 3009,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 3009,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2873,
											"end": 3009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 3009,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 2873,
											"end": 3009,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 3009,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2873,
											"end": 3009,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 3009,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 3009,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 3009,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 3009,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 3009,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2873,
											"end": 3009,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 2873,
											"end": 3009,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3027,
											"end": 3038,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3027,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3039,
											"end": 3047,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3027,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3027,
											"end": 3048,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3027,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3027,
											"end": 3048,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3027,
											"end": 3048,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3027,
											"end": 3048,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3027,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3027,
											"end": 3048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3027,
											"end": 3048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3027,
											"end": 3048,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3027,
											"end": 3048,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3027,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3027,
											"end": 3048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3027,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3027,
											"end": 3048,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 3020,
											"end": 3048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 3020,
											"end": 3048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 3020,
											"end": 3048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 3020,
											"end": 3048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 3020,
											"end": 3048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 3020,
											"end": 3048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3020,
											"end": 3048,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2778,
											"end": 3056,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2778,
											"end": 3056,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2778,
											"end": 3056,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2778,
											"end": 3056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2352,
											"end": 2700,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2352,
											"end": 2700,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2471,
											"end": 2481,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2445,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2428,
											"end": 2457,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2446,
											"end": 2456,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2457,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2428,
											"end": 2457,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2457,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2428,
											"end": 2457,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2457,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2457,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2457,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2428,
											"end": 2457,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2457,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2457,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2457,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2457,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2428,
											"end": 2457,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2457,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2428,
											"end": 2457,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2468,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2458,
											"end": 2467,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2468,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2428,
											"end": 2468,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2468,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2428,
											"end": 2468,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2468,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2468,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2468,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2428,
											"end": 2468,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2468,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2468,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2468,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2468,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2428,
											"end": 2468,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2468,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2428,
											"end": 2468,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2468,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2428,
											"end": 2481,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2428,
											"end": 2481,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2481,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2481,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2481,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2481,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2428,
											"end": 2481,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2481,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2481,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2481,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2481,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2481,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2481,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2481,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2481,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2481,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2481,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2481,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2612,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2587,
											"end": 2597,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 390,
											"end": 405,
											"name": "PUSH",
											"source": 6,
											"value": "8AC7230489E80000"
										},
										{
											"begin": 2562,
											"end": 2573,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2562,
											"end": 2573,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2573,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2573,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2573,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2562,
											"end": 2573,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2573,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2573,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2573,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2562,
											"end": 2573,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2586,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2562,
											"end": 2586,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2562,
											"end": 2586,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2612,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2612,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2612,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2612,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2562,
											"end": 2612,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2562,
											"end": 2612,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2562,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2656,
											"end": 2665,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2630,
											"end": 2692,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2630,
											"end": 2692,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2644,
											"end": 2654,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2630,
											"end": 2692,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2630,
											"end": 2692,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2630,
											"end": 2692,
											"name": "PUSH",
											"source": 6,
											"value": "9C705C294119A93FB8EA4861EF048D5884D9504575B35EB38C7EA7705CF28B0"
										},
										{
											"begin": 2667,
											"end": 2677,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 390,
											"end": 405,
											"name": "PUSH",
											"source": 6,
											"value": "8AC7230489E80000"
										},
										{
											"begin": 2630,
											"end": 2692,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2630,
											"end": 2692,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2630,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2630,
											"end": 2692,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2630,
											"end": 2692,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2630,
											"end": 2692,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2630,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2630,
											"end": 2692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2630,
											"end": 2692,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2630,
											"end": 2692,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2630,
											"end": 2692,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2630,
											"end": 2692,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2630,
											"end": 2692,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2630,
											"end": 2692,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2630,
											"end": 2692,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2630,
											"end": 2692,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2630,
											"end": 2692,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 2352,
											"end": 2700,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2352,
											"end": 2700,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2352,
											"end": 2700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3138,
											"end": 3461,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3138,
											"end": 3461,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3201,
											"end": 3207,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3201,
											"end": 3211,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 3193,
											"end": 3248,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3248,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3193,
											"end": 3248,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3248,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3193,
											"end": 3248,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3248,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3248,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3193,
											"end": 3248,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 3193,
											"end": 3248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 3193,
											"end": 3248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3248,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 3193,
											"end": 3248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3248,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3193,
											"end": 3248,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3248,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3248,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3248,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3248,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3248,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 3193,
											"end": 3248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3307,
											"end": 3313,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3278,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3267,
											"end": 3278,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3278,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3278,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3278,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3267,
											"end": 3278,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3278,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3278,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3278,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3267,
											"end": 3278,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3288,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3267,
											"end": 3288,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3288,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 3297,
											"end": 3301,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 3267,
											"end": 3303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 3267,
											"end": 3303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3313,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3313,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3259,
											"end": 3347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 3259,
											"end": 3347,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3259,
											"end": 3347,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3259,
											"end": 3347,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3259,
											"end": 3347,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3259,
											"end": 3347,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3259,
											"end": 3347,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3259,
											"end": 3347,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3259,
											"end": 3347,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3259,
											"end": 3347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3259,
											"end": 3347,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3259,
											"end": 3347,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 3259,
											"end": 3347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3259,
											"end": 3347,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3259,
											"end": 3347,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3259,
											"end": 3347,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3259,
											"end": 3347,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3259,
											"end": 3347,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3259,
											"end": 3347,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3259,
											"end": 3347,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3259,
											"end": 3347,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3259,
											"end": 3347,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3259,
											"end": 3347,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 3259,
											"end": 3347,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3360,
											"end": 3404,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 3385,
											"end": 3395,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3397,
											"end": 3403,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3360,
											"end": 3371,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3360,
											"end": 3371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3360,
											"end": 3371,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3360,
											"end": 3371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3360,
											"end": 3371,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3360,
											"end": 3371,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3360,
											"end": 3371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3360,
											"end": 3371,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3360,
											"end": 3371,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3360,
											"end": 3371,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3360,
											"end": 3384,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3360,
											"end": 3384,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3360,
											"end": 3384,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 3360,
											"end": 3384,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3360,
											"end": 3404,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3360,
											"end": 3404,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3360,
											"end": 3404,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3360,
											"end": 3404,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3360,
											"end": 3404,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3360,
											"end": 3404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3360,
											"end": 3404,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 3360,
											"end": 3404,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3434,
											"end": 3444,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3420,
											"end": 3453,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3420,
											"end": 3453,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3420,
											"end": 3453,
											"name": "PUSH",
											"source": 6,
											"value": "896E034966EAAF1ADC54ACC0F257056FEBBD300C9E47182CF761982CF1F5E430"
										},
										{
											"begin": 3446,
											"end": 3452,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3420,
											"end": 3453,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3420,
											"end": 3453,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3420,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 3420,
											"end": 3453,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3420,
											"end": 3453,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3420,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 3420,
											"end": 3453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3420,
											"end": 3453,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 3420,
											"end": 3453,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3420,
											"end": 3453,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3420,
											"end": 3453,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3420,
											"end": 3453,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3420,
											"end": 3453,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3420,
											"end": 3453,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3420,
											"end": 3453,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3420,
											"end": 3453,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 3138,
											"end": 3461,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3138,
											"end": 3461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3657,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 3533,
											"end": 3657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3586,
											"end": 3593,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3613,
											"end": 3624,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3624,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3613,
											"end": 3624,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3624,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3624,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3624,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3613,
											"end": 3624,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3624,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3624,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3624,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3613,
											"end": 3624,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3634,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3613,
											"end": 3634,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3634,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 3643,
											"end": 3647,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 3613,
											"end": 3649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 3613,
											"end": 3649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 3613,
											"end": 3649,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3606,
											"end": 3649,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3606,
											"end": 3649,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3657,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3533,
											"end": 3657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1626,
											"end": 2274,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1626,
											"end": 2274,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1807,
											"end": 1832,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1835,
											"end": 2041,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1835,
											"end": 2041,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 2041,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 2041,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 1835,
											"end": 2041,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 2041,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1835,
											"end": 2041,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 2041,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1872,
											"end": 1887,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 2041,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 2041,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 2041,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1835,
											"end": 2041,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1916,
											"end": 1929,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 2041,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 2041,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 2041,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1835,
											"end": 2041,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1956,
											"end": 1967,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 2041,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 2041,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 2041,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1835,
											"end": 2041,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 2041,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 2041,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 2041,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1835,
											"end": 2041,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2029,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 2041,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 2041,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1835,
											"end": 2041,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1807,
											"end": 2041,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1807,
											"end": 2041,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2063,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2052,
											"end": 2075,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2064,
											"end": 2074,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2075,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2052,
											"end": 2075,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2075,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2052,
											"end": 2075,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2075,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2075,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2075,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2052,
											"end": 2075,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2075,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2075,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2075,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2075,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2052,
											"end": 2075,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2075,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2052,
											"end": 2075,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2081,
											"end": 2088,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 2052,
											"end": 2089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 2052,
											"end": 2089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 2052,
											"end": 2089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2089,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2145,
											"end": 2195,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 2170,
											"end": 2180,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 390,
											"end": 405,
											"name": "PUSH",
											"source": 6,
											"value": "8AC7230489E80000"
										},
										{
											"begin": 2145,
											"end": 2156,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2145,
											"end": 2156,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2145,
											"end": 2156,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2145,
											"end": 2156,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2145,
											"end": 2156,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2145,
											"end": 2156,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2145,
											"end": 2156,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2145,
											"end": 2156,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2145,
											"end": 2156,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2145,
											"end": 2156,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2145,
											"end": 2169,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2145,
											"end": 2169,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2145,
											"end": 2169,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2145,
											"end": 2169,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2145,
											"end": 2195,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2145,
											"end": 2195,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2145,
											"end": 2195,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2145,
											"end": 2195,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2145,
											"end": 2195,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2145,
											"end": 2195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2145,
											"end": 2195,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 2145,
											"end": 2195,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2224,
											"end": 2234,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2213,
											"end": 2266,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2213,
											"end": 2266,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2213,
											"end": 2266,
											"name": "PUSH",
											"source": 6,
											"value": "46B8550AC8F5F68F14D6A3540963578C9733E4FF2A4E7CA11CCCDEEB0B521D67"
										},
										{
											"begin": 2236,
											"end": 2251,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 390,
											"end": 405,
											"name": "PUSH",
											"source": 6,
											"value": "8AC7230489E80000"
										},
										{
											"begin": 2213,
											"end": 2266,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2213,
											"end": 2266,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2213,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 2213,
											"end": 2266,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2213,
											"end": 2266,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2213,
											"end": 2266,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2213,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 2213,
											"end": 2266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2213,
											"end": 2266,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 2213,
											"end": 2266,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2213,
											"end": 2266,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2213,
											"end": 2266,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2213,
											"end": 2266,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2213,
											"end": 2266,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2213,
											"end": 2266,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2213,
											"end": 2266,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2213,
											"end": 2266,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 1796,
											"end": 2274,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1626,
											"end": 2274,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1626,
											"end": 2274,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1626,
											"end": 2274,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1626,
											"end": 2274,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1626,
											"end": 2274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 351,
											"end": 405,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 351,
											"end": 405,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 390,
											"end": 405,
											"name": "PUSH",
											"source": 6,
											"value": "8AC7230489E80000"
										},
										{
											"begin": 351,
											"end": 405,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 351,
											"end": 405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 284,
											"end": 309,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 284,
											"end": 309,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 284,
											"end": 309,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 284,
											"end": 309,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 284,
											"end": 309,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 284,
											"end": 309,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 284,
											"end": 309,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 284,
											"end": 309,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 284,
											"end": 309,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 284,
											"end": 309,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 284,
											"end": 309,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 284,
											"end": 309,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 284,
											"end": 309,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 284,
											"end": 309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7766,
											"end": 7784,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7794,
											"end": 7813,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7932,
											"end": 7936,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7929,
											"end": 7930,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7922,
											"end": 7926,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7916,
											"end": 7927,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7909,
											"end": 7913,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7903,
											"end": 7907,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7896,
											"end": 7897,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7889,
											"end": 7894,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 7882,
											"end": 7887,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 7877,
											"end": 7937,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 7989,
											"end": 7996,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8033,
											"end": 8037,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8027,
											"end": 8038,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8078,
											"end": 8094,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8075,
											"end": 8076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8070,
											"end": 8073,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8055,
											"end": 8095,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 8124,
											"end": 8140,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8119,
											"end": 8122,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8182,
											"end": 8198,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8168,
											"end": 8198,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8168,
											"end": 8198,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8232,
											"end": 8233,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8226,
											"end": 8234,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8211,
											"end": 8234,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8211,
											"end": 8234,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7848,
											"end": 8244,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8272,
											"end": 8273,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8258,
											"end": 8268,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8258,
											"end": 8273,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8325,
											"end": 8326,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8310,
											"end": 8321,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8310,
											"end": 8326,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 8310,
											"end": 8326,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8306,
											"end": 8307,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8284,
											"end": 8289,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 8276,
											"end": 8307,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8382,
											"end": 8387,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 4,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 8349,
											"end": 8389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7756,
											"end": 8406,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7756,
											"end": 8406,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 8406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1317,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 1176,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1270,
											"end": 1276,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1304,
											"end": 1309,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1298,
											"end": 1310,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1288,
											"end": 1310,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1288,
											"end": 1310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1317,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1317,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1317,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1323,
											"end": 1534,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 1323,
											"end": 1534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1449,
											"end": 1460,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1483,
											"end": 1489,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1481,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1471,
											"end": 1490,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1523,
											"end": 1527,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1518,
											"end": 1521,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1514,
											"end": 1528,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1499,
											"end": 1528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1499,
											"end": 1528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1323,
											"end": 1534,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1323,
											"end": 1534,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1323,
											"end": 1534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1323,
											"end": 1534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1323,
											"end": 1534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1540,
											"end": 1699,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 1540,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1634,
											"end": 1638,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1657,
											"end": 1660,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1660,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1649,
											"end": 1660,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1687,
											"end": 1691,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1682,
											"end": 1685,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1670,
											"end": 1692,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1670,
											"end": 1692,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1540,
											"end": 1699,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1540,
											"end": 1699,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1540,
											"end": 1699,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1540,
											"end": 1699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 1782,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 1705,
											"end": 1782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1742,
											"end": 1749,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1771,
											"end": 1776,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1776,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1776,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 1782,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 1782,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 1782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 1782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1788,
											"end": 1896,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 1788,
											"end": 1896,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1865,
											"end": 1889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 1883,
											"end": 1888,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1865,
											"end": 1889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 1865,
											"end": 1889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1865,
											"end": 1889,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 1865,
											"end": 1889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1860,
											"end": 1863,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1853,
											"end": 1890,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1788,
											"end": 1896,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1788,
											"end": 1896,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1788,
											"end": 1896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1902,
											"end": 2001,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 1902,
											"end": 2001,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1954,
											"end": 1960,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1988,
											"end": 1993,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1982,
											"end": 1994,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1972,
											"end": 1994,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1972,
											"end": 1994,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1902,
											"end": 2001,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1902,
											"end": 2001,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1902,
											"end": 2001,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1902,
											"end": 2001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2166,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 2007,
											"end": 2166,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2081,
											"end": 2092,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2110,
											"end": 2113,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2103,
											"end": 2122,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2155,
											"end": 2159,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2150,
											"end": 2153,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2146,
											"end": 2160,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2160,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2160,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2166,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2166,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2166,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2166,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2172,
											"end": 2311,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 2172,
											"end": 2311,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2261,
											"end": 2267,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2256,
											"end": 2259,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2251,
											"end": 2254,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2245,
											"end": 2268,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 2302,
											"end": 2303,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2299,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2288,
											"end": 2291,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2284,
											"end": 2300,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2277,
											"end": 2304,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2172,
											"end": 2311,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2172,
											"end": 2311,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2172,
											"end": 2311,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2172,
											"end": 2311,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2317,
											"end": 2419,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 2317,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2364,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2409,
											"end": 2411,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2405,
											"end": 2412,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2400,
											"end": 2402,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2393,
											"end": 2398,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2389,
											"end": 2403,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2385,
											"end": 2413,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2375,
											"end": 2413,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2375,
											"end": 2413,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2317,
											"end": 2419,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2317,
											"end": 2419,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2317,
											"end": 2419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2317,
											"end": 2419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2425,
											"end": 2782,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 2425,
											"end": 2782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2503,
											"end": 2506,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2531,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 2564,
											"end": 2569,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2531,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 2531,
											"end": 2570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2531,
											"end": 2570,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 2531,
											"end": 2570,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 2640,
											"end": 2646,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2635,
											"end": 2638,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 2586,
											"end": 2647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2647,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 2586,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2579,
											"end": 2647,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2579,
											"end": 2647,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2656,
											"end": 2721,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 2714,
											"end": 2720,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2709,
											"end": 2712,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2702,
											"end": 2706,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2695,
											"end": 2700,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2691,
											"end": 2707,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2656,
											"end": 2721,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 2656,
											"end": 2721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2656,
											"end": 2721,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 2656,
											"end": 2721,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2746,
											"end": 2775,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 2768,
											"end": 2774,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2746,
											"end": 2775,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 2746,
											"end": 2775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2746,
											"end": 2775,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 2746,
											"end": 2775,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2741,
											"end": 2744,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2737,
											"end": 2776,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2730,
											"end": 2776,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2730,
											"end": 2776,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2425,
											"end": 2782,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2425,
											"end": 2782,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2425,
											"end": 2782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2425,
											"end": 2782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2425,
											"end": 2782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2878,
											"end": 4166,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 2878,
											"end": 4166,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2991,
											"end": 2994,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3027,
											"end": 3031,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 3022,
											"end": 3025,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3018,
											"end": 3032,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3119,
											"end": 3123,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3112,
											"end": 3117,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3108,
											"end": 3124,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3102,
											"end": 3125,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3138,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 3195,
											"end": 3199,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3190,
											"end": 3193,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3186,
											"end": 3200,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3172,
											"end": 3184,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3138,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 3138,
											"end": 3201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3138,
											"end": 3201,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 3138,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3042,
											"end": 3211,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3301,
											"end": 3305,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3294,
											"end": 3299,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3290,
											"end": 3306,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3284,
											"end": 3307,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3320,
											"end": 3383,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 3377,
											"end": 3381,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3372,
											"end": 3375,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3368,
											"end": 3382,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3354,
											"end": 3366,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3320,
											"end": 3383,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 3320,
											"end": 3383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3320,
											"end": 3383,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 3320,
											"end": 3383,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3221,
											"end": 3393,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3481,
											"end": 3485,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3474,
											"end": 3479,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3470,
											"end": 3486,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3464,
											"end": 3487,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3534,
											"end": 3537,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3524,
											"end": 3538,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3517,
											"end": 3521,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3512,
											"end": 3515,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3508,
											"end": 3522,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3501,
											"end": 3539,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3560,
											"end": 3633,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 3628,
											"end": 3632,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3614,
											"end": 3626,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3560,
											"end": 3633,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 3560,
											"end": 3633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3560,
											"end": 3633,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 3560,
											"end": 3633,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3552,
											"end": 3633,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3552,
											"end": 3633,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3403,
											"end": 3644,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3727,
											"end": 3731,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3720,
											"end": 3725,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3716,
											"end": 3732,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3710,
											"end": 3733,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3780,
											"end": 3783,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3774,
											"end": 3778,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3770,
											"end": 3784,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3763,
											"end": 3767,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3758,
											"end": 3761,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3754,
											"end": 3768,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3747,
											"end": 3785,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3806,
											"end": 3879,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 3874,
											"end": 3878,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3860,
											"end": 3872,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3806,
											"end": 3879,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 3806,
											"end": 3879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3806,
											"end": 3879,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 3806,
											"end": 3879,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 3879,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 3879,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3654,
											"end": 3890,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3976,
											"end": 3980,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 3969,
											"end": 3974,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3965,
											"end": 3981,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 3982,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4032,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4023,
											"end": 4027,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4019,
											"end": 4033,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4012,
											"end": 4016,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 4007,
											"end": 4010,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4003,
											"end": 4017,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3996,
											"end": 4034,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4055,
											"end": 4128,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 4123,
											"end": 4127,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4109,
											"end": 4121,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4055,
											"end": 4128,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 4055,
											"end": 4128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4055,
											"end": 4128,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 4055,
											"end": 4128,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4047,
											"end": 4128,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4047,
											"end": 4128,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3900,
											"end": 4139,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4156,
											"end": 4160,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4149,
											"end": 4160,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4149,
											"end": 4160,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2996,
											"end": 4166,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2878,
											"end": 4166,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2878,
											"end": 4166,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2878,
											"end": 4166,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2878,
											"end": 4166,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2878,
											"end": 4166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4436,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 4172,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4295,
											"end": 4305,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4330,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 4426,
											"end": 4429,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4418,
											"end": 4424,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4330,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 4330,
											"end": 4430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4330,
											"end": 4430,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 4330,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4430,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4430,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4436,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4436,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4442,
											"end": 4582,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 4442,
											"end": 4582,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4539,
											"end": 4543,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4571,
											"end": 4575,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4566,
											"end": 4569,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4562,
											"end": 4576,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4554,
											"end": 4576,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4554,
											"end": 4576,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4442,
											"end": 4582,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4442,
											"end": 4582,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4442,
											"end": 4582,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4442,
											"end": 4582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4682,
											"end": 5809,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 4682,
											"end": 5809,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4855,
											"end": 4858,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4884,
											"end": 4965,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 4959,
											"end": 4964,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4884,
											"end": 4965,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 4884,
											"end": 4965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4884,
											"end": 4965,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 4884,
											"end": 4965,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4981,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 5087,
											"end": 5093,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5082,
											"end": 5085,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4981,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 4981,
											"end": 5094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4981,
											"end": 5094,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 4981,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4974,
											"end": 5094,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4974,
											"end": 5094,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5120,
											"end": 5123,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5165,
											"end": 5169,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5157,
											"end": 5163,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5153,
											"end": 5170,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5148,
											"end": 5151,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5144,
											"end": 5171,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5195,
											"end": 5278,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 5272,
											"end": 5277,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5195,
											"end": 5278,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 5195,
											"end": 5278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5195,
											"end": 5278,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 5195,
											"end": 5278,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5301,
											"end": 5308,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5332,
											"end": 5333,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5317,
											"end": 5764,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 5317,
											"end": 5764,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5342,
											"end": 5348,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5339,
											"end": 5340,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5336,
											"end": 5349,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5317,
											"end": 5764,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5317,
											"end": 5764,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 5317,
											"end": 5764,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5413,
											"end": 5422,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5407,
											"end": 5411,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5403,
											"end": 5423,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5398,
											"end": 5401,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 5391,
											"end": 5424,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5464,
											"end": 5470,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5458,
											"end": 5471,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5492,
											"end": 5610,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 5605,
											"end": 5609,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5590,
											"end": 5603,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5492,
											"end": 5610,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 5492,
											"end": 5610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5492,
											"end": 5610,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 5492,
											"end": 5610,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5484,
											"end": 5610,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 5484,
											"end": 5610,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5633,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 5713,
											"end": 5719,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5633,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 5633,
											"end": 5720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5633,
											"end": 5720,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 5633,
											"end": 5720,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5623,
											"end": 5720,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5623,
											"end": 5720,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5749,
											"end": 5753,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5744,
											"end": 5747,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 5740,
											"end": 5754,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5733,
											"end": 5754,
											"name": "SWAP10",
											"source": 7
										},
										{
											"begin": 5733,
											"end": 5754,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5377,
											"end": 5764,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5364,
											"end": 5365,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5361,
											"end": 5362,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5357,
											"end": 5366,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5352,
											"end": 5366,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5352,
											"end": 5366,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5317,
											"end": 5764,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 5317,
											"end": 5764,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5317,
											"end": 5764,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 5317,
											"end": 5764,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5321,
											"end": 5335,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5780,
											"end": 5784,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5773,
											"end": 5784,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 5773,
											"end": 5784,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5800,
											"end": 5803,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5793,
											"end": 5803,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 5793,
											"end": 5803,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4860,
											"end": 5809,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4860,
											"end": 5809,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4860,
											"end": 5809,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4860,
											"end": 5809,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4860,
											"end": 5809,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4682,
											"end": 5809,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4682,
											"end": 5809,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4682,
											"end": 5809,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4682,
											"end": 5809,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4682,
											"end": 5809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5815,
											"end": 6296,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 5815,
											"end": 6296,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6012,
											"end": 6016,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6050,
											"end": 6052,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6039,
											"end": 6048,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6035,
											"end": 6053,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6027,
											"end": 6053,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6027,
											"end": 6053,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6108,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6093,
											"end": 6097,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6089,
											"end": 6109,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6085,
											"end": 6086,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6074,
											"end": 6083,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6070,
											"end": 6087,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6063,
											"end": 6110,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6127,
											"end": 6289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 6284,
											"end": 6288,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6275,
											"end": 6281,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6127,
											"end": 6289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 6127,
											"end": 6289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6127,
											"end": 6289,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 6127,
											"end": 6289,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6119,
											"end": 6289,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6119,
											"end": 6289,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5815,
											"end": 6296,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5815,
											"end": 6296,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5815,
											"end": 6296,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5815,
											"end": 6296,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5815,
											"end": 6296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6302,
											"end": 6392,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 6302,
											"end": 6392,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6336,
											"end": 6343,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6379,
											"end": 6384,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6372,
											"end": 6385,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6386,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6354,
											"end": 6386,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6354,
											"end": 6386,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6302,
											"end": 6392,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6302,
											"end": 6392,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6302,
											"end": 6392,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6302,
											"end": 6392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6398,
											"end": 6514,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 6398,
											"end": 6514,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6468,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 6483,
											"end": 6488,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6468,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 6468,
											"end": 6489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6468,
											"end": 6489,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 6468,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6461,
											"end": 6466,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6458,
											"end": 6490,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6448,
											"end": 6508,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 6448,
											"end": 6508,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6504,
											"end": 6505,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6501,
											"end": 6502,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6494,
											"end": 6506,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6448,
											"end": 6508,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 6448,
											"end": 6508,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6398,
											"end": 6514,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6398,
											"end": 6514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6520,
											"end": 6653,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 6520,
											"end": 6653,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6563,
											"end": 6568,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6601,
											"end": 6607,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6588,
											"end": 6608,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 6579,
											"end": 6608,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6579,
											"end": 6608,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6617,
											"end": 6647,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 6641,
											"end": 6646,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6617,
											"end": 6647,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 6617,
											"end": 6647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6617,
											"end": 6647,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 6617,
											"end": 6647,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6520,
											"end": 6653,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6520,
											"end": 6653,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6520,
											"end": 6653,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6520,
											"end": 6653,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6520,
											"end": 6653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6659,
											"end": 7127,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 6659,
											"end": 7127,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6724,
											"end": 6730,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6732,
											"end": 6738,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6781,
											"end": 6783,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6769,
											"end": 6778,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6760,
											"end": 6767,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6756,
											"end": 6779,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6752,
											"end": 6784,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6749,
											"end": 6868,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6749,
											"end": 6868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 6749,
											"end": 6868,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6787,
											"end": 6866,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 6787,
											"end": 6866,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 6787,
											"end": 6866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6787,
											"end": 6866,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 6787,
											"end": 6866,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6749,
											"end": 6868,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 6749,
											"end": 6868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6907,
											"end": 6908,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6932,
											"end": 6985,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 6977,
											"end": 6984,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6968,
											"end": 6974,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6957,
											"end": 6966,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6953,
											"end": 6975,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6932,
											"end": 6985,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 6932,
											"end": 6985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6932,
											"end": 6985,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 6932,
											"end": 6985,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6922,
											"end": 6985,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6922,
											"end": 6985,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6878,
											"end": 6995,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7034,
											"end": 7036,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7060,
											"end": 7110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 7102,
											"end": 7109,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7093,
											"end": 7099,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7082,
											"end": 7091,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7078,
											"end": 7100,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7060,
											"end": 7110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 7060,
											"end": 7110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7060,
											"end": 7110,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 7060,
											"end": 7110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7050,
											"end": 7110,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7050,
											"end": 7110,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7005,
											"end": 7120,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6659,
											"end": 7127,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6659,
											"end": 7127,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6659,
											"end": 7127,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6659,
											"end": 7127,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6659,
											"end": 7127,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6659,
											"end": 7127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7133,
											"end": 7255,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 7133,
											"end": 7255,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7206,
											"end": 7230,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 7224,
											"end": 7229,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7206,
											"end": 7230,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 7206,
											"end": 7230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7206,
											"end": 7230,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 7206,
											"end": 7230,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7199,
											"end": 7204,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7196,
											"end": 7231,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7186,
											"end": 7249,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 7186,
											"end": 7249,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7245,
											"end": 7246,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7242,
											"end": 7243,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7235,
											"end": 7247,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7186,
											"end": 7249,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 7186,
											"end": 7249,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7133,
											"end": 7255,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7133,
											"end": 7255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7261,
											"end": 7400,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 7261,
											"end": 7400,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7307,
											"end": 7312,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7345,
											"end": 7351,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7332,
											"end": 7352,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 7323,
											"end": 7352,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7323,
											"end": 7352,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7361,
											"end": 7394,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 7388,
											"end": 7393,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7361,
											"end": 7394,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 7361,
											"end": 7394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7361,
											"end": 7394,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 7361,
											"end": 7394,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7261,
											"end": 7400,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7261,
											"end": 7400,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7261,
											"end": 7400,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7261,
											"end": 7400,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7261,
											"end": 7400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7735,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 7406,
											"end": 7735,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7465,
											"end": 7471,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7514,
											"end": 7516,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7502,
											"end": 7511,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7493,
											"end": 7500,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7489,
											"end": 7512,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7485,
											"end": 7517,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7482,
											"end": 7601,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7482,
											"end": 7601,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 7482,
											"end": 7601,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7520,
											"end": 7599,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 7520,
											"end": 7599,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 7520,
											"end": 7599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7520,
											"end": 7599,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 7520,
											"end": 7599,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7482,
											"end": 7601,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 7482,
											"end": 7601,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7665,
											"end": 7718,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 7710,
											"end": 7717,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7701,
											"end": 7707,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7690,
											"end": 7699,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7686,
											"end": 7708,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7665,
											"end": 7718,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 7665,
											"end": 7718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7665,
											"end": 7718,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 7665,
											"end": 7718,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7655,
											"end": 7718,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7655,
											"end": 7718,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7611,
											"end": 7728,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7735,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7735,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7735,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7735,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7406,
											"end": 7735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7741,
											"end": 7859,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 7741,
											"end": 7859,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7828,
											"end": 7852,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 7846,
											"end": 7851,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7828,
											"end": 7852,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 7828,
											"end": 7852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7828,
											"end": 7852,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 7828,
											"end": 7852,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7826,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7816,
											"end": 7853,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7741,
											"end": 7859,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7741,
											"end": 7859,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7741,
											"end": 7859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7865,
											"end": 8087,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 7865,
											"end": 8087,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7958,
											"end": 7962,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7996,
											"end": 7998,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7985,
											"end": 7994,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7981,
											"end": 7999,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7973,
											"end": 7999,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7973,
											"end": 7999,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8009,
											"end": 8080,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 8077,
											"end": 8078,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8066,
											"end": 8075,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8062,
											"end": 8079,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8053,
											"end": 8059,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8009,
											"end": 8080,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 8009,
											"end": 8080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8009,
											"end": 8080,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 8009,
											"end": 8080,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7865,
											"end": 8087,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7865,
											"end": 8087,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7865,
											"end": 8087,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7865,
											"end": 8087,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7865,
											"end": 8087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8093,
											"end": 8210,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 8093,
											"end": 8210,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8202,
											"end": 8203,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8199,
											"end": 8200,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8192,
											"end": 8204,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8216,
											"end": 8333,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 8216,
											"end": 8333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8326,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8322,
											"end": 8323,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8315,
											"end": 8327,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8339,
											"end": 8519,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 8339,
											"end": 8519,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8387,
											"end": 8464,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8384,
											"end": 8385,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8377,
											"end": 8465,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8484,
											"end": 8488,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 8481,
											"end": 8482,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8474,
											"end": 8489,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8508,
											"end": 8512,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8505,
											"end": 8506,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8498,
											"end": 8513,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8525,
											"end": 8806,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 8525,
											"end": 8806,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8608,
											"end": 8635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 8630,
											"end": 8634,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8608,
											"end": 8635,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 8608,
											"end": 8635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8608,
											"end": 8635,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 8608,
											"end": 8635,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8600,
											"end": 8606,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8596,
											"end": 8636,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8738,
											"end": 8744,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8726,
											"end": 8736,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8723,
											"end": 8745,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 8702,
											"end": 8720,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8690,
											"end": 8700,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8687,
											"end": 8721,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8684,
											"end": 8746,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 8681,
											"end": 8769,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8681,
											"end": 8769,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 8681,
											"end": 8769,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8749,
											"end": 8767,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 8749,
											"end": 8767,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 8749,
											"end": 8767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8749,
											"end": 8767,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 8749,
											"end": 8767,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8681,
											"end": 8769,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 8681,
											"end": 8769,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8789,
											"end": 8799,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8785,
											"end": 8787,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8778,
											"end": 8800,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8568,
											"end": 8806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8525,
											"end": 8806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8525,
											"end": 8806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8525,
											"end": 8806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8812,
											"end": 8941,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 8812,
											"end": 8941,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8846,
											"end": 8852,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8873,
											"end": 8893,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 8873,
											"end": 8893,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 8873,
											"end": 8893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8873,
											"end": 8893,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 8873,
											"end": 8893,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8863,
											"end": 8893,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8863,
											"end": 8893,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8902,
											"end": 8935,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 8930,
											"end": 8934,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8922,
											"end": 8928,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8902,
											"end": 8935,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 8902,
											"end": 8935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8902,
											"end": 8935,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 8902,
											"end": 8935,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8812,
											"end": 8941,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8812,
											"end": 8941,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8812,
											"end": 8941,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8812,
											"end": 8941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8947,
											"end": 9255,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 8947,
											"end": 9255,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9009,
											"end": 9013,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9099,
											"end": 9117,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9091,
											"end": 9097,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9088,
											"end": 9118,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9085,
											"end": 9141,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9085,
											"end": 9141,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 9085,
											"end": 9141,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9121,
											"end": 9139,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 9121,
											"end": 9139,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 9121,
											"end": 9139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9121,
											"end": 9139,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 9121,
											"end": 9139,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9085,
											"end": 9141,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 9085,
											"end": 9141,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9159,
											"end": 9188,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 9181,
											"end": 9187,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9159,
											"end": 9188,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 9159,
											"end": 9188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9159,
											"end": 9188,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 9159,
											"end": 9188,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9151,
											"end": 9188,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9151,
											"end": 9188,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9243,
											"end": 9247,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9237,
											"end": 9241,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9233,
											"end": 9248,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9225,
											"end": 9248,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9225,
											"end": 9248,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8947,
											"end": 9255,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8947,
											"end": 9255,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8947,
											"end": 9255,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8947,
											"end": 9255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9261,
											"end": 9409,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 9261,
											"end": 9409,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9359,
											"end": 9365,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9354,
											"end": 9357,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9349,
											"end": 9352,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9336,
											"end": 9366,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 9400,
											"end": 9401,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9391,
											"end": 9397,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9386,
											"end": 9389,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9382,
											"end": 9398,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9375,
											"end": 9402,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9261,
											"end": 9409,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9261,
											"end": 9409,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9261,
											"end": 9409,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9261,
											"end": 9409,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9415,
											"end": 9840,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 9415,
											"end": 9840,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9493,
											"end": 9498,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9518,
											"end": 9584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 9534,
											"end": 9583,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 9576,
											"end": 9582,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9534,
											"end": 9583,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 9534,
											"end": 9583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9534,
											"end": 9583,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 9534,
											"end": 9583,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9518,
											"end": 9584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 9518,
											"end": 9584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9518,
											"end": 9584,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 9518,
											"end": 9584,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9509,
											"end": 9584,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9509,
											"end": 9584,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9607,
											"end": 9613,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9600,
											"end": 9605,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9593,
											"end": 9614,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9645,
											"end": 9649,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9638,
											"end": 9643,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9634,
											"end": 9650,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9683,
											"end": 9686,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9674,
											"end": 9680,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9669,
											"end": 9672,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9665,
											"end": 9681,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9662,
											"end": 9687,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9659,
											"end": 9771,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9659,
											"end": 9771,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 9659,
											"end": 9771,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9690,
											"end": 9769,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 9690,
											"end": 9769,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 9690,
											"end": 9769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9690,
											"end": 9769,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 9690,
											"end": 9769,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9659,
											"end": 9771,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 9659,
											"end": 9771,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9780,
											"end": 9834,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 9827,
											"end": 9833,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9822,
											"end": 9825,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9817,
											"end": 9820,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9780,
											"end": 9834,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 9780,
											"end": 9834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9780,
											"end": 9834,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 9780,
											"end": 9834,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9499,
											"end": 9840,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9415,
											"end": 9840,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 9415,
											"end": 9840,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9415,
											"end": 9840,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9415,
											"end": 9840,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9415,
											"end": 9840,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9415,
											"end": 9840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9860,
											"end": 10200,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 9860,
											"end": 10200,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9916,
											"end": 9921,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9965,
											"end": 9968,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9958,
											"end": 9962,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 9950,
											"end": 9956,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9946,
											"end": 9963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9942,
											"end": 9969,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 9932,
											"end": 10054,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 9932,
											"end": 10054,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9973,
											"end": 10052,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 9973,
											"end": 10052,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 9973,
											"end": 10052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9973,
											"end": 10052,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 9973,
											"end": 10052,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9932,
											"end": 10054,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 9932,
											"end": 10054,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10090,
											"end": 10096,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10077,
											"end": 10097,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 10115,
											"end": 10194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 10190,
											"end": 10193,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10182,
											"end": 10188,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10175,
											"end": 10179,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10167,
											"end": 10173,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10163,
											"end": 10180,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10115,
											"end": 10194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 10115,
											"end": 10194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10115,
											"end": 10194,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 10115,
											"end": 10194,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10106,
											"end": 10194,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10106,
											"end": 10194,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9922,
											"end": 10200,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9860,
											"end": 10200,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9860,
											"end": 10200,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9860,
											"end": 10200,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9860,
											"end": 10200,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9860,
											"end": 10200,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10206,
											"end": 11511,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 10206,
											"end": 11511,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10322,
											"end": 10328,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10330,
											"end": 10336,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10338,
											"end": 10344,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10346,
											"end": 10352,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10395,
											"end": 10398,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 10383,
											"end": 10392,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10374,
											"end": 10381,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 10370,
											"end": 10393,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10366,
											"end": 10399,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 10363,
											"end": 10483,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10363,
											"end": 10483,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 10363,
											"end": 10483,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10402,
											"end": 10481,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 10402,
											"end": 10481,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 10402,
											"end": 10481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10402,
											"end": 10481,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 10402,
											"end": 10481,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10363,
											"end": 10483,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 10363,
											"end": 10483,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10522,
											"end": 10523,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10547,
											"end": 10600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 10592,
											"end": 10599,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 10583,
											"end": 10589,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10572,
											"end": 10581,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 10568,
											"end": 10590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10547,
											"end": 10600,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 10547,
											"end": 10600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10547,
											"end": 10600,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 10547,
											"end": 10600,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10537,
											"end": 10600,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 10537,
											"end": 10600,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10493,
											"end": 10610,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10677,
											"end": 10679,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10666,
											"end": 10675,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10662,
											"end": 10680,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10649,
											"end": 10681,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 10708,
											"end": 10726,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10700,
											"end": 10706,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10697,
											"end": 10727,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 10694,
											"end": 10811,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10694,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 10694,
											"end": 10811,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10730,
											"end": 10809,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 10730,
											"end": 10809,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 10730,
											"end": 10809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10730,
											"end": 10809,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 10730,
											"end": 10809,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10694,
											"end": 10811,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 10694,
											"end": 10811,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10835,
											"end": 10898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 10890,
											"end": 10897,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 10881,
											"end": 10887,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10870,
											"end": 10879,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 10866,
											"end": 10888,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10835,
											"end": 10898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 10835,
											"end": 10898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10835,
											"end": 10898,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 10835,
											"end": 10898,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10825,
											"end": 10898,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 10825,
											"end": 10898,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10620,
											"end": 10908,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10975,
											"end": 10977,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10964,
											"end": 10973,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10960,
											"end": 10978,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10947,
											"end": 10979,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 11006,
											"end": 11024,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10998,
											"end": 11004,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10995,
											"end": 11025,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 10992,
											"end": 11109,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10992,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 10992,
											"end": 11109,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11028,
											"end": 11107,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 11028,
											"end": 11107,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 11028,
											"end": 11107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11028,
											"end": 11107,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 11028,
											"end": 11107,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10992,
											"end": 11109,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 10992,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11133,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 11188,
											"end": 11195,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 11179,
											"end": 11185,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11168,
											"end": 11177,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 11164,
											"end": 11186,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11133,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 11133,
											"end": 11196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11133,
											"end": 11196,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 11133,
											"end": 11196,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11123,
											"end": 11196,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11123,
											"end": 11196,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10918,
											"end": 11206,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11273,
											"end": 11275,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 11262,
											"end": 11271,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 11258,
											"end": 11276,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11245,
											"end": 11277,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 11304,
											"end": 11322,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11296,
											"end": 11302,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11293,
											"end": 11323,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 11290,
											"end": 11407,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11290,
											"end": 11407,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 11290,
											"end": 11407,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11326,
											"end": 11405,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 11326,
											"end": 11405,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 11326,
											"end": 11405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11326,
											"end": 11405,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 11326,
											"end": 11405,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11290,
											"end": 11407,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 11290,
											"end": 11407,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11431,
											"end": 11494,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 11486,
											"end": 11493,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 11477,
											"end": 11483,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11466,
											"end": 11475,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 11462,
											"end": 11484,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11431,
											"end": 11494,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 11431,
											"end": 11494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11431,
											"end": 11494,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 11431,
											"end": 11494,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11421,
											"end": 11494,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11421,
											"end": 11494,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11216,
											"end": 11504,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10206,
											"end": 11511,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10206,
											"end": 11511,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 10206,
											"end": 11511,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10206,
											"end": 11511,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 10206,
											"end": 11511,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10206,
											"end": 11511,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10206,
											"end": 11511,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10206,
											"end": 11511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11517,
											"end": 11577,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 11517,
											"end": 11577,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11545,
											"end": 11548,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11566,
											"end": 11571,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11559,
											"end": 11571,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11559,
											"end": 11571,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11517,
											"end": 11577,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11517,
											"end": 11577,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11517,
											"end": 11577,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11517,
											"end": 11577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11583,
											"end": 11725,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 11583,
											"end": 11725,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11633,
											"end": 11642,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11666,
											"end": 11719,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 11684,
											"end": 11718,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 11693,
											"end": 11717,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 11711,
											"end": 11716,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11693,
											"end": 11717,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 11693,
											"end": 11717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11693,
											"end": 11717,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 11693,
											"end": 11717,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11684,
											"end": 11718,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 11684,
											"end": 11718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11684,
											"end": 11718,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 11684,
											"end": 11718,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11666,
											"end": 11719,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 11666,
											"end": 11719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11666,
											"end": 11719,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 11666,
											"end": 11719,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11653,
											"end": 11719,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11653,
											"end": 11719,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11583,
											"end": 11725,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11583,
											"end": 11725,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11583,
											"end": 11725,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11583,
											"end": 11725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11731,
											"end": 11857,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 11731,
											"end": 11857,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11781,
											"end": 11790,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11814,
											"end": 11851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 11845,
											"end": 11850,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11814,
											"end": 11851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 11814,
											"end": 11851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11814,
											"end": 11851,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 11814,
											"end": 11851,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11801,
											"end": 11851,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11801,
											"end": 11851,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11731,
											"end": 11857,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11731,
											"end": 11857,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11731,
											"end": 11857,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11731,
											"end": 11857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11863,
											"end": 12003,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 11863,
											"end": 12003,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11927,
											"end": 11936,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11960,
											"end": 11997,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 11991,
											"end": 11996,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11960,
											"end": 11997,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 11960,
											"end": 11997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11960,
											"end": 11997,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 11960,
											"end": 11997,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11947,
											"end": 11997,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11947,
											"end": 11997,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11863,
											"end": 12003,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11863,
											"end": 12003,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11863,
											"end": 12003,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11863,
											"end": 12003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12009,
											"end": 12168,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 12009,
											"end": 12168,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12110,
											"end": 12161,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 12155,
											"end": 12160,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12110,
											"end": 12161,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 12110,
											"end": 12161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12110,
											"end": 12161,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 12110,
											"end": 12161,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12105,
											"end": 12108,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12098,
											"end": 12162,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12009,
											"end": 12168,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12009,
											"end": 12168,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12009,
											"end": 12168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12174,
											"end": 12424,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 12174,
											"end": 12424,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12281,
											"end": 12285,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12319,
											"end": 12321,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12308,
											"end": 12317,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12304,
											"end": 12322,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12296,
											"end": 12322,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12296,
											"end": 12322,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12332,
											"end": 12417,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 12414,
											"end": 12415,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12403,
											"end": 12412,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12399,
											"end": 12416,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12390,
											"end": 12396,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12332,
											"end": 12417,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 12332,
											"end": 12417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12332,
											"end": 12417,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 12332,
											"end": 12417,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12174,
											"end": 12424,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12174,
											"end": 12424,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12174,
											"end": 12424,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12174,
											"end": 12424,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12174,
											"end": 12424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12430,
											"end": 12599,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 12430,
											"end": 12599,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12514,
											"end": 12525,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12548,
											"end": 12554,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12543,
											"end": 12546,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12536,
											"end": 12555,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12588,
											"end": 12592,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12583,
											"end": 12586,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12579,
											"end": 12593,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12564,
											"end": 12593,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12564,
											"end": 12593,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12430,
											"end": 12599,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12430,
											"end": 12599,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12430,
											"end": 12599,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12430,
											"end": 12599,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12430,
											"end": 12599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12605,
											"end": 12776,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 12605,
											"end": 12776,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12745,
											"end": 12768,
											"name": "PUSH",
											"source": 7,
											"value": "416363657373206E6F7420617574686F72697A65640000000000000000000000"
										},
										{
											"begin": 12741,
											"end": 12742,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12733,
											"end": 12739,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12729,
											"end": 12743,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12722,
											"end": 12769,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12605,
											"end": 12776,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12605,
											"end": 12776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12782,
											"end": 13148,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 12782,
											"end": 13148,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12924,
											"end": 12927,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12945,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 13009,
											"end": 13011,
											"name": "PUSH",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 13004,
											"end": 13007,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12945,
											"end": 13012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 12945,
											"end": 13012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12945,
											"end": 13012,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 12945,
											"end": 13012,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12938,
											"end": 13012,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12938,
											"end": 13012,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13021,
											"end": 13114,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 13110,
											"end": 13113,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13021,
											"end": 13114,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 13021,
											"end": 13114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13021,
											"end": 13114,
											"name": "tag",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 13021,
											"end": 13114,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13139,
											"end": 13141,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13134,
											"end": 13137,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13130,
											"end": 13142,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13123,
											"end": 13142,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13123,
											"end": 13142,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12782,
											"end": 13148,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12782,
											"end": 13148,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12782,
											"end": 13148,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12782,
											"end": 13148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13154,
											"end": 13573,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 13154,
											"end": 13573,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13320,
											"end": 13324,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13358,
											"end": 13360,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13347,
											"end": 13356,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13343,
											"end": 13361,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13335,
											"end": 13361,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13335,
											"end": 13361,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13407,
											"end": 13416,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13401,
											"end": 13405,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13397,
											"end": 13417,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13393,
											"end": 13394,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13382,
											"end": 13391,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13378,
											"end": 13395,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13371,
											"end": 13418,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13435,
											"end": 13566,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 13561,
											"end": 13565,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13435,
											"end": 13566,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 13435,
											"end": 13566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13435,
											"end": 13566,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 13435,
											"end": 13566,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13427,
											"end": 13566,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13427,
											"end": 13566,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13154,
											"end": 13573,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13154,
											"end": 13573,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13154,
											"end": 13573,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13154,
											"end": 13573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13579,
											"end": 13759,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 13579,
											"end": 13759,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13627,
											"end": 13704,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13624,
											"end": 13625,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13617,
											"end": 13705,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13724,
											"end": 13728,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 13721,
											"end": 13722,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 13714,
											"end": 13729,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13748,
											"end": 13752,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 13745,
											"end": 13746,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13738,
											"end": 13753,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 13765,
											"end": 14085,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 13765,
											"end": 14085,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13809,
											"end": 13815,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13846,
											"end": 13847,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 13840,
											"end": 13844,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13836,
											"end": 13848,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 13826,
											"end": 13848,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13826,
											"end": 13848,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13893,
											"end": 13894,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 13887,
											"end": 13891,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13883,
											"end": 13895,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 13914,
											"end": 13932,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13904,
											"end": 13985,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 13904,
											"end": 13985,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13970,
											"end": 13974,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 13962,
											"end": 13968,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13958,
											"end": 13975,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 13948,
											"end": 13975,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13948,
											"end": 13975,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13904,
											"end": 13985,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 13904,
											"end": 13985,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14032,
											"end": 14034,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14024,
											"end": 14030,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14021,
											"end": 14035,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 14001,
											"end": 14019,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13998,
											"end": 14036,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13995,
											"end": 14079,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 13995,
											"end": 14079,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14051,
											"end": 14069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 14051,
											"end": 14069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 14051,
											"end": 14069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14051,
											"end": 14069,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 14051,
											"end": 14069,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13995,
											"end": 14079,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 13995,
											"end": 14079,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13816,
											"end": 14085,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13765,
											"end": 14085,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13765,
											"end": 14085,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13765,
											"end": 14085,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13765,
											"end": 14085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14091,
											"end": 14200,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 14091,
											"end": 14200,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14172,
											"end": 14193,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 14187,
											"end": 14192,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14172,
											"end": 14193,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 14172,
											"end": 14193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14172,
											"end": 14193,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 14172,
											"end": 14193,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14167,
											"end": 14170,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14160,
											"end": 14194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14091,
											"end": 14200,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14091,
											"end": 14200,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14091,
											"end": 14200,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14206,
											"end": 14526,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 14206,
											"end": 14526,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14321,
											"end": 14325,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14359,
											"end": 14361,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 14348,
											"end": 14357,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14344,
											"end": 14362,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14336,
											"end": 14362,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14336,
											"end": 14362,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14372,
											"end": 14437,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 14434,
											"end": 14435,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14423,
											"end": 14432,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14419,
											"end": 14436,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14410,
											"end": 14416,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 14372,
											"end": 14437,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 14372,
											"end": 14437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14372,
											"end": 14437,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 14372,
											"end": 14437,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14447,
											"end": 14519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 14515,
											"end": 14517,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14504,
											"end": 14513,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14500,
											"end": 14518,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14491,
											"end": 14497,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 14447,
											"end": 14519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 14447,
											"end": 14519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14447,
											"end": 14519,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 14447,
											"end": 14519,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14206,
											"end": 14526,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 14206,
											"end": 14526,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14206,
											"end": 14526,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14206,
											"end": 14526,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14206,
											"end": 14526,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14206,
											"end": 14526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14532,
											"end": 14714,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 14532,
											"end": 14714,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14672,
											"end": 14706,
											"name": "PUSH",
											"source": 7,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E207A65726F"
										},
										{
											"begin": 14668,
											"end": 14669,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14660,
											"end": 14666,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14656,
											"end": 14670,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14649,
											"end": 14707,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14532,
											"end": 14714,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14532,
											"end": 14714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14720,
											"end": 15086,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 14720,
											"end": 15086,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14862,
											"end": 14865,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14883,
											"end": 14950,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 14947,
											"end": 14949,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14942,
											"end": 14945,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14883,
											"end": 14950,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 14883,
											"end": 14950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14883,
											"end": 14950,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 14883,
											"end": 14950,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14876,
											"end": 14950,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14876,
											"end": 14950,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14959,
											"end": 15052,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 15048,
											"end": 15051,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14959,
											"end": 15052,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 14959,
											"end": 15052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14959,
											"end": 15052,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 14959,
											"end": 15052,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15077,
											"end": 15079,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15072,
											"end": 15075,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15068,
											"end": 15080,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15061,
											"end": 15080,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15061,
											"end": 15080,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14720,
											"end": 15086,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14720,
											"end": 15086,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14720,
											"end": 15086,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14720,
											"end": 15086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15092,
											"end": 15511,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 15092,
											"end": 15511,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15258,
											"end": 15262,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15296,
											"end": 15298,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15285,
											"end": 15294,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15281,
											"end": 15299,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15273,
											"end": 15299,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15273,
											"end": 15299,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15345,
											"end": 15354,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15339,
											"end": 15343,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15335,
											"end": 15355,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 15331,
											"end": 15332,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15320,
											"end": 15329,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15316,
											"end": 15333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15309,
											"end": 15356,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15373,
											"end": 15504,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 15499,
											"end": 15503,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15373,
											"end": 15504,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 15373,
											"end": 15504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15373,
											"end": 15504,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 15373,
											"end": 15504,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15365,
											"end": 15504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15365,
											"end": 15504,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15092,
											"end": 15511,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15092,
											"end": 15511,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15092,
											"end": 15511,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15092,
											"end": 15511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15517,
											"end": 15635,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 15517,
											"end": 15635,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15604,
											"end": 15628,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 15622,
											"end": 15627,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15604,
											"end": 15628,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 15604,
											"end": 15628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15604,
											"end": 15628,
											"name": "tag",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 15604,
											"end": 15628,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15599,
											"end": 15602,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15592,
											"end": 15629,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15517,
											"end": 15635,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15517,
											"end": 15635,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15517,
											"end": 15635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15641,
											"end": 15863,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 15641,
											"end": 15863,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15734,
											"end": 15738,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15772,
											"end": 15774,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15761,
											"end": 15770,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15757,
											"end": 15775,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15749,
											"end": 15775,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15749,
											"end": 15775,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15785,
											"end": 15856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 15853,
											"end": 15854,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15842,
											"end": 15851,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15838,
											"end": 15855,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15829,
											"end": 15835,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15785,
											"end": 15856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 15785,
											"end": 15856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15785,
											"end": 15856,
											"name": "tag",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 15785,
											"end": 15856,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15641,
											"end": 15863,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15641,
											"end": 15863,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15641,
											"end": 15863,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15641,
											"end": 15863,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15641,
											"end": 15863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15869,
											"end": 16012,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 15869,
											"end": 16012,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15926,
											"end": 15931,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15957,
											"end": 15963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15951,
											"end": 15964,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 15942,
											"end": 15964,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15942,
											"end": 15964,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15973,
											"end": 16006,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 16000,
											"end": 16005,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15973,
											"end": 16006,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 15973,
											"end": 16006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15973,
											"end": 16006,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 15973,
											"end": 16006,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15869,
											"end": 16012,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15869,
											"end": 16012,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15869,
											"end": 16012,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15869,
											"end": 16012,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15869,
											"end": 16012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16018,
											"end": 16369,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 16018,
											"end": 16369,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16088,
											"end": 16094,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16137,
											"end": 16139,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16125,
											"end": 16134,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16116,
											"end": 16123,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 16112,
											"end": 16135,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 16108,
											"end": 16140,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 16105,
											"end": 16224,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 16105,
											"end": 16224,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 16105,
											"end": 16224,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 16143,
											"end": 16222,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 16143,
											"end": 16222,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 16143,
											"end": 16222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16143,
											"end": 16222,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 16143,
											"end": 16222,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16105,
											"end": 16224,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 16105,
											"end": 16224,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16263,
											"end": 16264,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16288,
											"end": 16352,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 16344,
											"end": 16351,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 16335,
											"end": 16341,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16324,
											"end": 16333,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 16320,
											"end": 16342,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16288,
											"end": 16352,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 16288,
											"end": 16352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16288,
											"end": 16352,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 16288,
											"end": 16352,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16278,
											"end": 16352,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16278,
											"end": 16352,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16234,
											"end": 16362,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16018,
											"end": 16369,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 16018,
											"end": 16369,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16018,
											"end": 16369,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16018,
											"end": 16369,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16018,
											"end": 16369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16375,
											"end": 16554,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 16375,
											"end": 16554,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16515,
											"end": 16546,
											"name": "PUSH",
											"source": 7,
											"value": "496E73756666696369656E7420636F6E74726163742062616C616E6365000000"
										},
										{
											"begin": 16511,
											"end": 16512,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16503,
											"end": 16509,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16499,
											"end": 16513,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16492,
											"end": 16547,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16375,
											"end": 16554,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16375,
											"end": 16554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16560,
											"end": 16926,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 16560,
											"end": 16926,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16702,
											"end": 16705,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16723,
											"end": 16790,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 16787,
											"end": 16789,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 16782,
											"end": 16785,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16723,
											"end": 16790,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 16723,
											"end": 16790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16723,
											"end": 16790,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 16723,
											"end": 16790,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16716,
											"end": 16790,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16716,
											"end": 16790,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16799,
											"end": 16892,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 16888,
											"end": 16891,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16799,
											"end": 16892,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 16799,
											"end": 16892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16799,
											"end": 16892,
											"name": "tag",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 16799,
											"end": 16892,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16917,
											"end": 16919,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16912,
											"end": 16915,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16908,
											"end": 16920,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16901,
											"end": 16920,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16901,
											"end": 16920,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16560,
											"end": 16926,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16560,
											"end": 16926,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16560,
											"end": 16926,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16560,
											"end": 16926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16932,
											"end": 17351,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 16932,
											"end": 17351,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17098,
											"end": 17102,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17136,
											"end": 17138,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17125,
											"end": 17134,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17121,
											"end": 17139,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17113,
											"end": 17139,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17113,
											"end": 17139,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17185,
											"end": 17194,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17179,
											"end": 17183,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17175,
											"end": 17195,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 17171,
											"end": 17172,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17160,
											"end": 17169,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17156,
											"end": 17173,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17149,
											"end": 17196,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17213,
											"end": 17344,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 17339,
											"end": 17343,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17213,
											"end": 17344,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 17213,
											"end": 17344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17213,
											"end": 17344,
											"name": "tag",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 17213,
											"end": 17344,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17205,
											"end": 17344,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17205,
											"end": 17344,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16932,
											"end": 17351,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16932,
											"end": 17351,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16932,
											"end": 17351,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16932,
											"end": 17351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17357,
											"end": 17498,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 17357,
											"end": 17498,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17406,
											"end": 17410,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17429,
											"end": 17432,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17421,
											"end": 17432,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17421,
											"end": 17432,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17452,
											"end": 17455,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17449,
											"end": 17450,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17442,
											"end": 17456,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17486,
											"end": 17490,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17483,
											"end": 17484,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17473,
											"end": 17491,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 17465,
											"end": 17491,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17465,
											"end": 17491,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17357,
											"end": 17498,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17357,
											"end": 17498,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17357,
											"end": 17498,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17357,
											"end": 17498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17504,
											"end": 17597,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 17504,
											"end": 17597,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17541,
											"end": 17547,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17588,
											"end": 17590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17583,
											"end": 17585,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 17576,
											"end": 17581,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17572,
											"end": 17586,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17568,
											"end": 17591,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 17558,
											"end": 17591,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17558,
											"end": 17591,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17504,
											"end": 17597,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17504,
											"end": 17597,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17504,
											"end": 17597,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17504,
											"end": 17597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17603,
											"end": 17710,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 17603,
											"end": 17710,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17647,
											"end": 17655,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17697,
											"end": 17702,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17691,
											"end": 17695,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17687,
											"end": 17703,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 17666,
											"end": 17703,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17666,
											"end": 17703,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17603,
											"end": 17710,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 17603,
											"end": 17710,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17603,
											"end": 17710,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17603,
											"end": 17710,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17603,
											"end": 17710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17716,
											"end": 18109,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 17716,
											"end": 18109,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17785,
											"end": 17791,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17835,
											"end": 17836,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 17823,
											"end": 17833,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17819,
											"end": 17837,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 17858,
											"end": 17955,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 17888,
											"end": 17954,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17877,
											"end": 17886,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17858,
											"end": 17955,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 17858,
											"end": 17955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17858,
											"end": 17955,
											"name": "tag",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 17858,
											"end": 17955,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17976,
											"end": 18015,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 18006,
											"end": 18014,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 17995,
											"end": 18004,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17976,
											"end": 18015,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 17976,
											"end": 18015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17976,
											"end": 18015,
											"name": "tag",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 17976,
											"end": 18015,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17964,
											"end": 18015,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 17964,
											"end": 18015,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18048,
											"end": 18052,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 18044,
											"end": 18053,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 18037,
											"end": 18042,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 18033,
											"end": 18054,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 18024,
											"end": 18054,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 18024,
											"end": 18054,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18097,
											"end": 18101,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 18087,
											"end": 18095,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 18083,
											"end": 18102,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 18076,
											"end": 18081,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 18073,
											"end": 18103,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 18063,
											"end": 18103,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 18063,
											"end": 18103,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17792,
											"end": 18109,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17792,
											"end": 18109,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17716,
											"end": 18109,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 17716,
											"end": 18109,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 17716,
											"end": 18109,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17716,
											"end": 18109,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17716,
											"end": 18109,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17716,
											"end": 18109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18115,
											"end": 18257,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 18115,
											"end": 18257,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18165,
											"end": 18174,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18198,
											"end": 18251,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 18216,
											"end": 18250,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 18225,
											"end": 18249,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 18243,
											"end": 18248,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 18225,
											"end": 18249,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 18225,
											"end": 18249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18225,
											"end": 18249,
											"name": "tag",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 18225,
											"end": 18249,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18216,
											"end": 18250,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 18216,
											"end": 18250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18216,
											"end": 18250,
											"name": "tag",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 18216,
											"end": 18250,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18198,
											"end": 18251,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 18198,
											"end": 18251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18198,
											"end": 18251,
											"name": "tag",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 18198,
											"end": 18251,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18185,
											"end": 18251,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18185,
											"end": 18251,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18115,
											"end": 18257,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18115,
											"end": 18257,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18115,
											"end": 18257,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18115,
											"end": 18257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18263,
											"end": 18338,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 18263,
											"end": 18338,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18306,
											"end": 18309,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18327,
											"end": 18332,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18320,
											"end": 18332,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18320,
											"end": 18332,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18263,
											"end": 18338,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18263,
											"end": 18338,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18263,
											"end": 18338,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18263,
											"end": 18338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18344,
											"end": 18613,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 18344,
											"end": 18613,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18454,
											"end": 18493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 18485,
											"end": 18492,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18454,
											"end": 18493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 18454,
											"end": 18493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18454,
											"end": 18493,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 18454,
											"end": 18493,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18515,
											"end": 18606,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 18564,
											"end": 18605,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 18588,
											"end": 18604,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18564,
											"end": 18605,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 18564,
											"end": 18605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18564,
											"end": 18605,
											"name": "tag",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 18564,
											"end": 18605,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18556,
											"end": 18562,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 18549,
											"end": 18553,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 18543,
											"end": 18554,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 18515,
											"end": 18606,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 18515,
											"end": 18606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18515,
											"end": 18606,
											"name": "tag",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 18515,
											"end": 18606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18509,
											"end": 18513,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18502,
											"end": 18607,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 18420,
											"end": 18613,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18344,
											"end": 18613,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18344,
											"end": 18613,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18344,
											"end": 18613,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18344,
											"end": 18613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18619,
											"end": 18692,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 18619,
											"end": 18692,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18664,
											"end": 18667,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18619,
											"end": 18692,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18619,
											"end": 18692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18698,
											"end": 18887,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 18698,
											"end": 18887,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18775,
											"end": 18807,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 18775,
											"end": 18807,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 18775,
											"end": 18807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18775,
											"end": 18807,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 18775,
											"end": 18807,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18816,
											"end": 18881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 18874,
											"end": 18880,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18866,
											"end": 18872,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 18860,
											"end": 18864,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 18816,
											"end": 18881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 18816,
											"end": 18881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18816,
											"end": 18881,
											"name": "tag",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 18816,
											"end": 18881,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18751,
											"end": 18887,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18698,
											"end": 18887,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18698,
											"end": 18887,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18698,
											"end": 18887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18893,
											"end": 19079,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 18893,
											"end": 19079,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18953,
											"end": 19073,
											"name": "tag",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 18953,
											"end": 19073,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18970,
											"end": 18973,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18963,
											"end": 18968,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18960,
											"end": 18974,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 18953,
											"end": 19073,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 18953,
											"end": 19073,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 18953,
											"end": 19073,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 19024,
											"end": 19063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 19061,
											"end": 19062,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19054,
											"end": 19059,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19024,
											"end": 19063,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 19024,
											"end": 19063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19024,
											"end": 19063,
											"name": "tag",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 19024,
											"end": 19063,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18997,
											"end": 18998,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 18990,
											"end": 18995,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18986,
											"end": 18999,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18977,
											"end": 18999,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18977,
											"end": 18999,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18953,
											"end": 19073,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 18953,
											"end": 19073,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18953,
											"end": 19073,
											"name": "tag",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 18953,
											"end": 19073,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18893,
											"end": 19079,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18893,
											"end": 19079,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18893,
											"end": 19079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19085,
											"end": 19628,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 19085,
											"end": 19628,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19186,
											"end": 19188,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 19181,
											"end": 19184,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19178,
											"end": 19189,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 19175,
											"end": 19621,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 19175,
											"end": 19621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 19175,
											"end": 19621,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 19220,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 19252,
											"end": 19257,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19220,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 19220,
											"end": 19258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19220,
											"end": 19258,
											"name": "tag",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 19220,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19304,
											"end": 19333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 19322,
											"end": 19332,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 19304,
											"end": 19333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 19304,
											"end": 19333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19304,
											"end": 19333,
											"name": "tag",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 19304,
											"end": 19333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19294,
											"end": 19302,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19290,
											"end": 19334,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19487,
											"end": 19489,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 19475,
											"end": 19485,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 19472,
											"end": 19490,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 19469,
											"end": 19518,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 19469,
											"end": 19518,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 19469,
											"end": 19518,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 19508,
											"end": 19516,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19493,
											"end": 19516,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19493,
											"end": 19516,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19469,
											"end": 19518,
											"name": "tag",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 19469,
											"end": 19518,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19531,
											"end": 19611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 19587,
											"end": 19609,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 19605,
											"end": 19608,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 19587,
											"end": 19609,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 19587,
											"end": 19609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19587,
											"end": 19609,
											"name": "tag",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 19587,
											"end": 19609,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19577,
											"end": 19585,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19573,
											"end": 19610,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19560,
											"end": 19571,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19531,
											"end": 19611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 19531,
											"end": 19611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19531,
											"end": 19611,
											"name": "tag",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 19531,
											"end": 19611,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19190,
											"end": 19621,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19190,
											"end": 19621,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19175,
											"end": 19621,
											"name": "tag",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 19175,
											"end": 19621,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19085,
											"end": 19628,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19085,
											"end": 19628,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19085,
											"end": 19628,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19085,
											"end": 19628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19634,
											"end": 19751,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 19634,
											"end": 19751,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19688,
											"end": 19696,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19738,
											"end": 19743,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19732,
											"end": 19736,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19728,
											"end": 19744,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 19707,
											"end": 19744,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19707,
											"end": 19744,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19634,
											"end": 19751,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 19634,
											"end": 19751,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19634,
											"end": 19751,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19634,
											"end": 19751,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19634,
											"end": 19751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19757,
											"end": 19926,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 19757,
											"end": 19926,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19801,
											"end": 19807,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19834,
											"end": 19885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 19882,
											"end": 19883,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19878,
											"end": 19884,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 19870,
											"end": 19875,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 19867,
											"end": 19868,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 19863,
											"end": 19876,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 19834,
											"end": 19885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 19834,
											"end": 19885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19834,
											"end": 19885,
											"name": "tag",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 19834,
											"end": 19885,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19830,
											"end": 19886,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 19915,
											"end": 19919,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 19909,
											"end": 19913,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19905,
											"end": 19920,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 19895,
											"end": 19920,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19895,
											"end": 19920,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19808,
											"end": 19926,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19757,
											"end": 19926,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 19757,
											"end": 19926,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19757,
											"end": 19926,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19757,
											"end": 19926,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19757,
											"end": 19926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19931,
											"end": 20226,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 19931,
											"end": 20226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20007,
											"end": 20011,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20153,
											"end": 20182,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 20178,
											"end": 20181,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20172,
											"end": 20176,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20153,
											"end": 20182,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 20153,
											"end": 20182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20153,
											"end": 20182,
											"name": "tag",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 20153,
											"end": 20182,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20145,
											"end": 20182,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20145,
											"end": 20182,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20215,
											"end": 20218,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20212,
											"end": 20213,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 20208,
											"end": 20219,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 20202,
											"end": 20206,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20199,
											"end": 20220,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 20191,
											"end": 20220,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20191,
											"end": 20220,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19931,
											"end": 20226,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 19931,
											"end": 20226,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19931,
											"end": 20226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19931,
											"end": 20226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19931,
											"end": 20226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20231,
											"end": 21626,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 20231,
											"end": 21626,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20348,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 20381,
											"end": 20384,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20348,
											"end": 20385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 20348,
											"end": 20385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20348,
											"end": 20385,
											"name": "tag",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 20348,
											"end": 20385,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20450,
											"end": 20468,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20442,
											"end": 20448,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20439,
											"end": 20469,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 20436,
											"end": 20492,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 20436,
											"end": 20492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 20436,
											"end": 20492,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 20472,
											"end": 20490,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 20472,
											"end": 20490,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 20472,
											"end": 20490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20472,
											"end": 20490,
											"name": "tag",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 20472,
											"end": 20490,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20436,
											"end": 20492,
											"name": "tag",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 20436,
											"end": 20492,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20516,
											"end": 20554,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 20548,
											"end": 20552,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20542,
											"end": 20553,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 20516,
											"end": 20554,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 20516,
											"end": 20554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20516,
											"end": 20554,
											"name": "tag",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 20516,
											"end": 20554,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20601,
											"end": 20668,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 20661,
											"end": 20667,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20653,
											"end": 20659,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20647,
											"end": 20651,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 20601,
											"end": 20668,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 20601,
											"end": 20668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20601,
											"end": 20668,
											"name": "tag",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 20601,
											"end": 20668,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20695,
											"end": 20696,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20719,
											"end": 20723,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 20706,
											"end": 20723,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20706,
											"end": 20723,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20751,
											"end": 20753,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 20743,
											"end": 20749,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20740,
											"end": 20754,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 20768,
											"end": 20769,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 20763,
											"end": 21381,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20763,
											"end": 21381,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 20763,
											"end": 21381,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 20763,
											"end": 21381,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 21425,
											"end": 21426,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21442,
											"end": 21448,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 21439,
											"end": 21516,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 21439,
											"end": 21516,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 21439,
											"end": 21516,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 21491,
											"end": 21500,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21486,
											"end": 21489,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 21482,
											"end": 21501,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21476,
											"end": 21502,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 21467,
											"end": 21502,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21467,
											"end": 21502,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21439,
											"end": 21516,
											"name": "tag",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 21439,
											"end": 21516,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21542,
											"end": 21609,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 21602,
											"end": 21608,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 21595,
											"end": 21600,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21542,
											"end": 21609,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 21542,
											"end": 21609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21542,
											"end": 21609,
											"name": "tag",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 21542,
											"end": 21609,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21536,
											"end": 21540,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 21529,
											"end": 21610,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 21398,
											"end": 21620,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20733,
											"end": 21620,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 20733,
											"end": 21620,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20763,
											"end": 21381,
											"name": "tag",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 20763,
											"end": 21381,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20815,
											"end": 20819,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 20811,
											"end": 20820,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 20803,
											"end": 20809,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 20799,
											"end": 20821,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 20849,
											"end": 20886,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 20881,
											"end": 20885,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 20849,
											"end": 20886,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 20849,
											"end": 20886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20849,
											"end": 20886,
											"name": "tag",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 20849,
											"end": 20886,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20908,
											"end": 20909,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20922,
											"end": 21130,
											"name": "tag",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 20922,
											"end": 21130,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20936,
											"end": 20943,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20933,
											"end": 20934,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20930,
											"end": 20944,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 20922,
											"end": 21130,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 20922,
											"end": 21130,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 20922,
											"end": 21130,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 21015,
											"end": 21024,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 21010,
											"end": 21013,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 21006,
											"end": 21025,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21000,
											"end": 21026,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 20992,
											"end": 20998,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20985,
											"end": 21027,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 21066,
											"end": 21067,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 21058,
											"end": 21064,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21054,
											"end": 21068,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21044,
											"end": 21068,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21044,
											"end": 21068,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21113,
											"end": 21115,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 21102,
											"end": 21111,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 21098,
											"end": 21116,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21085,
											"end": 21116,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 21085,
											"end": 21116,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20959,
											"end": 20963,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 20956,
											"end": 20957,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20952,
											"end": 20964,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20947,
											"end": 20964,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20947,
											"end": 20964,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20922,
											"end": 21130,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 20922,
											"end": 21130,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20922,
											"end": 21130,
											"name": "tag",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 20922,
											"end": 21130,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21158,
											"end": 21164,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 21149,
											"end": 21156,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 21146,
											"end": 21165,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 21143,
											"end": 21322,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 21143,
											"end": 21322,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 21143,
											"end": 21322,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 21216,
											"end": 21225,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 21211,
											"end": 21214,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 21207,
											"end": 21226,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21201,
											"end": 21227,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 21259,
											"end": 21307,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 21301,
											"end": 21305,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 21293,
											"end": 21299,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 21289,
											"end": 21306,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 21278,
											"end": 21287,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21259,
											"end": 21307,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 21259,
											"end": 21307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21259,
											"end": 21307,
											"name": "tag",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 21259,
											"end": 21307,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21251,
											"end": 21257,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 21244,
											"end": 21308,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 21166,
											"end": 21322,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21143,
											"end": 21322,
											"name": "tag",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 21143,
											"end": 21322,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21368,
											"end": 21369,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 21364,
											"end": 21365,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 21356,
											"end": 21362,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 21352,
											"end": 21366,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 21348,
											"end": 21370,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21342,
											"end": 21346,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 21335,
											"end": 21371,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 20770,
											"end": 21381,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20770,
											"end": 21381,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20770,
											"end": 21381,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20733,
											"end": 21620,
											"name": "tag",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 20733,
											"end": 21620,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20733,
											"end": 21620,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20323,
											"end": 21626,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20323,
											"end": 21626,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20323,
											"end": 21626,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20231,
											"end": 21626,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20231,
											"end": 21626,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20231,
											"end": 21626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21632,
											"end": 21964,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 21632,
											"end": 21964,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21753,
											"end": 21757,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21791,
											"end": 21793,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 21780,
											"end": 21789,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21776,
											"end": 21794,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21768,
											"end": 21794,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21768,
											"end": 21794,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21804,
											"end": 21875,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 21872,
											"end": 21873,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21861,
											"end": 21870,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 21857,
											"end": 21874,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21848,
											"end": 21854,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 21804,
											"end": 21875,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 21804,
											"end": 21875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21804,
											"end": 21875,
											"name": "tag",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 21804,
											"end": 21875,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21885,
											"end": 21957,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 21953,
											"end": 21955,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 21942,
											"end": 21951,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 21938,
											"end": 21956,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21929,
											"end": 21935,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 21885,
											"end": 21957,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 21885,
											"end": 21957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21885,
											"end": 21957,
											"name": "tag",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 21885,
											"end": 21957,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21632,
											"end": 21964,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 21632,
											"end": 21964,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 21632,
											"end": 21964,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21632,
											"end": 21964,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21632,
											"end": 21964,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21632,
											"end": 21964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21970,
											"end": 22302,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 21970,
											"end": 22302,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22091,
											"end": 22095,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 22129,
											"end": 22131,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 22118,
											"end": 22127,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22114,
											"end": 22132,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22106,
											"end": 22132,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22106,
											"end": 22132,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22142,
											"end": 22213,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 22210,
											"end": 22211,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 22199,
											"end": 22208,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 22195,
											"end": 22212,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22186,
											"end": 22192,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 22142,
											"end": 22213,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 22142,
											"end": 22213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22142,
											"end": 22213,
											"name": "tag",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 22142,
											"end": 22213,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22223,
											"end": 22295,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 22291,
											"end": 22293,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 22280,
											"end": 22289,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 22276,
											"end": 22294,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22267,
											"end": 22273,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 22223,
											"end": 22295,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 22223,
											"end": 22295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22223,
											"end": 22295,
											"name": "tag",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 22223,
											"end": 22295,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21970,
											"end": 22302,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 21970,
											"end": 22302,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 21970,
											"end": 22302,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21970,
											"end": 22302,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21970,
											"end": 22302,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21970,
											"end": 22302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/PatientDataRevised.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"TOKEN_REWARD()": "d4ba8902",
							"claimTokens(uint256)": "46e04a2f",
							"contractTokenBalance()": "9e9aed62",
							"logHealthData(uint256,string,string,string)": "a94f5766",
							"rewardToken()": "f7c618c1",
							"updateAccess(address,bool)": "0c66f928",
							"viewHealthData(address)": "05c17521"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"accessor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isGranted\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"AccessUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"patient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"DataLogged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"TOKEN_REWARD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"claimTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractTokenBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_glucoseLevel\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_medication\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_meals\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_exercise\",\"type\":\"string\"}],\"name\":\"logHealthData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_accessor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isGranted\",\"type\":\"bool\"}],\"name\":\"updateAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_patient\",\"type\":\"address\"}],\"name\":\"viewHealthData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"glucoseLevel\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"medication\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"meals\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"exercise\",\"type\":\"string\"}],\"internalType\":\"struct PatientDataManagement.HealthData[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PatientDataRevised.sol\":\"PatientDataManagement\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/PatientDataRevised.sol\":{\"keccak256\":\"0xf69f3795b44941fd734ed4085fe44b5b2ae62ce18e28da47352c221d03df02b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c666aac77a0dee88ffe37e28147806cfdd7b407950d40070b39332f9f842bfc\",\"dweb:/ipfs/QmauS5bUjqhdcSSeQc1x2RA365wsAwBV4AbX8WPbE3zQhr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 599,
								"contract": "contracts/PatientDataRevised.sol:PatientDataManagement",
								"label": "rewardToken",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20)167"
							},
							{
								"astId": 624,
								"contract": "contracts/PatientDataRevised.sol:PatientDataManagement",
								"label": "patientData",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_array(t_struct(HealthData)618_storage)dyn_storage)"
							},
							{
								"astId": 630,
								"contract": "contracts/PatientDataRevised.sol:PatientDataManagement",
								"label": "accessPermissions",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(HealthData)618_storage)dyn_storage": {
								"base": "t_struct(HealthData)618_storage",
								"encoding": "dynamic_array",
								"label": "struct PatientDataManagement.HealthData[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)167": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_array(t_struct(HealthData)618_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct PatientDataManagement.HealthData[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(HealthData)618_storage)dyn_storage"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(HealthData)618_storage": {
								"encoding": "inplace",
								"label": "struct PatientDataManagement.HealthData",
								"members": [
									{
										"astId": 609,
										"contract": "contracts/PatientDataRevised.sol:PatientDataManagement",
										"label": "timestamp",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 611,
										"contract": "contracts/PatientDataRevised.sol:PatientDataManagement",
										"label": "glucoseLevel",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 613,
										"contract": "contracts/PatientDataRevised.sol:PatientDataManagement",
										"label": "medication",
										"offset": 0,
										"slot": "2",
										"type": "t_string_storage"
									},
									{
										"astId": 615,
										"contract": "contracts/PatientDataRevised.sol:PatientDataManagement",
										"label": "meals",
										"offset": 0,
										"slot": "3",
										"type": "t_string_storage"
									},
									{
										"astId": 617,
										"contract": "contracts/PatientDataRevised.sol:PatientDataManagement",
										"label": "exercise",
										"offset": 0,
										"slot": "4",
										"type": "t_string_storage"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC165": [
							588
						],
						"IERC20": [
							167
						]
					},
					"id": 82,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 82,
							"sourceUnit": 90,
							"src": "133:36:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 167,
										"src": "141:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 82,
							"sourceUnit": 86,
							"src": "170:38:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 588,
										"src": "178:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "IERC20",
										"nameLocations": [
											"590:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 167,
										"src": "590:6:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IERC165",
										"nameLocations": [
											"598:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 588,
										"src": "598:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:0"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:0",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 81,
							"linearizedBaseContracts": [
								81,
								588,
								167
							],
							"name": "IERC1363",
							"nameLocation": "578:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 20,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1548:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1560:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1593:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:0"
									},
									"scope": 81,
									"src": "1523:76:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 32,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2088:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2100:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2115:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 26,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2154:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 29,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:0"
									},
									"scope": 81,
									"src": "2063:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2653:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2667:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2679:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2712:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:0"
									},
									"scope": 81,
									"src": "2624:94:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3294:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3308:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3320:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3335:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 52,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3374:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:0"
									},
									"scope": 81,
									"src": "3265:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 68,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3805:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3822:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3855:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 65,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:0"
									},
									"scope": 81,
									"src": "3781:80:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4374:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4391:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4406:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 74,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4445:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 77,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:0"
									},
									"scope": 81,
									"src": "4350:101:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 82,
							"src": "568:3885:0",
							"usedErrors": [],
							"usedEvents": [
								101,
								110
							]
						}
					],
					"src": "107:4347:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							588
						]
					},
					"id": 86,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 83,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 85,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 86,
							"sourceUnit": 589,
							"src": "132:59:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 84,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 588,
										"src": "140:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							167
						]
					},
					"id": 90,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 87,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 89,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 90,
							"sourceUnit": 168,
							"src": "131:49:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 88,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 167,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							167
						]
					},
					"id": 168,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 91,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 92,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 167,
							"linearizedBaseContracts": [
								167
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 101,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 110,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 167,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 117,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 124,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 167,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 134,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 131,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 167,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 144,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 167,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 154,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 151,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 167,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 166,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 163,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 167,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 168,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								101,
								110
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC20": [
							167
						],
						"SafeERC20": [
							576
						]
					},
					"id": 577,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 169,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 171,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 577,
							"sourceUnit": 168,
							"src": "141:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 170,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 167,
										"src": "149:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 173,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 577,
							"sourceUnit": 82,
							"src": "179:58:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 172,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 81,
										"src": "187:8:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 174,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:4",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 576,
							"linearizedBaseContracts": [
								576
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:4",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 179,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "823:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:4"
									},
									"src": "792:46:4"
								},
								{
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:4",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 188,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "959:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "976:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1002:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:4"
									},
									"src": "920:109:4"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "1291:88:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 200,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "1321:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 203,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 192,
																		"src": "1343:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:4",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 134,
																	"src": "1343:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 205,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 194,
																			"src": "1360:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 206,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 196,
																			"src": "1364:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 207,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 201,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:4",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 199,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "1301:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:4"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:4",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1241:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 191,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 190,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "1241:6:4"
													},
													"referencedDeclaration": 167,
													"src": "1241:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1255:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "1267:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:4"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:4"
									},
									"scope": 576,
									"src": "1219:160:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "1708:98:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 226,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "1738:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 229,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 216,
																		"src": "1760:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 230,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:4",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 166,
																	"src": "1760:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 231,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 218,
																			"src": "1781:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 232,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 220,
																			"src": "1787:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 233,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 222,
																			"src": "1791:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 234,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 227,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 228,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:4",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 225,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "1718:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:4"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:4",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1644:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 215,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 214,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "1644:6:4"
													},
													"referencedDeclaration": 167,
													"src": "1644:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1658:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1672:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:4"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:4"
									},
									"scope": 576,
									"src": "1618:188:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 269,
										"nodeType": "Block",
										"src": "2548:139:4",
										"statements": [
											{
												"assignments": [
													251
												],
												"declarations": [
													{
														"constant": false,
														"id": 251,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2566:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 269,
														"src": "2558:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 250,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2558:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 260,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 256,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2605:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$576",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$576",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 255,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2597:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 254,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2597:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2597:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 258,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "2612:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 252,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "2581:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2587:9:4",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 144,
														"src": "2581:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2581:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2558:62:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 262,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "2643:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 263,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "2650:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 264,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 251,
																"src": "2659:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 265,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 247,
																"src": "2674:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2659:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 261,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "2630:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2630:50:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 268,
												"nodeType": "ExpressionStatement",
												"src": "2630:50:4"
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "1812:645:4",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2471:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2500:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "2493:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 242,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 241,
														"name": "IERC20",
														"nameLocations": [
															"2493:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "2493:6:4"
													},
													"referencedDeclaration": 167,
													"src": "2493:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2515:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "2507:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2507:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2532:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "2524:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2524:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2492:46:4"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2548:0:4"
									},
									"scope": 576,
									"src": "2462:225:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "3453:370:4",
										"statements": [
											{
												"id": 311,
												"nodeType": "UncheckedBlock",
												"src": "3463:354:4",
												"statements": [
													{
														"assignments": [
															282
														],
														"declarations": [
															{
																"constant": false,
																"id": 282,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "3495:16:4",
																"nodeType": "VariableDeclaration",
																"scope": 311,
																"src": "3487:24:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 281,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3487:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 291,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 287,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3538:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$576",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$576",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3530:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 285,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3530:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3530:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 289,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "3545:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 283,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 274,
																	"src": "3514:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$167",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3520:9:4",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 144,
																"src": "3514:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3514:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3487:66:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 292,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 282,
																"src": "3571:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 293,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "3590:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3571:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 302,
														"nodeType": "IfStatement",
														"src": "3567:160:4",
														"trueBody": {
															"id": 301,
															"nodeType": "Block",
															"src": "3609:118:4",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 296,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 276,
																				"src": "3667:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 297,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 282,
																				"src": "3676:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 298,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 278,
																				"src": "3694:17:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 295,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 188,
																			"src": "3634:32:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3634:78:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 300,
																	"nodeType": "RevertStatement",
																	"src": "3627:85:4"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 304,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 274,
																	"src": "3753:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$167",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 305,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "3760:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 306,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 282,
																		"src": "3769:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 307,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 278,
																		"src": "3788:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3769:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$167",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 303,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 360,
																"src": "3740:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 309,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3740:66:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 310,
														"nodeType": "ExpressionStatement",
														"src": "3740:66:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "2693:657:4",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3364:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3393:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "3386:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 273,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 272,
														"name": "IERC20",
														"nameLocations": [
															"3386:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "3386:6:4"
													},
													"referencedDeclaration": 167,
													"src": "3386:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3408:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "3400:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3400:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "3425:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "3417:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3417:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3385:58:4"
									},
									"returnParameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3453:0:4"
									},
									"scope": 576,
									"src": "3355:468:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "4477:303:4",
										"statements": [
											{
												"assignments": [
													325
												],
												"declarations": [
													{
														"constant": false,
														"id": 325,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "4500:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 359,
														"src": "4487:25:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 324,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4487:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 334,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 328,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 317,
																"src": "4530:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$167",
																	"typeString": "contract IERC20"
																}
															},
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4536:7:4",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 154,
															"src": "4530:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 330,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 319,
																	"src": "4546:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 331,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 321,
																	"src": "4555:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 332,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4545:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 326,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4515:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4519:10:4",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "4515:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4515:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4487:75:4"
											},
											{
												"condition": {
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4577:45:4",
													"subExpression": {
														"arguments": [
															{
																"id": 336,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 317,
																"src": "4602:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$167",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 337,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 325,
																"src": "4609:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$167",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 335,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "4578:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 338,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4578:44:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "4573:201:4",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "4624:150:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 341,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 317,
																		"src": "4658:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 344,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 317,
																					"src": "4680:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$167",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 345,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4686:7:4",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 154,
																				"src": "4680:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 346,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 319,
																						"src": "4696:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 347,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4705:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 348,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4695:12:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 342,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4665:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 343,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4669:10:4",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "4665:14:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 349,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4665:43:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 340,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 534,
																	"src": "4638:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4638:71:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 351,
															"nodeType": "ExpressionStatement",
															"src": "4638:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 353,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 317,
																		"src": "4743:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 354,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 325,
																		"src": "4750:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 352,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 534,
																	"src": "4723:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4723:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 356,
															"nodeType": "ExpressionStatement",
															"src": "4723:40:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "3829:566:4",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "4409:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4429:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "4422:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 316,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 315,
														"name": "IERC20",
														"nameLocations": [
															"4422:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "4422:6:4"
													},
													"referencedDeclaration": 167,
													"src": "4422:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4444:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "4436:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4436:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4461:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "4453:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4453:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4421:46:4"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4477:0:4"
									},
									"scope": 576,
									"src": "4400:380:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "5227:219:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 373,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "5241:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5244:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5241:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5249:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5241:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 376,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5259:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5241:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 391,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "5327:39:4",
														"subExpression": {
															"arguments": [
																{
																	"id": 387,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 366,
																	"src": "5350:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 388,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 368,
																	"src": "5354:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 389,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 370,
																	"src": "5361:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 385,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 364,
																	"src": "5328:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5334:15:4",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 32,
																"src": "5328:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5328:38:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 400,
													"nodeType": "IfStatement",
													"src": "5323:117:4",
													"trueBody": {
														"id": 399,
														"nodeType": "Block",
														"src": "5368:72:4",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 395,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 364,
																					"src": "5422:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 394,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5414:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 393,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5414:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 396,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5414:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 392,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 179,
																		"src": "5389:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5389:40:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 398,
																"nodeType": "RevertStatement",
																"src": "5382:47:4"
															}
														]
													}
												},
												"id": 401,
												"nodeType": "IfStatement",
												"src": "5237:203:4",
												"trueBody": {
													"id": 384,
													"nodeType": "Block",
													"src": "5262:55:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 379,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 364,
																		"src": "5289:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 380,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 366,
																		"src": "5296:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 381,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 368,
																		"src": "5300:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 378,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 212,
																	"src": "5276:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 382,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5276:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 383,
															"nodeType": "ExpressionStatement",
															"src": "5276:30:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "4786:333:4",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5133:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5165:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "5156:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 363,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 362,
														"name": "IERC1363",
														"nameLocations": [
															"5156:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "5156:8:4"
													},
													"referencedDeclaration": 81,
													"src": "5156:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5180:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "5172:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5172:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5192:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "5184:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5184:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5212:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "5199:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 369,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5199:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5155:62:4"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5227:0:4"
									},
									"scope": 576,
									"src": "5124:322:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "5965:239:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 418,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "5979:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5982:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5979:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5987:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5979:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 421,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5997:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5979:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 438,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6075:49:4",
														"subExpression": {
															"arguments": [
																{
																	"id": 433,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 409,
																	"src": "6102:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 434,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "6108:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 435,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 413,
																	"src": "6112:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 436,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 415,
																	"src": "6119:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 431,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 407,
																	"src": "6076:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6082:19:4",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 58,
																"src": "6076:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6076:48:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 447,
													"nodeType": "IfStatement",
													"src": "6071:127:4",
													"trueBody": {
														"id": 446,
														"nodeType": "Block",
														"src": "6126:72:4",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 442,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 407,
																					"src": "6180:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 441,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6172:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 440,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6172:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 443,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6172:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 439,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 179,
																		"src": "6147:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 444,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6147:40:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 445,
																"nodeType": "RevertStatement",
																"src": "6140:47:4"
															}
														]
													}
												},
												"id": 448,
												"nodeType": "IfStatement",
												"src": "5975:223:4",
												"trueBody": {
													"id": 430,
													"nodeType": "Block",
													"src": "6000:65:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 424,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 407,
																		"src": "6031:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 425,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 409,
																		"src": "6038:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 426,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 411,
																		"src": "6044:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 427,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 413,
																		"src": "6048:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 423,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 239,
																	"src": "6014:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6014:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 429,
															"nodeType": "ExpressionStatement",
															"src": "6014:40:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "5452:341:4",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "5807:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5852:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "5843:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 406,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 405,
														"name": "IERC1363",
														"nameLocations": [
															"5843:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "5843:8:4"
													},
													"referencedDeclaration": 81,
													"src": "5843:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5875:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "5867:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5867:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5897:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "5889:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5889:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5917:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "5909:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5909:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5945:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "5932:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 414,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5932:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5833:122:4"
									},
									"returnParameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5965:0:4"
									},
									"scope": 576,
									"src": "5798:406:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "6971:218:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 463,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 456,
																"src": "6985:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6988:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6985:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 465,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6993:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6985:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 466,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7003:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6985:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7071:38:4",
														"subExpression": {
															"arguments": [
																{
																	"id": 477,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 456,
																	"src": "7093:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 478,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 458,
																	"src": "7097:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 479,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 460,
																	"src": "7104:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 475,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 454,
																	"src": "7072:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7078:14:4",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 80,
																"src": "7072:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7072:37:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 490,
													"nodeType": "IfStatement",
													"src": "7067:116:4",
													"trueBody": {
														"id": 489,
														"nodeType": "Block",
														"src": "7111:72:4",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 485,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 454,
																					"src": "7165:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 484,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7157:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 483,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7157:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 486,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7157:14:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 482,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 179,
																		"src": "7132:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7132:40:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 488,
																"nodeType": "RevertStatement",
																"src": "7125:47:4"
															}
														]
													}
												},
												"id": 491,
												"nodeType": "IfStatement",
												"src": "6981:202:4",
												"trueBody": {
													"id": 474,
													"nodeType": "Block",
													"src": "7006:55:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 469,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 454,
																		"src": "7033:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 470,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 456,
																		"src": "7040:2:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 471,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 458,
																		"src": "7044:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 468,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 360,
																	"src": "7020:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7020:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 473,
															"nodeType": "ExpressionStatement",
															"src": "7020:30:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "6210:654:4",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "6878:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6909:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "6900:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 453,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 452,
														"name": "IERC1363",
														"nameLocations": [
															"6900:8:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "6900:8:4"
													},
													"referencedDeclaration": 81,
													"src": "6900:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6924:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "6916:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6916:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6936:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "6928:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6928:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6956:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "6943:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 459,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6943:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6899:62:4"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6971:0:4"
									},
									"scope": 576,
									"src": "6869:320:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "7756:650:4",
										"statements": [
											{
												"assignments": [
													503
												],
												"declarations": [
													{
														"constant": false,
														"id": 503,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "7774:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 533,
														"src": "7766:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 502,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7766:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 504,
												"nodeType": "VariableDeclarationStatement",
												"src": "7766:18:4"
											},
											{
												"assignments": [
													506
												],
												"declarations": [
													{
														"constant": false,
														"id": 506,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "7802:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 533,
														"src": "7794:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 505,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7794:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 507,
												"nodeType": "VariableDeclarationStatement",
												"src": "7794:19:4"
											},
											{
												"AST": {
													"nativeSrc": "7848:396:4",
													"nodeType": "YulBlock",
													"src": "7848:396:4",
													"statements": [
														{
															"nativeSrc": "7862:75:4",
															"nodeType": "YulVariableDeclaration",
															"src": "7862:75:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "7882:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7882:3:4"
																		},
																		"nativeSrc": "7882:5:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7882:5:4"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "7889:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "7889:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7896:1:4",
																		"nodeType": "YulLiteral",
																		"src": "7896:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7903:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "7903:4:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7909:4:4",
																				"nodeType": "YulLiteral",
																				"src": "7909:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7899:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7899:3:4"
																		},
																		"nativeSrc": "7899:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7899:15:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7922:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "7922:4:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7916:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "7916:5:4"
																		},
																		"nativeSrc": "7916:11:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7916:11:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7929:1:4",
																		"nodeType": "YulLiteral",
																		"src": "7929:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7932:4:4",
																		"nodeType": "YulLiteral",
																		"src": "7932:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "7877:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "7877:4:4"
																},
																"nativeSrc": "7877:60:4",
																"nodeType": "YulFunctionCall",
																"src": "7877:60:4"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "7866:7:4",
																	"nodeType": "YulTypedName",
																	"src": "7866:7:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7998:157:4",
																"nodeType": "YulBlock",
																"src": "7998:157:4",
																"statements": [
																	{
																		"nativeSrc": "8016:22:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8016:22:4",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8033:4:4",
																					"nodeType": "YulLiteral",
																					"src": "8033:4:4",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8027:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "8027:5:4"
																			},
																			"nativeSrc": "8027:11:4",
																			"nodeType": "YulFunctionCall",
																			"src": "8027:11:4"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8020:3:4",
																				"nodeType": "YulTypedName",
																				"src": "8020:3:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8070:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "8070:3:4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8075:1:4",
																					"nodeType": "YulLiteral",
																					"src": "8075:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8078:14:4",
																						"nodeType": "YulIdentifier",
																						"src": "8078:14:4"
																					},
																					"nativeSrc": "8078:16:4",
																					"nodeType": "YulFunctionCall",
																					"src": "8078:16:4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8055:14:4",
																				"nodeType": "YulIdentifier",
																				"src": "8055:14:4"
																			},
																			"nativeSrc": "8055:40:4",
																			"nodeType": "YulFunctionCall",
																			"src": "8055:40:4"
																		},
																		"nativeSrc": "8055:40:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "8055:40:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8119:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "8119:3:4"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8124:14:4",
																						"nodeType": "YulIdentifier",
																						"src": "8124:14:4"
																					},
																					"nativeSrc": "8124:16:4",
																					"nodeType": "YulFunctionCall",
																					"src": "8124:16:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8112:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "8112:6:4"
																			},
																			"nativeSrc": "8112:29:4",
																			"nodeType": "YulFunctionCall",
																			"src": "8112:29:4"
																		},
																		"nativeSrc": "8112:29:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "8112:29:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "7989:7:4",
																		"nodeType": "YulIdentifier",
																		"src": "7989:7:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7982:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7982:6:4"
																},
																"nativeSrc": "7982:15:4",
																"nodeType": "YulFunctionCall",
																"src": "7982:15:4"
															},
															"nativeSrc": "7979:176:4",
															"nodeType": "YulIf",
															"src": "7979:176:4"
														},
														{
															"nativeSrc": "8168:30:4",
															"nodeType": "YulAssignment",
															"src": "8168:30:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8182:14:4",
																	"nodeType": "YulIdentifier",
																	"src": "8182:14:4"
																},
																"nativeSrc": "8182:16:4",
																"nodeType": "YulFunctionCall",
																"src": "8182:16:4"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8168:10:4",
																	"nodeType": "YulIdentifier",
																	"src": "8168:10:4"
																}
															]
														},
														{
															"nativeSrc": "8211:23:4",
															"nodeType": "YulAssignment",
															"src": "8211:23:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8232:1:4",
																		"nodeType": "YulLiteral",
																		"src": "8232:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8226:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "8226:5:4"
																},
																"nativeSrc": "8226:8:4",
																"nodeType": "YulFunctionCall",
																"src": "8226:8:4"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8211:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "8211:11:4"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 499,
														"isOffset": false,
														"isSlot": false,
														"src": "7903:4:4",
														"valueSize": 1
													},
													{
														"declaration": 499,
														"isOffset": false,
														"isSlot": false,
														"src": "7922:4:4",
														"valueSize": 1
													},
													{
														"declaration": 503,
														"isOffset": false,
														"isSlot": false,
														"src": "8168:10:4",
														"valueSize": 1
													},
													{
														"declaration": 506,
														"isOffset": false,
														"isSlot": false,
														"src": "8211:11:4",
														"valueSize": 1
													},
													{
														"declaration": 497,
														"isOffset": false,
														"isSlot": false,
														"src": "7889:5:4",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 508,
												"nodeType": "InlineAssembly",
												"src": "7823:421:4"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 509,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "8258:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8272:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8258:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 522,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 520,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "8310:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8325:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8310:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8258:68:4",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 514,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 497,
																			"src": "8284:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$167",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$167",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 513,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8276:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 512,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8276:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8276:14:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8291:4:4",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8276:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8296:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8276:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8306:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8276:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 532,
												"nodeType": "IfStatement",
												"src": "8254:146:4",
												"trueBody": {
													"id": 531,
													"nodeType": "Block",
													"src": "8328:72:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 527,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 497,
																				"src": "8382:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$167",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$167",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 526,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8374:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 525,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8374:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8374:14:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 524,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 179,
																	"src": "8349:24:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 529,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8349:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 530,
															"nodeType": "RevertStatement",
															"src": "8342:47:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 494,
										"nodeType": "StructuredDocumentation",
										"src": "7195:486:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "7695:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7722:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "7715:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 496,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 495,
														"name": "IERC20",
														"nameLocations": [
															"7715:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "7715:6:4"
													},
													"referencedDeclaration": 167,
													"src": "7715:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7742:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 534,
												"src": "7729:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 498,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7729:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7714:33:4"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7756:0:4"
									},
									"scope": 576,
									"src": "7686:720:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "8997:391:4",
										"statements": [
											{
												"assignments": [
													546
												],
												"declarations": [
													{
														"constant": false,
														"id": 546,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9012:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "9007:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 545,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9007:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 547,
												"nodeType": "VariableDeclarationStatement",
												"src": "9007:12:4"
											},
											{
												"assignments": [
													549
												],
												"declarations": [
													{
														"constant": false,
														"id": 549,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9037:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "9029:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 548,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9029:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 550,
												"nodeType": "VariableDeclarationStatement",
												"src": "9029:18:4"
											},
											{
												"assignments": [
													552
												],
												"declarations": [
													{
														"constant": false,
														"id": 552,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9065:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 574,
														"src": "9057:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 551,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9057:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 553,
												"nodeType": "VariableDeclarationStatement",
												"src": "9057:19:4"
											},
											{
												"AST": {
													"nativeSrc": "9111:174:4",
													"nodeType": "YulBlock",
													"src": "9111:174:4",
													"statements": [
														{
															"nativeSrc": "9125:71:4",
															"nodeType": "YulAssignment",
															"src": "9125:71:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9141:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "9141:3:4"
																		},
																		"nativeSrc": "9141:5:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9141:5:4"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9148:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "9148:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9155:1:4",
																		"nodeType": "YulLiteral",
																		"src": "9155:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9162:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "9162:4:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9168:4:4",
																				"nodeType": "YulLiteral",
																				"src": "9168:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9158:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "9158:3:4"
																		},
																		"nativeSrc": "9158:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9158:15:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9181:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "9181:4:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9175:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "9175:5:4"
																		},
																		"nativeSrc": "9175:11:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9175:11:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9188:1:4",
																		"nodeType": "YulLiteral",
																		"src": "9188:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9191:4:4",
																		"nodeType": "YulLiteral",
																		"src": "9191:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9136:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "9136:4:4"
																},
																"nativeSrc": "9136:60:4",
																"nodeType": "YulFunctionCall",
																"src": "9136:60:4"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9125:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "9125:7:4"
																}
															]
														},
														{
															"nativeSrc": "9209:30:4",
															"nodeType": "YulAssignment",
															"src": "9209:30:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9223:14:4",
																	"nodeType": "YulIdentifier",
																	"src": "9223:14:4"
																},
																"nativeSrc": "9223:16:4",
																"nodeType": "YulFunctionCall",
																"src": "9223:16:4"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9209:10:4",
																	"nodeType": "YulIdentifier",
																	"src": "9209:10:4"
																}
															]
														},
														{
															"nativeSrc": "9252:23:4",
															"nodeType": "YulAssignment",
															"src": "9252:23:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9273:1:4",
																		"nodeType": "YulLiteral",
																		"src": "9273:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9267:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "9267:5:4"
																},
																"nativeSrc": "9267:8:4",
																"nodeType": "YulFunctionCall",
																"src": "9267:8:4"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9252:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "9252:11:4"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 540,
														"isOffset": false,
														"isSlot": false,
														"src": "9162:4:4",
														"valueSize": 1
													},
													{
														"declaration": 540,
														"isOffset": false,
														"isSlot": false,
														"src": "9181:4:4",
														"valueSize": 1
													},
													{
														"declaration": 549,
														"isOffset": false,
														"isSlot": false,
														"src": "9209:10:4",
														"valueSize": 1
													},
													{
														"declaration": 552,
														"isOffset": false,
														"isSlot": false,
														"src": "9252:11:4",
														"valueSize": 1
													},
													{
														"declaration": 546,
														"isOffset": false,
														"isSlot": false,
														"src": "9125:7:4",
														"valueSize": 1
													},
													{
														"declaration": 538,
														"isOffset": false,
														"isSlot": false,
														"src": "9148:5:4",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 554,
												"nodeType": "InlineAssembly",
												"src": "9086:199:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 555,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 546,
														"src": "9301:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 556,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "9313:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9327:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9313:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 567,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 552,
																		"src": "9364:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 568,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9379:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "9364:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9313:67:4",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 561,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 538,
																						"src": "9339:5:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$167",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$167",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 560,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9331:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 559,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "9331:7:4",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 562,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9331:14:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9346:4:4",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "9331:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9351:6:4",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "9331:26:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 565,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9360:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9331:30:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 571,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9312:69:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9301:80:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 544,
												"id": 573,
												"nodeType": "Return",
												"src": "9294:87:4"
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "8412:491:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "8917:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8948:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "8941:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$167",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 537,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 536,
														"name": "IERC20",
														"nameLocations": [
															"8941:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 167,
														"src": "8941:6:4"
													},
													"referencedDeclaration": 167,
													"src": "8941:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8968:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "8955:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 539,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8955:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8940:33:4"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "8991:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 542,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8991:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8990:6:4"
									},
									"scope": 576,
									"src": "8908:480:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 577,
							"src": "698:8692:4",
							"usedErrors": [
								179,
								188
							],
							"usedEvents": []
						}
					],
					"src": "115:9276:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							588
						]
					},
					"id": 589,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 578,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 579,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:5",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 588,
							"linearizedBaseContracts": [
								588
							],
							"name": "IERC165",
							"nameLocation": "432:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:5",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 587,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "818:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 581,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:5"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "861:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 584,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:5"
									},
									"scope": 588,
									"src": "791:76:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 589,
							"src": "422:447:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:5"
				},
				"id": 5
			},
			"contracts/PatientDataRevised.sol": {
				"ast": {
					"absolutePath": "contracts/PatientDataRevised.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC20": [
							167
						],
						"PatientDataManagement": [
							841
						],
						"SafeERC20": [
							576
						]
					},
					"id": 842,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 590,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 591,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 842,
							"sourceUnit": 168,
							"src": "60:56:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 592,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 842,
							"sourceUnit": 577,
							"src": "118:65:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "PatientDataManagement",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 841,
							"linearizedBaseContracts": [
								841
							],
							"name": "PatientDataManagement",
							"nameLocation": "196:21:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 596,
									"libraryName": {
										"id": 593,
										"name": "SafeERC20",
										"nameLocations": [
											"231:9:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 576,
										"src": "231:9:6"
									},
									"nodeType": "UsingForDirective",
									"src": "225:27:6",
									"typeName": {
										"id": 595,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 594,
											"name": "IERC20",
											"nameLocations": [
												"245:6:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 167,
											"src": "245:6:6"
										},
										"referencedDeclaration": 167,
										"src": "245:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$167",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "f7c618c1",
									"id": 599,
									"mutability": "mutable",
									"name": "rewardToken",
									"nameLocation": "298:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 841,
									"src": "284:25:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$167",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 598,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 597,
											"name": "IERC20",
											"nameLocations": [
												"284:6:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 167,
											"src": "284:6:6"
										},
										"referencedDeclaration": 167,
										"src": "284:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$167",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "d4ba8902",
									"id": 607,
									"mutability": "constant",
									"name": "TOKEN_REWARD",
									"nameLocation": "375:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 841,
									"src": "351:54:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 600,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "351:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_10000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000"
										},
										"id": 606,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130",
											"id": 601,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "390:2:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													},
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 602,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "396:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"hexValue": "3138",
														"id": 603,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "402:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "396:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000_by_1",
														"typeString": "int_const 1000000000000000000"
													}
												}
											],
											"id": 605,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "395:10:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "390:15:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "PatientDataManagement.HealthData",
									"id": 618,
									"members": [
										{
											"constant": false,
											"id": 609,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "530:9:6",
											"nodeType": "VariableDeclaration",
											"scope": 618,
											"src": "522:17:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 608,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "522:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 611,
											"mutability": "mutable",
											"name": "glucoseLevel",
											"nameLocation": "558:12:6",
											"nodeType": "VariableDeclaration",
											"scope": 618,
											"src": "550:20:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 610,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "550:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 613,
											"mutability": "mutable",
											"name": "medication",
											"nameLocation": "588:10:6",
											"nodeType": "VariableDeclaration",
											"scope": 618,
											"src": "581:17:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 612,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "581:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 615,
											"mutability": "mutable",
											"name": "meals",
											"nameLocation": "616:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 618,
											"src": "609:12:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 614,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "609:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 617,
											"mutability": "mutable",
											"name": "exercise",
											"nameLocation": "639:8:6",
											"nodeType": "VariableDeclaration",
											"scope": 618,
											"src": "632:15:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 616,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "632:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "HealthData",
									"nameLocation": "500:10:6",
									"nodeType": "StructDefinition",
									"scope": 841,
									"src": "493:162:6",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 624,
									"mutability": "mutable",
									"name": "patientData",
									"nameLocation": "768:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 841,
									"src": "727:52:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_HealthData_$618_storage_$dyn_storage_$",
										"typeString": "mapping(address => struct PatientDataManagement.HealthData[])"
									},
									"typeName": {
										"id": 623,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 619,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "735:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "727:32:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_HealthData_$618_storage_$dyn_storage_$",
											"typeString": "mapping(address => struct PatientDataManagement.HealthData[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 621,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 620,
													"name": "HealthData",
													"nameLocations": [
														"746:10:6"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 618,
													"src": "746:10:6"
												},
												"referencedDeclaration": 618,
												"src": "746:10:6",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_HealthData_$618_storage_ptr",
													"typeString": "struct PatientDataManagement.HealthData"
												}
											},
											"id": 622,
											"nodeType": "ArrayTypeName",
											"src": "746:12:6",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_HealthData_$618_storage_$dyn_storage_ptr",
												"typeString": "struct PatientDataManagement.HealthData[]"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 630,
									"mutability": "mutable",
									"name": "accessPermissions",
									"nameLocation": "915:17:6",
									"nodeType": "VariableDeclaration",
									"scope": 841,
									"src": "862:70:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 629,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 625,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "870:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "862:44:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 628,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 626,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "889:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "881:24:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 627,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "900:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "46b8550ac8f5f68f14d6a3540963578c9733e4ff2a4e7ca11cccdeeb0b521d67",
									"id": 638,
									"name": "DataLogged",
									"nameLocation": "996:10:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"indexed": true,
												"mutability": "mutable",
												"name": "patient",
												"nameLocation": "1023:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "1007:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1007:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1040:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "1032:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1032:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "1059:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "1051:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1051:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1006:60:6"
									},
									"src": "990:77:6"
								},
								{
									"anonymous": false,
									"eventSelector": "09c705c294119a93fb8ea4861ef048d5884d9504575b35eb38c7ea7705cf28b0",
									"id": 648,
									"name": "AccessUpdated",
									"nameLocation": "1137:13:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"indexed": true,
												"mutability": "mutable",
												"name": "patient",
												"nameLocation": "1167:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "1151:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"indexed": true,
												"mutability": "mutable",
												"name": "accessor",
												"nameLocation": "1192:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "1176:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"indexed": false,
												"mutability": "mutable",
												"name": "isGranted",
												"nameLocation": "1207:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "1202:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 643,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1202:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 646,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "1226:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "1218:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1218:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1150:83:6"
									},
									"src": "1131:103:6"
								},
								{
									"anonymous": false,
									"eventSelector": "896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e430",
									"id": 654,
									"name": "TokensClaimed",
									"nameLocation": "1294:13:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 650,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1324:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "1308:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1308:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1338:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "1330:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1330:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1307:38:6"
									},
									"src": "1288:58:6"
								},
								{
									"body": {
										"id": 675,
										"nodeType": "Block",
										"src": "1439:124:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 660,
																"name": "_rewardToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 656,
																"src": "1458:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1482:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1474:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 661,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1474:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1474:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1458:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420746f6b656e2061646472657373",
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1486:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															},
															"value": "Invalid token address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d34df3e6e5f402d3417b1a16a0a8a7541b184d7fb338e177a15236f4037e3743",
																"typeString": "literal_string \"Invalid token address\""
															}
														],
														"id": 659,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1450:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1450:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 668,
												"nodeType": "ExpressionStatement",
												"src": "1450:60:6"
											},
											{
												"expression": {
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 669,
														"name": "rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "1521:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$167",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 671,
																"name": "_rewardToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 656,
																"src": "1542:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 670,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "1535:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$167_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 672,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1535:20:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$167",
															"typeString": "contract IERC20"
														}
													},
													"src": "1521:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$167",
														"typeString": "contract IERC20"
													}
												},
												"id": 674,
												"nodeType": "ExpressionStatement",
												"src": "1521:34:6"
											}
										]
									},
									"id": 676,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "_rewardToken",
												"nameLocation": "1425:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "1417:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1417:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1416:22:6"
									},
									"returnParameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1439:0:6"
									},
									"scope": 841,
									"src": "1405:158:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 723,
										"nodeType": "Block",
										"src": "1796:478:6",
										"statements": [
											{
												"assignments": [
													689
												],
												"declarations": [
													{
														"constant": false,
														"id": 689,
														"mutability": "mutable",
														"name": "newData",
														"nameLocation": "1825:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 723,
														"src": "1807:25:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_HealthData_$618_memory_ptr",
															"typeString": "struct PatientDataManagement.HealthData"
														},
														"typeName": {
															"id": 688,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 687,
																"name": "HealthData",
																"nameLocations": [
																	"1807:10:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 618,
																"src": "1807:10:6"
															},
															"referencedDeclaration": 618,
															"src": "1807:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_HealthData_$618_storage_ptr",
																"typeString": "struct PatientDataManagement.HealthData"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 698,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 691,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1872:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 692,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1878:9:6",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1872:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 693,
															"name": "_glucoseLevel",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "1916:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 694,
															"name": "_medication",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 680,
															"src": "1956:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 695,
															"name": "_meals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "1989:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 696,
															"name": "_exercise",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "2020:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 690,
														"name": "HealthData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "1835:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_HealthData_$618_storage_ptr_$",
															"typeString": "type(struct PatientDataManagement.HealthData storage pointer)"
														}
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"1861:9:6",
														"1902:12:6",
														"1944:10:6",
														"1982:5:6",
														"2010:8:6"
													],
													"names": [
														"timestamp",
														"glucoseLevel",
														"medication",
														"meals",
														"exercise"
													],
													"nodeType": "FunctionCall",
													"src": "1835:206:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_HealthData_$618_memory_ptr",
														"typeString": "struct PatientDataManagement.HealthData memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1807:234:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 704,
															"name": "newData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "2081:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_HealthData_$618_memory_ptr",
																"typeString": "struct PatientDataManagement.HealthData memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_HealthData_$618_memory_ptr",
																"typeString": "struct PatientDataManagement.HealthData memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 699,
																"name": "patientData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 624,
																"src": "2052:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_HealthData_$618_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct PatientDataManagement.HealthData storage ref[] storage ref)"
																}
															},
															"id": 702,
															"indexExpression": {
																"expression": {
																	"id": 700,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2064:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 701,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2068:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2064:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2052:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_HealthData_$618_storage_$dyn_storage",
																"typeString": "struct PatientDataManagement.HealthData storage ref[] storage ref"
															}
														},
														"id": 703,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2076:4:6",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2052:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_HealthData_$618_storage_$dyn_storage_ptr_$_t_struct$_HealthData_$618_storage_$returns$__$attached_to$_t_array$_t_struct$_HealthData_$618_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct PatientDataManagement.HealthData storage ref[] storage pointer,struct PatientDataManagement.HealthData storage ref)"
														}
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2052:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 706,
												"nodeType": "ExpressionStatement",
												"src": "2052:37:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 710,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2170:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2174:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2170:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 712,
															"name": "TOKEN_REWARD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "2182:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 707,
															"name": "rewardToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "2145:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 709,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2157:12:6",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 212,
														"src": "2145:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$167_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2145:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 714,
												"nodeType": "ExpressionStatement",
												"src": "2145:50:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 716,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2224:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2228:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2224:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 718,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2236:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2242:9:6",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2236:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 720,
															"name": "TOKEN_REWARD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "2253:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 715,
														"name": "DataLogged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "2213:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2213:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 722,
												"nodeType": "EmitStatement",
												"src": "2208:58:6"
											}
										]
									},
									"functionSelector": "a94f5766",
									"id": 724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "logHealthData",
									"nameLocation": "1635:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "_glucoseLevel",
												"nameLocation": "1667:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "1659:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1659:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "_medication",
												"nameLocation": "1705:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "1691:25:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 679,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1691:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "_meals",
												"nameLocation": "1741:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "1727:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 681,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1727:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "_exercise",
												"nameLocation": "1772:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "1758:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 683,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1758:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1648:140:6"
									},
									"returnParameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:0:6"
									},
									"scope": 841,
									"src": "1626:648:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 756,
										"nodeType": "Block",
										"src": "2417:283:6",
										"statements": [
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 731,
																"name": "accessPermissions",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 630,
																"src": "2428:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 735,
															"indexExpression": {
																"expression": {
																	"id": 732,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2446:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 733,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2450:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2446:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2428:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "_accessor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 726,
															"src": "2458:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2428:40:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "_isGranted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "2471:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2428:53:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "2428:53:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 743,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2587:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2591:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2587:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 745,
															"name": "TOKEN_REWARD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "2599:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 740,
															"name": "rewardToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "2562:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 742,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2574:12:6",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 212,
														"src": "2562:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$167_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2562:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 747,
												"nodeType": "ExpressionStatement",
												"src": "2562:50:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 749,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2644:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2648:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2644:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 751,
															"name": "_accessor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 726,
															"src": "2656:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 752,
															"name": "_isGranted",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 728,
															"src": "2667:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 753,
															"name": "TOKEN_REWARD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "2679:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 748,
														"name": "AccessUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "2630:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,bool,uint256)"
														}
													},
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2630:62:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 755,
												"nodeType": "EmitStatement",
												"src": "2625:67:6"
											}
										]
									},
									"functionSelector": "0c66f928",
									"id": 757,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateAccess",
									"nameLocation": "2361:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "_accessor",
												"nameLocation": "2382:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "2374:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2374:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "_isGranted",
												"nameLocation": "2398:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "2393:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 727,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2393:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2373:36:6"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2417:0:6"
									},
									"scope": 841,
									"src": "2352:348:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 785,
										"nodeType": "Block",
										"src": "2862:194:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 767,
																	"name": "_patient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 759,
																	"src": "2895:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 768,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2907:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2911:6:6",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2907:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2895:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 771,
																		"name": "accessPermissions",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 630,
																		"src": "2921:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																			"typeString": "mapping(address => mapping(address => bool))"
																		}
																	},
																	"id": 773,
																	"indexExpression": {
																		"id": 772,
																		"name": "_patient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 759,
																		"src": "2939:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2921:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 776,
																"indexExpression": {
																	"expression": {
																		"id": 774,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2949:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2953:6:6",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2949:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2921:39:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2895:65:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373206e6f7420617574686f72697a6564",
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2975:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_35524723070ac5375c7260be238565eacc4e8a59252edddbe0aa4f3cd94db18b",
																"typeString": "literal_string \"Access not authorized\""
															},
															"value": "Access not authorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_35524723070ac5375c7260be238565eacc4e8a59252edddbe0aa4f3cd94db18b",
																"typeString": "literal_string \"Access not authorized\""
															}
														],
														"id": 766,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2873:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2873:136:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 780,
												"nodeType": "ExpressionStatement",
												"src": "2873:136:6"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 781,
														"name": "patientData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "3027:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_HealthData_$618_storage_$dyn_storage_$",
															"typeString": "mapping(address => struct PatientDataManagement.HealthData storage ref[] storage ref)"
														}
													},
													"id": 783,
													"indexExpression": {
														"id": 782,
														"name": "_patient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 759,
														"src": "3039:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3027:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_HealthData_$618_storage_$dyn_storage",
														"typeString": "struct PatientDataManagement.HealthData storage ref[] storage ref"
													}
												},
												"functionReturnParameters": 765,
												"id": 784,
												"nodeType": "Return",
												"src": "3020:28:6"
											}
										]
									},
									"functionSelector": "05c17521",
									"id": 786,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "viewHealthData",
									"nameLocation": "2787:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "_patient",
												"nameLocation": "2810:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "2802:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2801:18:6"
									},
									"returnParameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "2841:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_HealthData_$618_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct PatientDataManagement.HealthData[]"
												},
												"typeName": {
													"baseType": {
														"id": 762,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 761,
															"name": "HealthData",
															"nameLocations": [
																"2841:10:6"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 618,
															"src": "2841:10:6"
														},
														"referencedDeclaration": 618,
														"src": "2841:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_HealthData_$618_storage_ptr",
															"typeString": "struct PatientDataManagement.HealthData"
														}
													},
													"id": 763,
													"nodeType": "ArrayTypeName",
													"src": "2841:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_HealthData_$618_storage_$dyn_storage_ptr",
														"typeString": "struct PatientDataManagement.HealthData[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2840:21:6"
									},
									"scope": 841,
									"src": "2778:278:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "3182:279:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 792,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 788,
																"src": "3201:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 793,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3210:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3201:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3213:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															},
															"value": "Amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															}
														],
														"id": 791,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3193:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3193:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "3193:55:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 803,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3297:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_PatientDataManagement_$841",
																					"typeString": "contract PatientDataManagement"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_PatientDataManagement_$841",
																					"typeString": "contract PatientDataManagement"
																				}
																			],
																			"id": 802,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3289:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 801,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3289:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3289:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 799,
																		"name": "rewardToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 599,
																		"src": "3267:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$167",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3279:9:6",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 124,
																	"src": "3267:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 805,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3267:36:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 806,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 788,
																"src": "3307:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3267:46:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420636f6e74726163742062616c616e6365",
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3315:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
																"typeString": "literal_string \"Insufficient contract balance\""
															},
															"value": "Insufficient contract balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
																"typeString": "literal_string \"Insufficient contract balance\""
															}
														],
														"id": 798,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3259:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3259:88:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 810,
												"nodeType": "ExpressionStatement",
												"src": "3259:88:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 814,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3385:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3389:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3385:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 816,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "3397:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 811,
															"name": "rewardToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "3360:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3372:12:6",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 212,
														"src": "3360:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$167_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$167_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3360:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 818,
												"nodeType": "ExpressionStatement",
												"src": "3360:44:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 820,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3434:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3438:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3434:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 822,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "3446:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 819,
														"name": "TokensClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "3420:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3420:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 824,
												"nodeType": "EmitStatement",
												"src": "3415:38:6"
											}
										]
									},
									"functionSelector": "46e04a2f",
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimTokens",
									"nameLocation": "3147:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3167:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "3159:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3159:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3158:16:6"
									},
									"returnParameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3182:0:6"
									},
									"scope": 841,
									"src": "3138:323:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 839,
										"nodeType": "Block",
										"src": "3595:62:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 835,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3643:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PatientDataManagement_$841",
																		"typeString": "contract PatientDataManagement"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PatientDataManagement_$841",
																		"typeString": "contract PatientDataManagement"
																	}
																],
																"id": 834,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3635:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 833,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3635:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3635:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 831,
															"name": "rewardToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "3613:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$167",
																"typeString": "contract IERC20"
															}
														},
														"id": 832,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3625:9:6",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 124,
														"src": "3613:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3613:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 830,
												"id": 838,
												"nodeType": "Return",
												"src": "3606:43:6"
											}
										]
									},
									"functionSelector": "9e9aed62",
									"id": 840,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contractTokenBalance",
									"nameLocation": "3542:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3562:2:6"
									},
									"returnParameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "3586:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3586:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3585:9:6"
									},
									"scope": 841,
									"src": "3533:124:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 842,
							"src": "187:3473:6",
							"usedErrors": [
								179
							],
							"usedEvents": [
								638,
								648,
								654
							]
						}
					],
					"src": "33:3629:6"
				},
				"id": 6
			}
		}
	}
}